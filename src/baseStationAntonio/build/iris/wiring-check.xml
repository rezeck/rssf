<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="16:BaseStationAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b72236ed420"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b72236ea6e8"/></to>
    </wire>
    <wire loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b72236ea6e8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b72236f7c50"/></to>
    </wire>
    <wire loc="18:BaseStationAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2b72238b0be0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b722397d340"/></to>
    </wire>
    <wire loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b722397d340"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b72239ada78"/></to>
    </wire>
    <wire loc="19:BaseStationAppC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b7223928728"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b72239792c8"/></to>
    </wire>
    <wire loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b72239792c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b72239aaaa8"/></to>
    </wire>
    <wire loc="20:BaseStationAppC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b72238ae3c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b722398f400"/></to>
    </wire>
    <wire loc="68:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b722398f400"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b72239a9c38"/></to>
    </wire>
    <wire loc="21:BaseStationAppC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b7223933848"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b722398dac8"/></to>
    </wire>
    <wire loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b722398dac8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b72239be2a8"/></to>
    </wire>
    <wire loc="22:BaseStationAppC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x2b72239521d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b722398a758"/></to>
    </wire>
    <wire loc="73:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b722398a758"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b72239bd020"/></to>
    </wire>
    <wire loc="24:BaseStationAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b72238b5848"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b722451ba38"/></to>
    </wire>
    <wire loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b722451ba38"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b72245812e8"/></to>
    </wire>
    <wire loc="25:BaseStationAppC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x2b722393bcc8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b7224518aa8"/></to>
    </wire>
    <wire loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b7224518aa8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b722450fb60"/></to>
    </wire>
    <wire loc="26:BaseStationAppC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x2b7223951020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b7224517c38"/></to>
    </wire>
    <wire loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b7224517c38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b72245429a8"/></to>
    </wire>
    <wire loc="27:BaseStationAppC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x2b72239516a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b72245162a8"/></to>
    </wire>
    <wire loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b72245162a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b7224540578"/></to>
    </wire>
    <wire loc="28:BaseStationAppC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x2b7223950508"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b7224514020"/></to>
    </wire>
    <wire loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b7224514020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b7224541020"/></to>
    </wire>
    <wire loc="30:BaseStationAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b722394e080"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b72248bd880"/></to>
    </wire>
    <wire loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b72248bd880"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b72248b5110"/></to>
    </wire>
    <wire loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b72236e9ae8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2b72247657f8"/></to>
    </wire>
    <wire loc="73:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b72236e9ae8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2b7224760688"/></to>
    </wire>
    <wire loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b72236e9ae8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b72246df610"/></to>
    </wire>
    <wire loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b72236e9ae8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7224584bb0"/></to>
    </wire>
    <wire loc="96:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b72236e9ae8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7224edd5e8"/></to>
    </wire>
    <wire loc="119:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b72236e9ae8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b7224152c70"/></to>
    </wire>
    <wire loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b72236e9ae8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7223f3c4e0"/></to>
    </wire>
    <wire loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b72236e9ae8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7223e8c198"/></to>
    </wire>
    <wire loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b72236e9ae8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b7224da9430"/></to>
    </wire>
    <wire loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b72236e9ae8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7223d53238"/></to>
    </wire>
    <wire loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b72236e9ae8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7224d73de8"/></to>
    </wire>
    <wire loc="96:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b72236e9ae8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7224c96438"/></to>
    </wire>
    <wire loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b7223899308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b72235f8698"/></to>
    </wire>
    <wire loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b72235f8698"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b72236a3d88"/></to>
    </wire>
    <wire loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b7223899ce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b7224254870"/></to>
    </wire>
    <wire loc="122:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b7223899ce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b72241521b8"/></to>
    </wire>
    <wire loc="68:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b7223899ce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b72236ebaa0"/></to>
    </wire>
    <wire loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b72236ebaa0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b72236fc298"/></to>
    </wire>
    <wire loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b7223898418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b72236e9ae8"/></to>
    </wire>
    <wire loc="26:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b72236f5690"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7224899bc8"/></to>
    </wire>
    <wire loc="26:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b72236f5690"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7224421dc0"/></to>
    </wire>
    <wire loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b72236f1970"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b722387cae0"/></to>
    </wire>
    <wire loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b72236fa060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b722387c4b0"/></to>
    </wire>
    <wire loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b72236fc938"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b72248e8460"/></to>
    </wire>
    <wire loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b72236fc938"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b72236fe730"/></to>
    </wire>
    <wire loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b72236fe730"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b7223701180"/></to>
    </wire>
    <wire loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b72236fedc0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b72236f5690"/></to>
    </wire>
    <wire loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b7223708388"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b722371ae00"/></to>
    </wire>
    <wire loc="141:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b722371ae00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b7223792430"/></to>
    </wire>
    <wire loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b72237004f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b72236fedc0"/></to>
    </wire>
    <wire loc="191:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b7223744968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7223830520"/></to>
    </wire>
    <wire loc="165:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b722372e4d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b72237bf020"/></to>
    </wire>
    <wire loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b72237bf020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224a44100"/></to>
    </wire>
    <wire loc="176:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b72237334d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b72237d3d60"/></to>
    </wire>
    <wire loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b72237d3d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224a8f100"/></to>
    </wire>
    <wire loc="185:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b72237491a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b72237e88c8"/></to>
    </wire>
    <wire loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b72237e88c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224b41100"/></to>
    </wire>
    <wire loc="196:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x2b722374e658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b722383fc38"/></to>
    </wire>
    <wire loc="143:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b72237171a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b72237a0740"/></to>
    </wire>
    <wire loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b72237a0740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b72248f7c38"/></to>
    </wire>
    <wire loc="183:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b722373de00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b72237d85b8"/></to>
    </wire>
    <wire loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b72237d85b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224b47100"/></to>
    </wire>
    <wire loc="146:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b72237154d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b72237a9930"/></to>
    </wire>
    <wire loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b72237a9930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224955180"/></to>
    </wire>
    <wire loc="157:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b7223727658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b72237bc740"/></to>
    </wire>
    <wire loc="68:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b72237bc740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b72249f3100"/></to>
    </wire>
    <wire loc="168:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b722372b968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b72237ce430"/></to>
    </wire>
    <wire loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b72237ce430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224a3b100"/></to>
    </wire>
    <wire loc="179:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b7223740968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b72237cf120"/></to>
    </wire>
    <wire loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b72237cf120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224ae3100"/></to>
    </wire>
    <wire loc="138:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b722370f968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b7223795020"/></to>
    </wire>
    <wire loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b7223795020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224906c38"/></to>
    </wire>
    <wire loc="149:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b7223720968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b72237a6d60"/></to>
    </wire>
    <wire loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b72237a6d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b72249a4100"/></to>
    </wire>
    <wire loc="160:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b7223723af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b72237b8bd8"/></to>
    </wire>
    <wire loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b72237b8bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b72249ea100"/></to>
    </wire>
    <wire loc="171:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b7223738e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b72237cb8c8"/></to>
    </wire>
    <wire loc="73:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b72237cb8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224a32100"/></to>
    </wire>
    <wire loc="188:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b7223746658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b72237e4d60"/></to>
    </wire>
    <wire loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b72237e4d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224b38100"/></to>
    </wire>
    <wire loc="194:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b7223750348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7223835c38"/></to>
    </wire>
    <wire loc="174:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b72237351a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b72237d5a50"/></to>
    </wire>
    <wire loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b72237d5a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224a95100"/></to>
    </wire>
    <wire loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b7223792430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b72248fdc38"/></to>
    </wire>
    <wire loc="152:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b722371c020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b72237a2120"/></to>
    </wire>
    <wire loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b72237a2120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b722499b100"/></to>
    </wire>
    <wire loc="192:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b7223742020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b722382bcd8"/></to>
    </wire>
    <wire loc="155:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b7223729348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b72237ac500"/></to>
    </wire>
    <wire loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b72237ac500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b72249f9180"/></to>
    </wire>
    <wire loc="166:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b722372d658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b72237be120"/></to>
    </wire>
    <wire loc="68:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b72237be120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224a41100"/></to>
    </wire>
    <wire loc="177:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b7223732658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b72237d2e18"/></to>
    </wire>
    <wire loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b72237d2e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224ae9100"/></to>
    </wire>
    <wire loc="186:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b7223748348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b72237e7a50"/></to>
    </wire>
    <wire loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b72237e7a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224b3e100"/></to>
    </wire>
    <wire loc="144:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b7223716348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b722379f8c8"/></to>
    </wire>
    <wire loc="73:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b722379f8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224950c38"/></to>
    </wire>
    <wire loc="147:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b7223714658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b72237a8a50"/></to>
    </wire>
    <wire loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b72237a8a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b72249aa100"/></to>
    </wire>
    <wire loc="158:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b72237267e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b72237bb8c8"/></to>
    </wire>
    <wire loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b72237bb8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b72249f0100"/></to>
    </wire>
    <wire loc="169:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b722372aaf0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b72237cd5b8"/></to>
    </wire>
    <wire loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b72237cd5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224a38100"/></to>
    </wire>
    <wire loc="180:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b722373faf0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b72237e02a8"/></to>
    </wire>
    <wire loc="73:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b72237e02a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224ae0100"/></to>
    </wire>
    <wire loc="139:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b722370eaf0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b7223794120"/></to>
    </wire>
    <wire loc="68:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b7223794120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224903c38"/></to>
    </wire>
    <wire loc="150:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b722371faf0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b72237a5e18"/></to>
    </wire>
    <wire loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b72237a5e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b72249a1100"/></to>
    </wire>
    <wire loc="161:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b7223722c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b72237b7d60"/></to>
    </wire>
    <wire loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b72237b7d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b72249e7100"/></to>
    </wire>
    <wire loc="189:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b72237457e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b72237e3e18"/></to>
    </wire>
    <wire loc="73:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b72237e3e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224b35100"/></to>
    </wire>
    <wire loc="164:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b722372f020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b72237c2e40"/></to>
    </wire>
    <wire loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b72237c2e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224a47180"/></to>
    </wire>
    <wire loc="175:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b7223734348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b72237d4bd8"/></to>
    </wire>
    <wire loc="68:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b72237d4bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224a92100"/></to>
    </wire>
    <wire loc="184:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b722373b020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b72237e9740"/></to>
    </wire>
    <wire loc="68:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b72237e9740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224b44100"/></to>
    </wire>
    <wire loc="195:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b722374f4d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b72238433e0"/></to>
    </wire>
    <wire loc="142:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b7223718020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b72237a15b8"/></to>
    </wire>
    <wire loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b72237a15b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b72248fac38"/></to>
    </wire>
    <wire loc="153:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b722371b1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b72237b22a8"/></to>
    </wire>
    <wire loc="73:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b72237b22a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224998100"/></to>
    </wire>
    <wire loc="182:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b722373ec78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b72237d9500"/></to>
    </wire>
    <wire loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b72237d9500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224aed180"/></to>
    </wire>
    <wire loc="156:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b72237284d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b72237ab5b8"/></to>
    </wire>
    <wire loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b72237ab5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b72249f6100"/></to>
    </wire>
    <wire loc="167:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b722372c7e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b72237bd2a8"/></to>
    </wire>
    <wire loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b72237bd2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224a3e100"/></to>
    </wire>
    <wire loc="178:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b72237417e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b72237d0020"/></to>
    </wire>
    <wire loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b72237d0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224ae6100"/></to>
    </wire>
    <wire loc="187:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b72237474d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b72237e6bd8"/></to>
    </wire>
    <wire loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b72237e6bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224b3b100"/></to>
    </wire>
    <wire loc="137:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b72237037a8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b7223797dc0"/></to>
    </wire>
    <wire loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b7223797dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224909ca0"/></to>
    </wire>
    <wire loc="148:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b72237217e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b72237a7bd8"/></to>
    </wire>
    <wire loc="68:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b72237a7bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b72249a7100"/></to>
    </wire>
    <wire loc="159:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b7223725968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b72237b9a50"/></to>
    </wire>
    <wire loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b72237b9a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b72249ed100"/></to>
    </wire>
    <wire loc="170:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b7223739c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b72237cc740"/></to>
    </wire>
    <wire loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b72237cc740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224a35100"/></to>
    </wire>
    <wire loc="193:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b72237511a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b722383a3e0"/></to>
    </wire>
    <wire loc="173:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b7223736020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b72237d6930"/></to>
    </wire>
    <wire loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b72237d6930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224a99180"/></to>
    </wire>
    <wire loc="162:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b7223731e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b72237b6e18"/></to>
    </wire>
    <wire loc="73:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b72237b6e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b72249e4100"/></to>
    </wire>
    <wire loc="140:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b722370dc78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b72237932a8"/></to>
    </wire>
    <wire loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b72237932a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7224900c38"/></to>
    </wire>
    <wire loc="151:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b722371ee00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b72237a3020"/></to>
    </wire>
    <wire loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b72237a3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b722499e100"/></to>
    </wire>
    <wire loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b72235d11c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b72236a2c58"/></to>
    </wire>
    <wire loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b72236ac168"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b72235f7e38"/></to>
    </wire>
    <wire loc="92:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b72236c6988"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b7224007b78"/></to>
    </wire>
    <wire loc="31:BaseStationC.nc">
      <from><interface-ref name="radioSendQuestionTask" scoped="" ref="0x2b7223959738"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b72235d11c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:BaseStationC.nc">
      <from><interface-ref name="serialSendAnswerTask" scoped="" ref="0x2b7223958730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b72235d11c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b72239ada78"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b72239d2c60"/></to>
    </wire>
    <wire loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b722398d4f0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b72239c0348"/></to>
    </wire>
    <wire loc="84:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b72239c0348"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b72239e5498"/></to>
    </wire>
    <wire loc="89:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b72239be2a8"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b72239e29e8"/></to>
    </wire>
    <wire loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b72239aaaa8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b72239cfc30"/></to>
    </wire>
    <wire loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b722398e020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b72239c1818"/></to>
    </wire>
    <wire loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b72239c1818"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b72239e7968"/></to>
    </wire>
    <wire loc="76:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b7223986080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b72239bb020"/></to>
    </wire>
    <wire loc="93:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b72239bb020"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b72239ebe28"/></to>
    </wire>
    <wire loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b72239a9c38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b72239e8dc0"/></to>
    </wire>
    <wire loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b722399a998"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b72239bc658"/></to>
    </wire>
    <wire loc="92:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b72239bc658"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b72239eb4d0"/></to>
    </wire>
    <wire loc="77:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b72239a6e78"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b72239bbab8"/></to>
    </wire>
    <wire loc="94:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b72239bbab8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b72239fc8f0"/></to>
    </wire>
    <wire loc="90:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b72239bd020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b72239e3378"/></to>
    </wire>
    <wire loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b72239a28f0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b72239ba780"/></to>
    </wire>
    <wire loc="95:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b72239ba780"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b72239fb5f8"/></to>
    </wire>
    <wire loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2b72239b25e8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b72239c3978"/></to>
    </wire>
    <wire loc="104:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b72239c3978"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b7223a098b0"/></to>
    </wire>
    <wire loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b72239b1478"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b72239d6860"/></to>
    </wire>
    <wire loc="103:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b72239d6860"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b7223a059d8"/></to>
    </wire>
    <wire loc="215:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b72239d2c60"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b7223dab988"/></to>
    </wire>
    <wire loc="99:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b72239c80c8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b7223a0e8b8"/></to>
    </wire>
    <wire loc="305:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b7223a0e8b8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b72241370c8"/></to>
    </wire>
    <wire loc="270:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b7223a059d8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b72240e0270"/></to>
    </wire>
    <wire loc="124:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b72239e5498"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b7223ba71a0"/></to>
    </wire>
    <wire loc="126:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b72239e29e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b7223baa700"/></to>
    </wire>
    <wire loc="121:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b72239cfc30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b7223ba9510"/></to>
    </wire>
    <wire loc="123:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b72239e7968"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b7223ba8aa0"/></to>
    </wire>
    <wire loc="98:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b72239ccd80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b72239f75a0"/></to>
    </wire>
    <wire loc="303:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b72239f75a0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b722413bcd0"/></to>
    </wire>
    <wire loc="216:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b72239ebe28"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b7223dbf060"/></to>
    </wire>
    <wire loc="122:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b72239e8dc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b7223ba8388"/></to>
    </wire>
    <wire loc="269:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b7223a098b0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b72240dd020"/></to>
    </wire>
    <wire loc="102:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b72239d95a8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b7223a0a4e0"/></to>
    </wire>
    <wire loc="307:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b7223a0a4e0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b722412d220"/></to>
    </wire>
    <wire loc="97:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b72239cd930"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b72239f91f8"/></to>
    </wire>
    <wire loc="304:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b72239f91f8"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b7224132860"/></to>
    </wire>
    <wire loc="248:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b72239eb4d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b7223ea0e38"/></to>
    </wire>
    <wire loc="86:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b72239bf020"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b72239e41c8"/></to>
    </wire>
    <wire loc="128:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b72239e41c8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b7223ba78b8"/></to>
    </wire>
    <wire loc="187:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b72239fc8f0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b7223db6268"/></to>
    </wire>
    <wire loc="125:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b72239e3378"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b7223bab1f0"/></to>
    </wire>
    <wire loc="224:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b72239fb5f8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b7223e22268"/></to>
    </wire>
    <wire loc="100:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b72239c2990"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b7223a0bb78"/></to>
    </wire>
    <wire loc="306:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b7223a0bb78"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b722412f9d0"/></to>
    </wire>
    <wire loc="87:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b72239bfbb0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b72239e4d58"/></to>
    </wire>
    <wire loc="129:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b72239e4d58"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b7223ba5020"/></to>
    </wire>
    <wire loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b7223dab988"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b7223dbfb30"/></to>
    </wire>
    <wire loc="88:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b72241370c8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b722414a020"/></to>
    </wire>
    <wire loc="160:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x2b72239e0710"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b7223c50840"/></to>
    </wire>
    <wire loc="148:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x2b72239df4b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b7223c19200"/></to>
    </wire>
    <wire loc="98:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b7223c19200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b7224c93918"/></to>
    </wire>
    <wire loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b7223ba71a0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b7224c216f8"/></to>
    </wire>
    <wire loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b7223ba9510"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b7224c24a28"/></to>
    </wire>
    <wire loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b7223ba8aa0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b7224c21020"/></to>
    </wire>
    <wire loc="161:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2b72239fd308"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b7223d19900"/></to>
    </wire>
    <wire loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2b7223d19900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b7224cf5d98"/></to>
    </wire>
    <wire loc="162:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2b72239ed6e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b7223c36980"/></to>
    </wire>
    <wire loc="85:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b722413bcd0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b722414eb48"/></to>
    </wire>
    <wire loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b7223dbf060"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b7224d49458"/></to>
    </wire>
    <wire loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b7223baa700"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b7224c25d20"/></to>
    </wire>
    <wire loc="68:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b7223ba8388"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b7224c23820"/></to>
    </wire>
    <wire loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b72240dd020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b7224df0660"/></to>
    </wire>
    <wire loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b722412d220"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b7224258438"/></to>
    </wire>
    <wire loc="94:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b7224132860"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b722417c860"/></to>
    </wire>
    <wire loc="158:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x2b72239f3250"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2b7223c51578"/></to>
    </wire>
    <wire loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b7223ba78b8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b7224c21e10"/></to>
    </wire>
    <wire loc="117:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b7223db6268"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2b7223db1470"/></to>
    </wire>
    <wire loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b7223e22268"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b7224da79c8"/></to>
    </wire>
    <wire loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b7223bab1f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b7224c26700"/></to>
    </wire>
    <wire loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b72240e0270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b7224df4958"/></to>
    </wire>
    <wire loc="159:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x2b72239e0020"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2b7223c502a8"/></to>
    </wire>
    <wire loc="96:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b722412f9d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b722417a9d0"/></to>
    </wire>
    <wire loc="73:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b7223ba5020"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b7224c20550"/></to>
    </wire>
    <wire loc="102:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b7223a5e858"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b7223d1c980"/></to>
    </wire>
    <wire loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b7223d1c980"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b7224cfbd50"/></to>
    </wire>
    <wire loc="103:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b7223a56678"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b7223abdc50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b7223a5ba40"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b72240dd020"/></to>
    </wire>
    <wire loc="105:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x2b7223a6c860"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b722413cbd8"/></to>
    </wire>
    <wire loc="79:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b722413cbd8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b722414fa50"/></to>
    </wire>
    <wire loc="110:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b7223ae5c68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b72241644b8"/></to>
    </wire>
    <wire loc="100:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b72241644b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b722425c2e0"/></to>
    </wire>
    <wire loc="116:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b7223ba3328"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2b7223a41da8"/></to>
    </wire>
    <wire loc="117:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b7223ba4430"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2b7223bbd100"/></to>
    </wire>
    <wire loc="118:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b7223ba4d18"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x2b7223ca1060"/></to>
    </wire>
    <wire loc="119:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b7223ba5678"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x2b7223ca1638"/></to>
    </wire>
    <wire loc="137:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b7223bd03f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b7223c19200"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b7223bbda48"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x2b7223ca2740"/></to>
    </wire>
    <wire loc="153:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b7223c50e38"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b7223d1c980"/></to>
    </wire>
    <wire loc="154:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b7223c4cba0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2b7223c68838"/></to>
    </wire>
    <wire loc="155:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b7223c6f5b8"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2b7223ca42a8"/></to>
    </wire>
    <wire loc="156:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b7223c4dd98"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b7223ca4880"/></to>
    </wire>
    <wire loc="169:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b7223ca0490"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b7223d9e470"/></to>
    </wire>
    <wire loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b7223d9e470"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b7224d77da0"/></to>
    </wire>
    <wire loc="170:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b7223ca0d78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b7223db7bd0"/></to>
    </wire>
    <wire loc="114:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b7223db7bd0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b7223db45b8"/></to>
    </wire>
    <wire loc="171:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b7223c9f378"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b7223d3eb98"/></to>
    </wire>
    <wire loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b7223d3eb98"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b7224cf3020"/></to>
    </wire>
    <wire loc="176:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b7223d3dab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b7223db6e20"/></to>
    </wire>
    <wire loc="115:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b7223db6e20"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b7223db4b90"/></to>
    </wire>
    <wire loc="181:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b7223d9c580"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x2b7223a1e5f0"/></to>
    </wire>
    <wire loc="182:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b7223d9d510"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b7223db72e8"/></to>
    </wire>
    <wire loc="113:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b7223db72e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b7223db5c38"/></to>
    </wire>
    <wire loc="191:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b7223db2a10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b7223ea0e38"/></to>
    </wire>
    <wire loc="193:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b7223db5c38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b7223dc2430"/></to>
    </wire>
    <wire loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b7223dc2430"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b7223dbe5c8"/></to>
    </wire>
    <wire loc="194:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b7223db45b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b7223dc2d18"/></to>
    </wire>
    <wire loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b7223dc2d18"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b7223dbd020"/></to>
    </wire>
    <wire loc="195:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b7223db4b90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b7223dc02e8"/></to>
    </wire>
    <wire loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b7223dc02e8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b7223dbd5f8"/></to>
    </wire>
    <wire loc="211:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b7223dbfb30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b7223e24708"/></to>
    </wire>
    <wire loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b7223e24708"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b7224daa870"/></to>
    </wire>
    <wire loc="212:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b7223dbe5c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b7223e232a8"/></to>
    </wire>
    <wire loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b7223e232a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b7224da9a08"/></to>
    </wire>
    <wire loc="213:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b7223dbd020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b7223e23b90"/></to>
    </wire>
    <wire loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b7223e23b90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b7224da7430"/></to>
    </wire>
    <wire loc="214:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b7223dbd5f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b72241109f8"/></to>
    </wire>
    <wire loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b72241109f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b7224dec080"/></to>
    </wire>
    <wire loc="221:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b7223e21a10"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b7223e7d640"/></to>
    </wire>
    <wire loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b7223e7d640"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b7224dd7b58"/></to>
    </wire>
    <wire loc="222:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b7223e4c3f0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b7223d9ed18"/></to>
    </wire>
    <wire loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b7223d9ed18"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b7224d736c8"/></to>
    </wire>
    <wire loc="223:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b7223e22b70"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b72241185b8"/></to>
    </wire>
    <wire loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b72241185b8"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2b7224112a08"/></to>
    </wire>
    <wire loc="228:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b7223d9ddf8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b7223e7c020"/></to>
    </wire>
    <wire loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b7223e7c020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b7224dd5578"/></to>
    </wire>
    <wire loc="237:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b7223e7a5b8"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2b7223a328d0"/></to>
    </wire>
    <wire loc="238:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b7223e7c7e0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b7223ea1e38"/></to>
    </wire>
    <wire loc="239:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b7223e7b120"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b7223ea0718"/></to>
    </wire>
    <wire loc="240:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b7223e7b840"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b7223abdc50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x2b7223ece740"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b7224105660"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b7223ed0840"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b7223abdc50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b7223ecf5b8"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2b7223a234c0"/></to>
    </wire>
    <wire loc="253:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b7223ed27b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b7223ee1a10"/></to>
    </wire>
    <wire loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b7223ee1a10"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b7223edb020"/></to>
    </wire>
    <wire loc="254:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b7223ed0120"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b7223ee03f0"/></to>
    </wire>
    <wire loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b7223ee03f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b7223edb908"/></to>
    </wire>
    <wire loc="259:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b7223ed85b8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x2b7223a3f8e0"/></to>
    </wire>
    <wire loc="260:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b7223edb020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b72241173f0"/></to>
    </wire>
    <wire loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b72241173f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b72241488c8"/></to>
    </wire>
    <wire loc="261:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b7223edb908"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b7224117c98"/></to>
    </wire>
    <wire loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b7224117c98"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b72241472a8"/></to>
    </wire>
    <wire loc="262:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x2b7223ed90a0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2b722413c448"/></to>
    </wire>
    <wire loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b722413c448"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2b722414f2c0"/></to>
    </wire>
    <wire loc="267:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b722410fa30"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b722412d220"/></to>
    </wire>
    <wire loc="268:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b722410e9f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b722411d0e0"/></to>
    </wire>
    <wire loc="271:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2b722410d8c8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b7224105660"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b722411c020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b722413cbd8"/></to>
    </wire>
    <wire loc="286:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b7224144060"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x2b7223a3f8e0"/></to>
    </wire>
    <wire loc="287:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b72241488c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b722413d2c8"/></to>
    </wire>
    <wire loc="76:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b722413d2c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b72241500c0"/></to>
    </wire>
    <wire loc="288:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b72241472a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b722413dbf0"/></to>
    </wire>
    <wire loc="77:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b722413dbf0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b72241509e8"/></to>
    </wire>
    <wire loc="289:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x2b7224112a08"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b72241403f8"/></to>
    </wire>
    <wire loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b72241403f8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b72241512d0"/></to>
    </wire>
    <wire loc="301:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b72241605c8"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b7223a12428"/></to>
    </wire>
    <wire loc="302:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b722415f730"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b72240dd020"/></to>
    </wire>
    <wire loc="309:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b722415b378"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b7224105660"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2b722415a020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b7224105660"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b722415ab78"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b7224105660"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b7224159768"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b7223abdc50"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b7223abdc50"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b7224c41060"/></to>
    </wire>
    <wire loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b7224c40020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b7223ae5c68"/></to>
    </wire>
    <wire loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b7224c3d020"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b7223ae75d0"/></to>
    </wire>
    <wire loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b7224c1da10"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b7223b82c78"/></to>
    </wire>
    <wire loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b7224c20ba8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b7223ba5678"/></to>
    </wire>
    <wire loc="76:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b7224c1fa50"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b7223ba4430"/></to>
    </wire>
    <wire loc="77:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b7224c1e430"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b7223ba4d18"/></to>
    </wire>
    <wire loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b7224c1ea08"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b7223ba3328"/></to>
    </wire>
    <wire loc="99:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b7223c18020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b7224c92698"/></to>
    </wire>
    <wire loc="100:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b7223c18760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b7224c92dd8"/></to>
    </wire>
    <wire loc="101:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b7224c916c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b7223c39020"/></to>
    </wire>
    <wire loc="103:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b7224c91e40"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b7224c96a10"/></to>
    </wire>
    <wire loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b7224c90920"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b72235d11c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b7224cf3dc0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b7223b82c78"/></to>
    </wire>
    <wire loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b7224cf2890"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b7223d3dab0"/></to>
    </wire>
    <wire loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2b7224d70020"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2b7223d59d70"/></to>
    </wire>
    <wire loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2b7223d59d70"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2b7223d53850"/></to>
    </wire>
    <wire loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b7224d70bd8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b7224d6c140"/></to>
    </wire>
    <wire loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b7224d6c140"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b7223d7ab18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b7224d72458"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b7223d9d510"/></to>
    </wire>
    <wire loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b7224d72d40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b7223d9ddf8"/></to>
    </wire>
    <wire loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x2b7224d714a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b7223d9c580"/></to>
    </wire>
    <wire loc="118:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2b7223db0100"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b7223db2a10"/></to>
    </wire>
    <wire loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b7224da6450"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b7223e22b70"/></to>
    </wire>
    <wire loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b7224da5268"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b7223ae75d0"/></to>
    </wire>
    <wire loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b7224da5c98"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b7223e21a10"/></to>
    </wire>
    <wire loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b7224da4578"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b7223e4c3f0"/></to>
    </wire>
    <wire loc="189:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x2b7224da34f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b72235d11c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x2b7224da3c90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b72235d11c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x2b7224da4d18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b72235d11c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b7224dd5d38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b7223e7c7e0"/></to>
    </wire>
    <wire loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b7224dd12a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b7223e7a5b8"/></to>
    </wire>
    <wire loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b7224dd3670"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b7223e7b120"/></to>
    </wire>
    <wire loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b7224dd3d90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b7223e7b840"/></to>
    </wire>
    <wire loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b7224dd29d8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b7223e65b98"/></to>
    </wire>
    <wire loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b7223e65b98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b7223e8ba08"/></to>
    </wire>
    <wire loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x2b7224dd1d58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b72235d11c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b7223e63b48"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b7223e8c9f0"/></to>
    </wire>
    <wire loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b7223e69e28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7223e8c198"/></to>
    </wire>
    <wire loc="76:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b7223ee4338"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b7223ede658"/></to>
    </wire>
    <wire loc="73:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b7223ee0b10"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2b7223ed90a0"/></to>
    </wire>
    <wire loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b7223ee3be0"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2b7223edc020"/></to>
    </wire>
    <wire loc="74:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b7223edf268"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b7223ed9800"/></to>
    </wire>
    <wire loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b7223ede020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b7223ed85b8"/></to>
    </wire>
    <wire loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b7223ee3648"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2b7223edda08"/></to>
    </wire>
    <wire loc="77:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b7223ee4d68"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2b7223edd120"/></to>
    </wire>
    <wire loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b7224de9ac0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b722410e9f0"/></to>
    </wire>
    <wire loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b7224deba10"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b722410fa30"/></to>
    </wire>
    <wire loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b7224deaaf8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b7223f40a40"/></to>
    </wire>
    <wire loc="26:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b7223f40a40"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b7223f5bc08"/></to>
    </wire>
    <wire loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2b7224dece60"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x2b722410d8c8"/></to>
    </wire>
    <wire loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b7223f5bc08"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b72240c4128"/></to>
    </wire>
    <wire loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b7223f5ea98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b72240d45e0"/></to>
    </wire>
    <wire loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b7223f3c4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7223f54310"/></to>
    </wire>
    <wire loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b7223f54310"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7224046148"/></to>
    </wire>
    <wire loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b72240ce858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b7224081ab0"/></to>
    </wire>
    <wire loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b722407cc70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b7223f54c88"/></to>
    </wire>
    <wire loc="36:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b7223f54c88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b72240468f0"/></to>
    </wire>
    <wire loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b72240f1330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b7223f4f020"/></to>
    </wire>
    <wire loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b7223f4f020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7224042a90"/></to>
    </wire>
    <wire loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b7224042a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7224e2eca8"/></to>
    </wire>
    <wire loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b7224046148"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7224e32398"/></to>
    </wire>
    <wire loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b72240468f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b7224e32b40"/></to>
    </wire>
    <wire loc="74:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b7224e2b020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b7223ff0a20"/></to>
    </wire>
    <wire loc="94:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b7223ff0a20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b7223fdf608"/></to>
    </wire>
    <wire loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b7224e27e70"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b7223fe9a98"/></to>
    </wire>
    <wire loc="95:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b7223fe9a98"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b7223fda5c0"/></to>
    </wire>
    <wire loc="76:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b7224e25060"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b7223fe8e18"/></to>
    </wire>
    <wire loc="96:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b7223fe8e18"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b7223fd9980"/></to>
    </wire>
    <wire loc="77:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b7224e21200"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b7223fe3228"/></to>
    </wire>
    <wire loc="97:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b7223fe3228"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b72240063d0"/></to>
    </wire>
    <wire loc="74:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b7224078cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b72235d11c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b72240c9930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b72235d11c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b72240e81c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b7223f5ea98"/></to>
    </wire>
    <wire loc="76:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b722411ab78"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b7224113020"/></to>
    </wire>
    <wire loc="73:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b72241153f0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2b7224147a08"/></to>
    </wire>
    <wire loc="74:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b7224115b10"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b72241452a8"/></to>
    </wire>
    <wire loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b72241148c8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b7224144060"/></to>
    </wire>
    <wire loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b7224118020"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2b7224112430"/></to>
    </wire>
    <wire loc="77:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b7224119700"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2b7224113a90"/></to>
    </wire>
    <wire loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b722425c2e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b7224461b68"/></to>
    </wire>
    <wire loc="91:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b7224134458"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b722417f3b0"/></to>
    </wire>
    <wire loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b7224258438"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b722445a420"/></to>
    </wire>
    <wire loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b7224167100"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b72241605c8"/></to>
    </wire>
    <wire loc="86:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b7224167e10"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b722415b378"/></to>
    </wire>
    <wire loc="89:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2b7224166988"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x2b722415a020"/></to>
    </wire>
    <wire loc="92:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b7224165518"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b722415ab78"/></to>
    </wire>
    <wire loc="95:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b722419c2b0"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b722415f730"/></to>
    </wire>
    <wire loc="98:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b7224168020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b7224258438"/></to>
    </wire>
    <wire loc="101:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b7224198ab8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b7224159768"/></to>
    </wire>
    <wire loc="103:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x2b7224178130"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x2b7224264728"/></to>
    </wire>
    <wire loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x2b7224264728"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b72237154d0"/></to>
    </wire>
    <wire loc="104:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b72241774f8"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x2b7224261990"/></to>
    </wire>
    <wire loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b7224261990"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b72242a3e80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b72241711f0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b72242605e8"/></to>
    </wire>
    <wire loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b72242605e8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b72242709d0"/></to>
    </wire>
    <wire loc="107:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x2b7224171d00"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x2b722425f140"/></to>
    </wire>
    <wire loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x2b722425f140"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b722371b1a0"/></to>
    </wire>
    <wire loc="108:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b7224174e70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2b722425e338"/></to>
    </wire>
    <wire loc="68:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b722425e338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2b72237171a0"/></to>
    </wire>
    <wire loc="110:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x2b722416b5e8"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x2b722425d4c0"/></to>
    </wire>
    <wire loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x2b722425d4c0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x2b7224257cf0"/></to>
    </wire>
    <wire loc="111:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b7224198020"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b7223ae75d0"/></to>
    </wire>
    <wire loc="112:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b7224169c60"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b72244903c0"/></to>
    </wire>
    <wire loc="847:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x2b722422bd98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b72235d11c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b7224461b68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b7224f2d9d8"/></to>
    </wire>
    <wire loc="95:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b72242709d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b72242a1688"/></to>
    </wire>
    <wire loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b722445a420"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b722449cc38"/></to>
    </wire>
    <wire loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x2b7224284c18"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b7223739c78"/></to>
    </wire>
    <wire loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x2b7224283e08"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b722372b968"/></to>
    </wire>
    <wire loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b7224286540"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b7224343ca0"/></to>
    </wire>
    <wire loc="91:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b7224343ca0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b7224368350"/></to>
    </wire>
    <wire loc="96:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b72242a31d8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b722429f140"/></to>
    </wire>
    <wire loc="94:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b7224270388"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b72242a1080"/></to>
    </wire>
    <wire loc="92:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b7224255ce8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b722426ea30"/></to>
    </wire>
    <wire loc="97:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b72242a3e80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b722429fda8"/></to>
    </wire>
    <wire loc="99:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x2b72242bf3c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b7224355748"/></to>
    </wire>
    <wire loc="98:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b7224355748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b7224edba28"/></to>
    </wire>
    <wire loc="100:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b72242be020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b7224354c50"/></to>
    </wire>
    <wire loc="100:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b7224354c50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b7224ed8020"/></to>
    </wire>
    <wire loc="101:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2b72242c0150"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2b72242ef020"/></to>
    </wire>
    <wire loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2b72242ef020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2b72242ecdd8"/></to>
    </wire>
    <wire loc="102:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b72242be7c8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b72236c73c8"/></to>
    </wire>
    <wire loc="296:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2b72242dcb58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b72235d11c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2b722431d350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b72236c73c8"/></to>
    </wire>
    <wire loc="86:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2b7224320c70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b72237154d0"/></to>
    </wire>
    <wire loc="87:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2b72242e6de0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b7223714658"/></to>
    </wire>
    <wire loc="88:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2b722431f020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b72237217e0"/></to>
    </wire>
    <wire loc="89:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2b722431e190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b7223720968"/></to>
    </wire>
    <wire loc="99:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b7224354510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b7224ed9820"/></to>
    </wire>
    <wire loc="101:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b7224ed88c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b7224353550"/></to>
    </wire>
    <wire loc="103:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b7224ed70a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b7224eddbc0"/></to>
    </wire>
    <wire loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b7224ed7b50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b72235d11c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b722437a5e8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b722436ac90"/></to>
    </wire>
    <wire loc="89:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b722434b6f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b7224371bf8"/></to>
    </wire>
    <wire loc="93:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b7224376a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b7224364c48"/></to>
    </wire>
    <wire loc="94:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b7224376a20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b722439f020"/></to>
    </wire>
    <wire loc="95:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b7224376a20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b722439b360"/></to>
    </wire>
    <wire loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b7224f29a30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b722434b6f8"/></to>
    </wire>
    <wire loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b7224f24a80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b7224376a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b7224420540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b722434b6f8"/></to>
    </wire>
    <wire loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b722449be48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7224478270"/></to>
    </wire>
    <wire loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b72244a0450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7224455150"/></to>
    </wire>
    <wire loc="31:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b7224455150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7224451e08"/></to>
    </wire>
    <wire loc="32:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b7224480020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b722434b6f8"/></to>
    </wire>
    <wire loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b72245812e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b72245a1b90"/></to>
    </wire>
    <wire loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b7224513658"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b7224587268"/></to>
    </wire>
    <wire loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b7224584bb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b72245a1578"/></to>
    </wire>
    <wire loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b722457d5a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b7224512020"/></to>
    </wire>
    <wire loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b7224587bb0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b7224580ce8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b72245868c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b7224580270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b7224579ba8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2b72248786f8"/></to>
    </wire>
    <wire loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b7224580ce8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b72246d16f8"/></to>
    </wire>
    <wire loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b7224580270"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b72246d1020"/></to>
    </wire>
    <wire loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2b72246d05b0"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b7224579ba8"/></to>
    </wire>
    <wire loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b722459ad18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b722457d5a8"/></to>
    </wire>
    <wire loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b72246cd268"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b722457d5a8"/></to>
    </wire>
    <wire loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b72246c5bc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b722457d5a8"/></to>
    </wire>
    <wire loc="74:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b72246d0e78"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b7224597ba8"/></to>
    </wire>
    <wire loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2b72246cf750"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2b722459b898"/></to>
    </wire>
    <wire loc="77:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2b7224591da8"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2b72246c7328"/></to>
    </wire>
    <wire loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b722458db00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b72246ee2b8"/></to>
    </wire>
    <wire loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b72246ee2b8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b72246ecdc8"/></to>
    </wire>
    <wire loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b72246bcc98"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b72246eea80"/></to>
    </wire>
    <wire loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b72246eea80"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b72246e6da0"/></to>
    </wire>
    <wire loc="332:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2b722461add0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b72235d11c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2b72245bb8e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b72235d11c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2b72245d2590"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b72235d11c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b7224615020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b72235d11c8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2b72246cc908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b72235d11c8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2b72246cb100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b72235d11c8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b72246e9cc8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b72246e65d8"/></to>
    </wire>
    <wire loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b72246e65d8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b722473c430"/></to>
    </wire>
    <wire loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b72246e6da0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b722473cb90"/></to>
    </wire>
    <wire loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b72246ecdc8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b72246dfbe8"/></to>
    </wire>
    <wire loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b72246e4080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b72247a6aa0"/></to>
    </wire>
    <wire loc="33:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b72247a6aa0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7224886a60"/></to>
    </wire>
    <wire loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b72247382d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b72246e4080"/></to>
    </wire>
    <wire loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2b722473bc18"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b722476a060"/></to>
    </wire>
    <wire loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2b722476a060"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b7224762020"/></to>
    </wire>
    <wire loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2b722473a470"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b722476a8b8"/></to>
    </wire>
    <wire loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2b722476a8b8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b72247628b8"/></to>
    </wire>
    <wire loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2b722473ac10"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b7224769158"/></to>
    </wire>
    <wire loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2b7224769158"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b7224761158"/></to>
    </wire>
    <wire loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2b7224767860"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2b722475e020"/></to>
    </wire>
    <wire loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2b72247686b0"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2b7224760d98"/></to>
    </wire>
    <wire loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2b7224767020"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2b722475f6b8"/></to>
    </wire>
    <wire loc="68:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b722475d4c8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b72236f1970"/></to>
    </wire>
    <wire loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b722475c1a8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b72236c73c8"/></to>
    </wire>
    <wire loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b7224883c80"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b72247f3810"/></to>
    </wire>
    <wire loc="31:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b72247f3810"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b722489bce0"/></to>
    </wire>
    <wire loc="32:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b722488d020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b72247eb570"/></to>
    </wire>
    <wire loc="89:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b72247eb570"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b72247dbbf8"/></to>
    </wire>
    <wire loc="90:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b72247e65d0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b72247d4c90"/></to>
    </wire>
    <wire loc="91:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b72247e5ca0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b72247d1350"/></to>
    </wire>
    <wire loc="93:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b72247e0a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b72247cec48"/></to>
    </wire>
    <wire loc="94:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b72247e0a20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b722481a020"/></to>
    </wire>
    <wire loc="95:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b72247e0a20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b7224817360"/></to>
    </wire>
    <wire loc="27:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b72248983f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b72247eb570"/></to>
    </wire>
    <wire loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b72248e8460"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b72248b9b20"/></to>
    </wire>
    <wire loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b72248b4850"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b72248eb060"/></to>
    </wire>
    <wire loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b72248eb060"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b722370eaf0"/></to>
    </wire>
    <wire loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b72248b3ae0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b72248ea1f0"/></to>
    </wire>
    <wire loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b72248ea1f0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b722370f968"/></to>
    </wire>
    <wire loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b72248b2c68"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b72248e9378"/></to>
    </wire>
    <wire loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b72248e9378"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b72237037a8"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/MainC.nc">
      <documentation loc="1:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationC" loc="3:BaseStationC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/RandomC.nc">
      <documentation loc="33:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b7223f49e48"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TOne" ref="0x2b72236a89f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TOne" ref="0x2b72236a89f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7223663788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7223663788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7223663788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TThree" ref="0x2b72236a8d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7223663788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TThree" ref="0x2b72236a8d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x2b72236a6630"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b722374a8c0" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b722374ac08" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b7223757020" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b722375b340" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b722375b6a8" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b722375ba10" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b722375bd40" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b72237ef568" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b72237ef8d0" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b72237efc38" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b72237ec020" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b7223bcdac8" loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b7223bdf170" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b7223f49e48" loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b7223f49e48"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b7223f75188" loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b7223f6b480" loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b7223f6b480"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b7223f6b770" loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b7223f55c70" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7223f55c70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b7224076ce0" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7224076ce0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b7224072020" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b72240c6a08" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b72240c6a08"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b7224422e18" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b7224422e18"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2b722441f1a0" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b7224423760" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b7224423760"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b722440b020" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b722440b020"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x2b722440b320" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b7224452590" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b7224452590"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b7224452ce0" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b7224452ce0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b722447a930" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b722447a930"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b7224477110" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b7224477110"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b72244774d8" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b72244774d8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b7224477c50" loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b7224477c50"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b7224475020" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b72244757b0" loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b72244757b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b72236e9ae8" loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b72236e9ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72236e9e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b72236ea6e8" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b72236ea6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b72236eaa38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b72236f5690" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b72236f5690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72236f59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b72236ebaa0" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b72236ebaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72236ebdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b72236f1970" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b72236f1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b72236f1cc0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b72236f1e48"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b72236f5020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b72236f51a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b72236f5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b72236fc938" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b72236fc938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72236fcc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b72236fc298" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b72236fc298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72236fc5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b72236fa060" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b72236fa060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72236fa3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b72236fedc0" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b72236fedc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7223704170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b72236fe730" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b72236fe730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72236fea80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b72237004f8" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b72237004f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7223700848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b7223708388" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b7223708388"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237086d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223708860"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237089e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223708b70"/>
        <function-ref name="get" scoped="" ref="0x2b7223708cf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223708e80"/>
        <function-ref name="set" scoped="" ref="0x2b7223700030"/>
        <function-ref name="clr" scoped="" ref="0x2b72237001b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b7223701180" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b7223701180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72237014d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b7223744968" loc="98:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b7223744968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237430f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223743278"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223743400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223743588"/>
        <function-ref name="get" scoped="" ref="0x2b7223743710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223743898"/>
        <function-ref name="set" scoped="" ref="0x2b7223743a20"/>
        <function-ref name="clr" scoped="" ref="0x2b7223743ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b722372e4d0" loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b722372e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722372e820"/>
        <function-ref name="isInput" scoped="" ref="0x2b722372e9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b722372eb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722372ecb8"/>
        <function-ref name="get" scoped="" ref="0x2b722372ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722372d020"/>
        <function-ref name="set" scoped="" ref="0x2b722372d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b722372d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b72237334d0" loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b72237334d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223733820"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237339a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223733b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223733cb8"/>
        <function-ref name="get" scoped="" ref="0x2b7223733e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223732020"/>
        <function-ref name="set" scoped="" ref="0x2b72237321a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7223732330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b72237491a0" loc="92:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b72237491a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237494f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223749678"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223749800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223749988"/>
        <function-ref name="get" scoped="" ref="0x2b7223749b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223749c98"/>
        <function-ref name="set" scoped="" ref="0x2b7223749e20"/>
        <function-ref name="clr" scoped="" ref="0x2b7223748020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x2b722374e658" loc="103:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x2b722374e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722374e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b722374eb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b722374ecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722374ee40"/>
        <function-ref name="get" scoped="" ref="0x2b722374d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722374d1a8"/>
        <function-ref name="set" scoped="" ref="0x2b722374d330"/>
        <function-ref name="clr" scoped="" ref="0x2b722374d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b72237171a0" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b72237171a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237174f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223717678"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223717800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223717988"/>
        <function-ref name="get" scoped="" ref="0x2b7223717b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223717c98"/>
        <function-ref name="set" scoped="" ref="0x2b7223717e20"/>
        <function-ref name="clr" scoped="" ref="0x2b7223716020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b722373de00" loc="90:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b722373de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722373c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b722373c330"/>
        <function-ref name="toggle" scoped="" ref="0x2b722373c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722373c640"/>
        <function-ref name="get" scoped="" ref="0x2b722373c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722373c950"/>
        <function-ref name="set" scoped="" ref="0x2b722373cad8"/>
        <function-ref name="clr" scoped="" ref="0x2b722373cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b72237154d0" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b72237154d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223715820"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237159a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223715b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223715cb8"/>
        <function-ref name="get" scoped="" ref="0x2b7223715e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223714020"/>
        <function-ref name="set" scoped="" ref="0x2b72237141a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7223714330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b7223727658" loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b7223727658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237279a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223727b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223727cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223727e40"/>
        <function-ref name="get" scoped="" ref="0x2b7223726020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237261a8"/>
        <function-ref name="set" scoped="" ref="0x2b7223726330"/>
        <function-ref name="clr" scoped="" ref="0x2b72237264b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b722372b968" loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b722372b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722372bcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b722372be40"/>
        <function-ref name="toggle" scoped="" ref="0x2b722372a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722372a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b722372a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722372a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b722372a640"/>
        <function-ref name="clr" scoped="" ref="0x2b722372a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b7223740968" loc="86:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b7223740968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223740cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223740e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b722373f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722373f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b722373f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722373f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b722373f640"/>
        <function-ref name="clr" scoped="" ref="0x2b722373f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b722370f968" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b722370f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722370fcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b722370fe40"/>
        <function-ref name="toggle" scoped="" ref="0x2b722370e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722370e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b722370e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722370e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b722370e640"/>
        <function-ref name="clr" scoped="" ref="0x2b722370e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b7223720968" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b7223720968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223720cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223720e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b722371f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722371f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b722371f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722371f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b722371f640"/>
        <function-ref name="clr" scoped="" ref="0x2b722371f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b7223723af0" loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b7223723af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223723e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223722020"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237221a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223722330"/>
        <function-ref name="get" scoped="" ref="0x2b72237224b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223722640"/>
        <function-ref name="set" scoped="" ref="0x2b72237227c8"/>
        <function-ref name="clr" scoped="" ref="0x2b7223722950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b7223738e00" loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b7223738e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237371a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223737330"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237374b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223737640"/>
        <function-ref name="get" scoped="" ref="0x2b72237377c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223737950"/>
        <function-ref name="set" scoped="" ref="0x2b7223737ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b7223737c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b7223746658" loc="95:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b7223746658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237469a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223746b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223746cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223746e40"/>
        <function-ref name="get" scoped="" ref="0x2b7223745020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237451a8"/>
        <function-ref name="set" scoped="" ref="0x2b7223745330"/>
        <function-ref name="clr" scoped="" ref="0x2b72237454b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b7223750348" loc="101:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b7223750348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223750698"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223750820"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237509a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223750b30"/>
        <function-ref name="get" scoped="" ref="0x2b7223750cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223750e40"/>
        <function-ref name="set" scoped="" ref="0x2b722374f020"/>
        <function-ref name="clr" scoped="" ref="0x2b722374f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b72237351a0" loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b72237351a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237354f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223735678"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223735800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223735988"/>
        <function-ref name="get" scoped="" ref="0x2b7223735b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223735c98"/>
        <function-ref name="set" scoped="" ref="0x2b7223735e20"/>
        <function-ref name="clr" scoped="" ref="0x2b7223734020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b722371ae00" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b722371ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237191a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223719330"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237194b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223719640"/>
        <function-ref name="get" scoped="" ref="0x2b72237197c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223719950"/>
        <function-ref name="set" scoped="" ref="0x2b7223719ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b7223719c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b722371c020" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b722371c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722371c370"/>
        <function-ref name="isInput" scoped="" ref="0x2b722371c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b722371c680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722371c808"/>
        <function-ref name="get" scoped="" ref="0x2b722371c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722371cb18"/>
        <function-ref name="set" scoped="" ref="0x2b722371cca0"/>
        <function-ref name="clr" scoped="" ref="0x2b722371ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b7223742020" loc="99:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b7223742020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223742370"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237424f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223742680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223742808"/>
        <function-ref name="get" scoped="" ref="0x2b7223742990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223742b18"/>
        <function-ref name="set" scoped="" ref="0x2b7223742ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b7223742e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b7223729348" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b7223729348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223729698"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223729820"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237299a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223729b30"/>
        <function-ref name="get" scoped="" ref="0x2b7223729cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223729e40"/>
        <function-ref name="set" scoped="" ref="0x2b7223728020"/>
        <function-ref name="clr" scoped="" ref="0x2b72237281a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b722372d658" loc="73:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b722372d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722372d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b722372db30"/>
        <function-ref name="toggle" scoped="" ref="0x2b722372dcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722372de40"/>
        <function-ref name="get" scoped="" ref="0x2b722372c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722372c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b722372c330"/>
        <function-ref name="clr" scoped="" ref="0x2b722372c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b7223732658" loc="84:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b7223732658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237329a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223732b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223732cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223732e40"/>
        <function-ref name="get" scoped="" ref="0x2b7223741020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237411a8"/>
        <function-ref name="set" scoped="" ref="0x2b7223741330"/>
        <function-ref name="clr" scoped="" ref="0x2b72237414b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b7223748348" loc="93:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b7223748348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223748698"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223748820"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237489a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223748b30"/>
        <function-ref name="get" scoped="" ref="0x2b7223748cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223748e40"/>
        <function-ref name="set" scoped="" ref="0x2b7223747020"/>
        <function-ref name="clr" scoped="" ref="0x2b72237471a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b7223716348" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b7223716348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223716698"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223716820"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237169a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223716b30"/>
        <function-ref name="get" scoped="" ref="0x2b7223716cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223716e40"/>
        <function-ref name="set" scoped="" ref="0x2b7223715020"/>
        <function-ref name="clr" scoped="" ref="0x2b72237151a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b7223714658" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b7223714658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237149a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223714b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223714cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223714e40"/>
        <function-ref name="get" scoped="" ref="0x2b7223721020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237211a8"/>
        <function-ref name="set" scoped="" ref="0x2b7223721330"/>
        <function-ref name="clr" scoped="" ref="0x2b72237214b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b72237267e0" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b72237267e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223726b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223726cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223726e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223725020"/>
        <function-ref name="get" scoped="" ref="0x2b72237251a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223725330"/>
        <function-ref name="set" scoped="" ref="0x2b72237254b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7223725640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b722372aaf0" loc="76:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b722372aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722372ae40"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223739020"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237391a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223739330"/>
        <function-ref name="get" scoped="" ref="0x2b72237394b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223739640"/>
        <function-ref name="set" scoped="" ref="0x2b72237397c8"/>
        <function-ref name="clr" scoped="" ref="0x2b7223739950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b722373faf0" loc="87:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b722373faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722373fe40"/>
        <function-ref name="isInput" scoped="" ref="0x2b722373e020"/>
        <function-ref name="toggle" scoped="" ref="0x2b722373e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722373e330"/>
        <function-ref name="get" scoped="" ref="0x2b722373e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722373e640"/>
        <function-ref name="set" scoped="" ref="0x2b722373e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b722373e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b722370eaf0" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b722370eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722370ee40"/>
        <function-ref name="isInput" scoped="" ref="0x2b722370d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b722370d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722370d330"/>
        <function-ref name="get" scoped="" ref="0x2b722370d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722370d640"/>
        <function-ref name="set" scoped="" ref="0x2b722370d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b722370d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b722371faf0" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b722371faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722371e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b722371e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b722371e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722371e4b8"/>
        <function-ref name="get" scoped="" ref="0x2b722371e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722371e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b722371e950"/>
        <function-ref name="clr" scoped="" ref="0x2b722371ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b7223722c78" loc="68:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b7223722c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223731020"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237311a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223731330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237314b8"/>
        <function-ref name="get" scoped="" ref="0x2b7223731640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237317c8"/>
        <function-ref name="set" scoped="" ref="0x2b7223731950"/>
        <function-ref name="clr" scoped="" ref="0x2b7223731ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b72237457e0" loc="96:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b72237457e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223745b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223745cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223745e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223744020"/>
        <function-ref name="get" scoped="" ref="0x2b72237441a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223744330"/>
        <function-ref name="set" scoped="" ref="0x2b72237444b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7223744640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b722372f020" loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b722372f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722372f570"/>
        <function-ref name="isInput" scoped="" ref="0x2b722372f6f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b722372f880"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722372fa08"/>
        <function-ref name="get" scoped="" ref="0x2b722372fb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722372fd18"/>
        <function-ref name="set" scoped="" ref="0x2b722372e020"/>
        <function-ref name="clr" scoped="" ref="0x2b722372e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b7223734348" loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b7223734348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223734698"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223734820"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237349a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223734b30"/>
        <function-ref name="get" scoped="" ref="0x2b7223734cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223734e40"/>
        <function-ref name="set" scoped="" ref="0x2b7223733020"/>
        <function-ref name="clr" scoped="" ref="0x2b72237331a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b722373b020" loc="91:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b722373b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722373b370"/>
        <function-ref name="isInput" scoped="" ref="0x2b722373b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b722373b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722373b808"/>
        <function-ref name="get" scoped="" ref="0x2b722373b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722373bb18"/>
        <function-ref name="set" scoped="" ref="0x2b722373bca0"/>
        <function-ref name="clr" scoped="" ref="0x2b722373be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b722374f4d0" loc="102:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b722374f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722374f820"/>
        <function-ref name="isInput" scoped="" ref="0x2b722374f9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b722374fb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722374fcb8"/>
        <function-ref name="get" scoped="" ref="0x2b722374fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722374e020"/>
        <function-ref name="set" scoped="" ref="0x2b722374e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b722374e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b7223718020" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b7223718020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223718370"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237184f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223718680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223718808"/>
        <function-ref name="get" scoped="" ref="0x2b7223718990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223718b18"/>
        <function-ref name="set" scoped="" ref="0x2b7223718ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b7223718e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b722371b1a0" loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b722371b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722371b4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b722371b678"/>
        <function-ref name="toggle" scoped="" ref="0x2b722371b800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722371b988"/>
        <function-ref name="get" scoped="" ref="0x2b722371bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722371bc98"/>
        <function-ref name="set" scoped="" ref="0x2b722371be20"/>
        <function-ref name="clr" scoped="" ref="0x2b7223729020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b722373ec78" loc="89:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b722373ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722373d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b722373d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b722373d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722373d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b722373d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722373d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b722373d950"/>
        <function-ref name="clr" scoped="" ref="0x2b722373dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b72237284d0" loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b72237284d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223728820"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237289a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223728b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223728cb8"/>
        <function-ref name="get" scoped="" ref="0x2b7223728e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223727020"/>
        <function-ref name="set" scoped="" ref="0x2b72237271a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7223727330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b722372c7e0" loc="74:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b722372c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722372cb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b722372ccb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b722372ce40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722372b020"/>
        <function-ref name="get" scoped="" ref="0x2b722372b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722372b330"/>
        <function-ref name="set" scoped="" ref="0x2b722372b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b722372b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b72237417e0" loc="85:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b72237417e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223741b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223741cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223741e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223740020"/>
        <function-ref name="get" scoped="" ref="0x2b72237401a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223740330"/>
        <function-ref name="set" scoped="" ref="0x2b72237404b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7223740640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b72237474d0" loc="94:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b72237474d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223747820"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237479a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223747b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223747cb8"/>
        <function-ref name="get" scoped="" ref="0x2b7223747e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223746020"/>
        <function-ref name="set" scoped="" ref="0x2b72237461a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7223746330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b72237037a8" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b72237037a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223703af8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223703c80"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223703e08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722370f020"/>
        <function-ref name="get" scoped="" ref="0x2b722370f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722370f330"/>
        <function-ref name="set" scoped="" ref="0x2b722370f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b722370f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b72237217e0" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b72237217e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223721b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223721cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223721e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223720020"/>
        <function-ref name="get" scoped="" ref="0x2b72237201a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223720330"/>
        <function-ref name="set" scoped="" ref="0x2b72237204b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7223720640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b7223725968" loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b7223725968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223725cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223725e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223723020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237231a8"/>
        <function-ref name="get" scoped="" ref="0x2b7223723330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237234b8"/>
        <function-ref name="set" scoped="" ref="0x2b7223723640"/>
        <function-ref name="clr" scoped="" ref="0x2b72237237c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b7223739c78" loc="77:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b7223739c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223738020"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237381a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223738330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237384b8"/>
        <function-ref name="get" scoped="" ref="0x2b7223738640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237387c8"/>
        <function-ref name="set" scoped="" ref="0x2b7223738950"/>
        <function-ref name="clr" scoped="" ref="0x2b7223738ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b72237511a0" loc="100:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b72237511a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237514f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223751678"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223751800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223751988"/>
        <function-ref name="get" scoped="" ref="0x2b7223751b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223751c98"/>
        <function-ref name="set" scoped="" ref="0x2b7223751e20"/>
        <function-ref name="clr" scoped="" ref="0x2b7223750020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b7223736020" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b7223736020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223736370"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237364f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223736680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223736808"/>
        <function-ref name="get" scoped="" ref="0x2b7223736990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223736b18"/>
        <function-ref name="set" scoped="" ref="0x2b7223736ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b7223736e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b7223731e00" loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b7223731e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237301a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223730330"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237304b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223730640"/>
        <function-ref name="get" scoped="" ref="0x2b72237307c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223730950"/>
        <function-ref name="set" scoped="" ref="0x2b7223730ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b7223730c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b722370dc78" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b722370dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722371a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b722371a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b722371a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722371a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b722371a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722371a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b722371a950"/>
        <function-ref name="clr" scoped="" ref="0x2b722371aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b722371ee00" loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b722371ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722371d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b722371d330"/>
        <function-ref name="toggle" scoped="" ref="0x2b722371d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722371d640"/>
        <function-ref name="get" scoped="" ref="0x2b722371d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722371d950"/>
        <function-ref name="set" scoped="" ref="0x2b722371dad8"/>
        <function-ref name="clr" scoped="" ref="0x2b722371dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b7223794120" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b7223794120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223794470"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237945f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223794780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223794908"/>
        <function-ref name="get" scoped="" ref="0x2b7223794a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223794c18"/>
        <function-ref name="set" scoped="" ref="0x2b7223794da0"/>
        <function-ref name="clr" scoped="" ref="0x2b7223793020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b72237a15b8" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b72237a15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237a1908"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237a1a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237a1c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237a1da0"/>
        <function-ref name="get" scoped="" ref="0x2b72237a0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237a01a8"/>
        <function-ref name="set" scoped="" ref="0x2b72237a0330"/>
        <function-ref name="clr" scoped="" ref="0x2b72237a04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b7223797dc0" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b7223797dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223796170"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237962f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223796480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223796608"/>
        <function-ref name="get" scoped="" ref="0x2b7223796790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223796918"/>
        <function-ref name="set" scoped="" ref="0x2b7223796aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b7223796c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b72237932a8" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b72237932a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237935f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223793780"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223793908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223793a90"/>
        <function-ref name="get" scoped="" ref="0x2b7223793c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223793da0"/>
        <function-ref name="set" scoped="" ref="0x2b7223792020"/>
        <function-ref name="clr" scoped="" ref="0x2b72237921a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b72237a0740" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b72237a0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237a0a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237a0c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237a0da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722379f020"/>
        <function-ref name="get" scoped="" ref="0x2b722379f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722379f330"/>
        <function-ref name="set" scoped="" ref="0x2b722379f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b722379f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b7223795020" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b7223795020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223795370"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237954f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223795680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223795808"/>
        <function-ref name="get" scoped="" ref="0x2b7223795990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223795b18"/>
        <function-ref name="set" scoped="" ref="0x2b7223795ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b7223795e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b7223792430" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b7223792430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223792780"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223792908"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223792a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223792c18"/>
        <function-ref name="get" scoped="" ref="0x2b7223792da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237a1020"/>
        <function-ref name="set" scoped="" ref="0x2b72237a11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b72237a1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b722379f8c8" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b722379f8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722379fc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b722379fda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b722379e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722379e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b722379e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722379e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b722379e640"/>
        <function-ref name="clr" scoped="" ref="0x2b722379e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224909ca0" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224909ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224908020"/>
        <function-ref name="isInput" scoped="" ref="0x2b72249081a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224908330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72249084b8"/>
        <function-ref name="get" scoped="" ref="0x2b7224908640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72249087c8"/>
        <function-ref name="set" scoped="" ref="0x2b7224908950"/>
        <function-ref name="clr" scoped="" ref="0x2b7224908ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224906c38" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224906c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224905020"/>
        <function-ref name="isInput" scoped="" ref="0x2b72249051a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224905330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72249054b8"/>
        <function-ref name="get" scoped="" ref="0x2b7224905640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72249057c8"/>
        <function-ref name="set" scoped="" ref="0x2b7224905950"/>
        <function-ref name="clr" scoped="" ref="0x2b7224905ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224903c38" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224903c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224902020"/>
        <function-ref name="isInput" scoped="" ref="0x2b72249021a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224902330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72249024b8"/>
        <function-ref name="get" scoped="" ref="0x2b7224902640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72249027c8"/>
        <function-ref name="set" scoped="" ref="0x2b7224902950"/>
        <function-ref name="clr" scoped="" ref="0x2b7224902ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224900c38" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224900c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72248ff020"/>
        <function-ref name="isInput" scoped="" ref="0x2b72248ff1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72248ff330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72248ff4b8"/>
        <function-ref name="get" scoped="" ref="0x2b72248ff640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72248ff7c8"/>
        <function-ref name="set" scoped="" ref="0x2b72248ff950"/>
        <function-ref name="clr" scoped="" ref="0x2b72248ffad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b72248fdc38" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b72248fdc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72248fc020"/>
        <function-ref name="isInput" scoped="" ref="0x2b72248fc1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72248fc330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72248fc4b8"/>
        <function-ref name="get" scoped="" ref="0x2b72248fc640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72248fc7c8"/>
        <function-ref name="set" scoped="" ref="0x2b72248fc950"/>
        <function-ref name="clr" scoped="" ref="0x2b72248fcad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b72248fac38" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b72248fac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72248f9020"/>
        <function-ref name="isInput" scoped="" ref="0x2b72248f91a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72248f9330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72248f94b8"/>
        <function-ref name="get" scoped="" ref="0x2b72248f9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72248f97c8"/>
        <function-ref name="set" scoped="" ref="0x2b72248f9950"/>
        <function-ref name="clr" scoped="" ref="0x2b72248f9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b72248f7c38" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b72248f7c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224952020"/>
        <function-ref name="isInput" scoped="" ref="0x2b72249521a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224952330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72249524b8"/>
        <function-ref name="get" scoped="" ref="0x2b7224952640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72249527c8"/>
        <function-ref name="set" scoped="" ref="0x2b7224952950"/>
        <function-ref name="clr" scoped="" ref="0x2b7224952ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224950c38" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224950c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722494f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b722494f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b722494f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722494f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b722494f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722494f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b722494f950"/>
        <function-ref name="clr" scoped="" ref="0x2b722494fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b72237a7bd8" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b72237a7bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237a6020"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237a61a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237a6330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237a64b8"/>
        <function-ref name="get" scoped="" ref="0x2b72237a6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237a67c8"/>
        <function-ref name="set" scoped="" ref="0x2b72237a6950"/>
        <function-ref name="clr" scoped="" ref="0x2b72237a6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b72237a3020" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b72237a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237a3370"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237a34f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237a3680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237a3808"/>
        <function-ref name="get" scoped="" ref="0x2b72237a3990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237a3b18"/>
        <function-ref name="set" scoped="" ref="0x2b72237a3ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b72237a3e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b72237a9930" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b72237a9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237a9c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237a9e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237a8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237a81a8"/>
        <function-ref name="get" scoped="" ref="0x2b72237a8330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237a84b8"/>
        <function-ref name="set" scoped="" ref="0x2b72237a8640"/>
        <function-ref name="clr" scoped="" ref="0x2b72237a87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b72237a6d60" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b72237a6d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237a50d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237a5260"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237a53e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237a5570"/>
        <function-ref name="get" scoped="" ref="0x2b72237a56f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237a5880"/>
        <function-ref name="set" scoped="" ref="0x2b72237a5a08"/>
        <function-ref name="clr" scoped="" ref="0x2b72237a5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b72237a2120" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b72237a2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237a2470"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237a25f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237a2780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237a2908"/>
        <function-ref name="get" scoped="" ref="0x2b72237a2a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237a2c18"/>
        <function-ref name="set" scoped="" ref="0x2b72237a2da0"/>
        <function-ref name="clr" scoped="" ref="0x2b72237b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b72237a8a50" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b72237a8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237a8da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237a7020"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237a71a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237a7330"/>
        <function-ref name="get" scoped="" ref="0x2b72237a74b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237a7640"/>
        <function-ref name="set" scoped="" ref="0x2b72237a77c8"/>
        <function-ref name="clr" scoped="" ref="0x2b72237a7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b72237a5e18" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b72237a5e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237a41a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237a4330"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237a44b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237a4640"/>
        <function-ref name="get" scoped="" ref="0x2b72237a47c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237a4950"/>
        <function-ref name="set" scoped="" ref="0x2b72237a4ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b72237a4c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b72237b22a8" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b72237b22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237b25f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237b2780"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237b2908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237b2a90"/>
        <function-ref name="get" scoped="" ref="0x2b72237b2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237b2da0"/>
        <function-ref name="set" scoped="" ref="0x2b72237b1020"/>
        <function-ref name="clr" scoped="" ref="0x2b72237b11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224955180" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224955180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72249554d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224955658"/>
        <function-ref name="toggle" scoped="" ref="0x2b72249557e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224955968"/>
        <function-ref name="get" scoped="" ref="0x2b7224955af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224955c78"/>
        <function-ref name="set" scoped="" ref="0x2b7224955e00"/>
        <function-ref name="clr" scoped="" ref="0x2b7224954020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b72249aa100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b72249aa100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72249aa450"/>
        <function-ref name="isInput" scoped="" ref="0x2b72249aa5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72249aa760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72249aa8e8"/>
        <function-ref name="get" scoped="" ref="0x2b72249aaa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72249aabf8"/>
        <function-ref name="set" scoped="" ref="0x2b72249aad80"/>
        <function-ref name="clr" scoped="" ref="0x2b72249a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b72249a7100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b72249a7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72249a7450"/>
        <function-ref name="isInput" scoped="" ref="0x2b72249a75d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72249a7760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72249a78e8"/>
        <function-ref name="get" scoped="" ref="0x2b72249a7a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72249a7bf8"/>
        <function-ref name="set" scoped="" ref="0x2b72249a7d80"/>
        <function-ref name="clr" scoped="" ref="0x2b72249a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b72249a4100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b72249a4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72249a4450"/>
        <function-ref name="isInput" scoped="" ref="0x2b72249a45d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72249a4760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72249a48e8"/>
        <function-ref name="get" scoped="" ref="0x2b72249a4a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72249a4bf8"/>
        <function-ref name="set" scoped="" ref="0x2b72249a4d80"/>
        <function-ref name="clr" scoped="" ref="0x2b72249a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b72249a1100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b72249a1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72249a1450"/>
        <function-ref name="isInput" scoped="" ref="0x2b72249a15d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72249a1760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72249a18e8"/>
        <function-ref name="get" scoped="" ref="0x2b72249a1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72249a1bf8"/>
        <function-ref name="set" scoped="" ref="0x2b72249a1d80"/>
        <function-ref name="clr" scoped="" ref="0x2b72249a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b722499e100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b722499e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722499e450"/>
        <function-ref name="isInput" scoped="" ref="0x2b722499e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b722499e760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722499e8e8"/>
        <function-ref name="get" scoped="" ref="0x2b722499ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722499ebf8"/>
        <function-ref name="set" scoped="" ref="0x2b722499ed80"/>
        <function-ref name="clr" scoped="" ref="0x2b722499d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b722499b100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b722499b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722499b450"/>
        <function-ref name="isInput" scoped="" ref="0x2b722499b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b722499b760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722499b8e8"/>
        <function-ref name="get" scoped="" ref="0x2b722499ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722499bbf8"/>
        <function-ref name="set" scoped="" ref="0x2b722499bd80"/>
        <function-ref name="clr" scoped="" ref="0x2b722499a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224998100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224998100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224998450"/>
        <function-ref name="isInput" scoped="" ref="0x2b72249985d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224998760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72249988e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224998a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224998bf8"/>
        <function-ref name="set" scoped="" ref="0x2b7224998d80"/>
        <function-ref name="clr" scoped="" ref="0x2b7224997020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b72237bc740" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b72237bc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237bca90"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237bcc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237bcda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237bb020"/>
        <function-ref name="get" scoped="" ref="0x2b72237bb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237bb330"/>
        <function-ref name="set" scoped="" ref="0x2b72237bb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b72237bb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b72237b8bd8" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b72237b8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237b7020"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237b71a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237b7330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237b74b8"/>
        <function-ref name="get" scoped="" ref="0x2b72237b7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237b77c8"/>
        <function-ref name="set" scoped="" ref="0x2b72237b7950"/>
        <function-ref name="clr" scoped="" ref="0x2b72237b7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b72237ac500" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b72237ac500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237ac850"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237ac9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237acb60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237acce8"/>
        <function-ref name="get" scoped="" ref="0x2b72237ace70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237ab020"/>
        <function-ref name="set" scoped="" ref="0x2b72237ab1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b72237ab330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b72237bb8c8" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b72237bb8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237bbc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237bbda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237b9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237b91a8"/>
        <function-ref name="get" scoped="" ref="0x2b72237b9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237b94b8"/>
        <function-ref name="set" scoped="" ref="0x2b72237b9640"/>
        <function-ref name="clr" scoped="" ref="0x2b72237b97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b72237b7d60" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b72237b7d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237b60d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237b6260"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237b63e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237b6570"/>
        <function-ref name="get" scoped="" ref="0x2b72237b66f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237b6880"/>
        <function-ref name="set" scoped="" ref="0x2b72237b6a08"/>
        <function-ref name="clr" scoped="" ref="0x2b72237b6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b72237ab5b8" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b72237ab5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237ab908"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237aba90"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237abc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237abda0"/>
        <function-ref name="get" scoped="" ref="0x2b72237bc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237bc1a8"/>
        <function-ref name="set" scoped="" ref="0x2b72237bc330"/>
        <function-ref name="clr" scoped="" ref="0x2b72237bc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b72237b9a50" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b72237b9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237b9da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237b8020"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237b81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237b8330"/>
        <function-ref name="get" scoped="" ref="0x2b72237b84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237b8640"/>
        <function-ref name="set" scoped="" ref="0x2b72237b87c8"/>
        <function-ref name="clr" scoped="" ref="0x2b72237b8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b72237b6e18" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b72237b6e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237b51a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237b5330"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237b54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237b5640"/>
        <function-ref name="get" scoped="" ref="0x2b72237b57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237b5950"/>
        <function-ref name="set" scoped="" ref="0x2b72237b5ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b72237b5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b72249f9180" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b72249f9180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72249f94d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b72249f9658"/>
        <function-ref name="toggle" scoped="" ref="0x2b72249f97e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72249f9968"/>
        <function-ref name="get" scoped="" ref="0x2b72249f9af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72249f9c78"/>
        <function-ref name="set" scoped="" ref="0x2b72249f9e00"/>
        <function-ref name="clr" scoped="" ref="0x2b72249f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b72249f6100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b72249f6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72249f6450"/>
        <function-ref name="isInput" scoped="" ref="0x2b72249f65d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72249f6760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72249f68e8"/>
        <function-ref name="get" scoped="" ref="0x2b72249f6a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72249f6bf8"/>
        <function-ref name="set" scoped="" ref="0x2b72249f6d80"/>
        <function-ref name="clr" scoped="" ref="0x2b72249f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b72249f3100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b72249f3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72249f3450"/>
        <function-ref name="isInput" scoped="" ref="0x2b72249f35d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72249f3760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72249f38e8"/>
        <function-ref name="get" scoped="" ref="0x2b72249f3a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72249f3bf8"/>
        <function-ref name="set" scoped="" ref="0x2b72249f3d80"/>
        <function-ref name="clr" scoped="" ref="0x2b72249f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b72249f0100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b72249f0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72249f0450"/>
        <function-ref name="isInput" scoped="" ref="0x2b72249f05d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72249f0760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72249f08e8"/>
        <function-ref name="get" scoped="" ref="0x2b72249f0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72249f0bf8"/>
        <function-ref name="set" scoped="" ref="0x2b72249f0d80"/>
        <function-ref name="clr" scoped="" ref="0x2b72249ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b72249ed100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b72249ed100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72249ed450"/>
        <function-ref name="isInput" scoped="" ref="0x2b72249ed5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72249ed760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72249ed8e8"/>
        <function-ref name="get" scoped="" ref="0x2b72249eda70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72249edbf8"/>
        <function-ref name="set" scoped="" ref="0x2b72249edd80"/>
        <function-ref name="clr" scoped="" ref="0x2b72249ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b72249ea100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b72249ea100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72249ea450"/>
        <function-ref name="isInput" scoped="" ref="0x2b72249ea5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72249ea760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72249ea8e8"/>
        <function-ref name="get" scoped="" ref="0x2b72249eaa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72249eabf8"/>
        <function-ref name="set" scoped="" ref="0x2b72249ead80"/>
        <function-ref name="clr" scoped="" ref="0x2b72249e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b72249e7100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b72249e7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72249e7450"/>
        <function-ref name="isInput" scoped="" ref="0x2b72249e75d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72249e7760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72249e78e8"/>
        <function-ref name="get" scoped="" ref="0x2b72249e7a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72249e7bf8"/>
        <function-ref name="set" scoped="" ref="0x2b72249e7d80"/>
        <function-ref name="clr" scoped="" ref="0x2b72249e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b72249e4100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b72249e4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72249e4450"/>
        <function-ref name="isInput" scoped="" ref="0x2b72249e45d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72249e4760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72249e48e8"/>
        <function-ref name="get" scoped="" ref="0x2b72249e4a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72249e4bf8"/>
        <function-ref name="set" scoped="" ref="0x2b72249e4d80"/>
        <function-ref name="clr" scoped="" ref="0x2b72249e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b72237be120" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b72237be120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237be470"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237be5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237be780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237be908"/>
        <function-ref name="get" scoped="" ref="0x2b72237bea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237bec18"/>
        <function-ref name="set" scoped="" ref="0x2b72237beda0"/>
        <function-ref name="clr" scoped="" ref="0x2b72237bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b72237cd5b8" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b72237cd5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237cd908"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237cda90"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237cdc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237cdda0"/>
        <function-ref name="get" scoped="" ref="0x2b72237cc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237cc1a8"/>
        <function-ref name="set" scoped="" ref="0x2b72237cc330"/>
        <function-ref name="clr" scoped="" ref="0x2b72237cc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b72237c2e40" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b72237c2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237c01c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237c0348"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237c04d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237c0658"/>
        <function-ref name="get" scoped="" ref="0x2b72237c07e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237c0968"/>
        <function-ref name="set" scoped="" ref="0x2b72237c0af0"/>
        <function-ref name="clr" scoped="" ref="0x2b72237c0c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b72237bd2a8" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b72237bd2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237bd5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237bd780"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237bd908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237bda90"/>
        <function-ref name="get" scoped="" ref="0x2b72237bdc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237bdda0"/>
        <function-ref name="set" scoped="" ref="0x2b72237ce020"/>
        <function-ref name="clr" scoped="" ref="0x2b72237ce1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b72237cc740" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b72237cc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237cca90"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237ccc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237ccda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237cb020"/>
        <function-ref name="get" scoped="" ref="0x2b72237cb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237cb330"/>
        <function-ref name="set" scoped="" ref="0x2b72237cb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b72237cb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b72237bf020" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b72237bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237bf370"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237bf4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237bf680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237bf808"/>
        <function-ref name="get" scoped="" ref="0x2b72237bf990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237bfb18"/>
        <function-ref name="set" scoped="" ref="0x2b72237bfca0"/>
        <function-ref name="clr" scoped="" ref="0x2b72237bfe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b72237ce430" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b72237ce430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237ce780"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237ce908"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237cea90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237cec18"/>
        <function-ref name="get" scoped="" ref="0x2b72237ceda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237cd020"/>
        <function-ref name="set" scoped="" ref="0x2b72237cd1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b72237cd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b72237cb8c8" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b72237cb8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237cbc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237cbda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237ca020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237ca1a8"/>
        <function-ref name="get" scoped="" ref="0x2b72237ca330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237ca4b8"/>
        <function-ref name="set" scoped="" ref="0x2b72237ca640"/>
        <function-ref name="clr" scoped="" ref="0x2b72237ca7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224a47180" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224a47180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224a474d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224a47658"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224a477e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224a47968"/>
        <function-ref name="get" scoped="" ref="0x2b7224a47af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224a47c78"/>
        <function-ref name="set" scoped="" ref="0x2b7224a47e00"/>
        <function-ref name="clr" scoped="" ref="0x2b7224a46020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224a44100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224a44100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224a44450"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224a445d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224a44760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224a448e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224a44a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224a44bf8"/>
        <function-ref name="set" scoped="" ref="0x2b7224a44d80"/>
        <function-ref name="clr" scoped="" ref="0x2b7224a43020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224a41100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224a41100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224a41450"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224a415d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224a41760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224a418e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224a41a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224a41bf8"/>
        <function-ref name="set" scoped="" ref="0x2b7224a41d80"/>
        <function-ref name="clr" scoped="" ref="0x2b7224a40020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224a3e100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224a3e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224a3e450"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224a3e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224a3e760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224a3e8e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224a3ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224a3ebf8"/>
        <function-ref name="set" scoped="" ref="0x2b7224a3ed80"/>
        <function-ref name="clr" scoped="" ref="0x2b7224a3d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224a3b100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224a3b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224a3b450"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224a3b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224a3b760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224a3b8e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224a3ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224a3bbf8"/>
        <function-ref name="set" scoped="" ref="0x2b7224a3bd80"/>
        <function-ref name="clr" scoped="" ref="0x2b7224a3a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224a38100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224a38100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224a38450"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224a385d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224a38760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224a388e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224a38a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224a38bf8"/>
        <function-ref name="set" scoped="" ref="0x2b7224a38d80"/>
        <function-ref name="clr" scoped="" ref="0x2b7224a37020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224a35100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224a35100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224a35450"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224a355d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224a35760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224a358e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224a35a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224a35bf8"/>
        <function-ref name="set" scoped="" ref="0x2b7224a35d80"/>
        <function-ref name="clr" scoped="" ref="0x2b7224a34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224a32100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224a32100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224a32450"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224a325d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224a32760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224a328e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224a32a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224a32bf8"/>
        <function-ref name="set" scoped="" ref="0x2b7224a32d80"/>
        <function-ref name="clr" scoped="" ref="0x2b7224a8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b72237d4bd8" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b72237d4bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237d3020"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237d31a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237d3330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237d34b8"/>
        <function-ref name="get" scoped="" ref="0x2b72237d3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237d37c8"/>
        <function-ref name="set" scoped="" ref="0x2b72237d3950"/>
        <function-ref name="clr" scoped="" ref="0x2b72237d3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b72237d0020" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b72237d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237d0370"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237d04f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237d0680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237d0808"/>
        <function-ref name="get" scoped="" ref="0x2b72237d0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237d0b18"/>
        <function-ref name="set" scoped="" ref="0x2b72237d0ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b72237d0e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b72237d6930" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b72237d6930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237d6c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237d6e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237d5020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237d51a8"/>
        <function-ref name="get" scoped="" ref="0x2b72237d5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237d54b8"/>
        <function-ref name="set" scoped="" ref="0x2b72237d5640"/>
        <function-ref name="clr" scoped="" ref="0x2b72237d57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b72237d3d60" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b72237d3d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237d20d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237d2260"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237d23e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237d2570"/>
        <function-ref name="get" scoped="" ref="0x2b72237d26f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237d2880"/>
        <function-ref name="set" scoped="" ref="0x2b72237d2a08"/>
        <function-ref name="clr" scoped="" ref="0x2b72237d2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b72237cf120" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b72237cf120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237cf470"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237cf5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237cf780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237cf908"/>
        <function-ref name="get" scoped="" ref="0x2b72237cfa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237cfc18"/>
        <function-ref name="set" scoped="" ref="0x2b72237cfda0"/>
        <function-ref name="clr" scoped="" ref="0x2b72237e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b72237d5a50" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b72237d5a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237d5da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237d4020"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237d41a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237d4330"/>
        <function-ref name="get" scoped="" ref="0x2b72237d44b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237d4640"/>
        <function-ref name="set" scoped="" ref="0x2b72237d47c8"/>
        <function-ref name="clr" scoped="" ref="0x2b72237d4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b72237d2e18" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b72237d2e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237d11a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237d1330"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237d14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237d1640"/>
        <function-ref name="get" scoped="" ref="0x2b72237d17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237d1950"/>
        <function-ref name="set" scoped="" ref="0x2b72237d1ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b72237d1c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b72237e02a8" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b72237e02a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237e05f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237e0780"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237e0908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237e0a90"/>
        <function-ref name="get" scoped="" ref="0x2b72237e0c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237e0da0"/>
        <function-ref name="set" scoped="" ref="0x2b72237df020"/>
        <function-ref name="clr" scoped="" ref="0x2b72237df1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224a99180" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224a99180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224a994d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224a99658"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224a997e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224a99968"/>
        <function-ref name="get" scoped="" ref="0x2b7224a99af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224a99c78"/>
        <function-ref name="set" scoped="" ref="0x2b7224a99e00"/>
        <function-ref name="clr" scoped="" ref="0x2b7224a97020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224a95100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224a95100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224a95450"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224a955d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224a95760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224a958e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224a95a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224a95bf8"/>
        <function-ref name="set" scoped="" ref="0x2b7224a95d80"/>
        <function-ref name="clr" scoped="" ref="0x2b7224a94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224a92100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224a92100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224a92450"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224a925d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224a92760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224a928e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224a92a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224a92bf8"/>
        <function-ref name="set" scoped="" ref="0x2b7224a92d80"/>
        <function-ref name="clr" scoped="" ref="0x2b7224a91020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224a8f100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224a8f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224a8f450"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224a8f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224a8f760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224a8f8e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224a8fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224a8fbf8"/>
        <function-ref name="set" scoped="" ref="0x2b7224a8fd80"/>
        <function-ref name="clr" scoped="" ref="0x2b7224a8e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224ae9100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224ae9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224ae9450"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224ae95d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224ae9760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224ae98e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224ae9a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224ae9bf8"/>
        <function-ref name="set" scoped="" ref="0x2b7224ae9d80"/>
        <function-ref name="clr" scoped="" ref="0x2b7224ae8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224ae6100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224ae6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224ae6450"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224ae65d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224ae6760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224ae68e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224ae6a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224ae6bf8"/>
        <function-ref name="set" scoped="" ref="0x2b7224ae6d80"/>
        <function-ref name="clr" scoped="" ref="0x2b7224ae5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224ae3100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224ae3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224ae3450"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224ae35d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224ae3760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224ae38e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224ae3a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224ae3bf8"/>
        <function-ref name="set" scoped="" ref="0x2b7224ae3d80"/>
        <function-ref name="clr" scoped="" ref="0x2b7224ae2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224ae0100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224ae0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224ae0450"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224ae05d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224ae0760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224ae08e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224ae0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224ae0bf8"/>
        <function-ref name="set" scoped="" ref="0x2b7224ae0d80"/>
        <function-ref name="clr" scoped="" ref="0x2b7224adf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b72237e9740" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b72237e9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237e9a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237e9c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237e9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237e8020"/>
        <function-ref name="get" scoped="" ref="0x2b72237e81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237e8330"/>
        <function-ref name="set" scoped="" ref="0x2b72237e84b8"/>
        <function-ref name="clr" scoped="" ref="0x2b72237e8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b72237e6bd8" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b72237e6bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237e4020"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237e41a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237e4330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237e44b8"/>
        <function-ref name="get" scoped="" ref="0x2b72237e4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237e47c8"/>
        <function-ref name="set" scoped="" ref="0x2b72237e4950"/>
        <function-ref name="clr" scoped="" ref="0x2b72237e4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b72237d9500" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b72237d9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237d9850"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237d99d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237d9b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237d9ce8"/>
        <function-ref name="get" scoped="" ref="0x2b72237d9e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237d8020"/>
        <function-ref name="set" scoped="" ref="0x2b72237d81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b72237d8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b72237e88c8" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b72237e88c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237e8c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237e8da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237e7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237e71a8"/>
        <function-ref name="get" scoped="" ref="0x2b72237e7330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237e74b8"/>
        <function-ref name="set" scoped="" ref="0x2b72237e7640"/>
        <function-ref name="clr" scoped="" ref="0x2b72237e77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b72237e4d60" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b72237e4d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237e30d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237e3260"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237e33e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237e3570"/>
        <function-ref name="get" scoped="" ref="0x2b72237e36f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237e3880"/>
        <function-ref name="set" scoped="" ref="0x2b72237e3a08"/>
        <function-ref name="clr" scoped="" ref="0x2b72237e3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b72237d85b8" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b72237d85b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237d8908"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237d8a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237d8c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237d8da0"/>
        <function-ref name="get" scoped="" ref="0x2b72237e9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237e91a8"/>
        <function-ref name="set" scoped="" ref="0x2b72237e9330"/>
        <function-ref name="clr" scoped="" ref="0x2b72237e94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b72237e7a50" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b72237e7a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237e7da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237e6020"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237e61a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237e6330"/>
        <function-ref name="get" scoped="" ref="0x2b72237e64b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237e6640"/>
        <function-ref name="set" scoped="" ref="0x2b72237e67c8"/>
        <function-ref name="clr" scoped="" ref="0x2b72237e6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b72237e3e18" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b72237e3e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237e21a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237e2330"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237e24b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237e2640"/>
        <function-ref name="get" scoped="" ref="0x2b72237e27c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72237e2950"/>
        <function-ref name="set" scoped="" ref="0x2b72237e2ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b72237e2c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224aed180" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224aed180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224aed4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224aed658"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224aed7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224aed968"/>
        <function-ref name="get" scoped="" ref="0x2b7224aedaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224aedc78"/>
        <function-ref name="set" scoped="" ref="0x2b7224aede00"/>
        <function-ref name="clr" scoped="" ref="0x2b7224aeb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224b47100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224b47100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224b47450"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224b475d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224b47760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224b478e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224b47a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224b47bf8"/>
        <function-ref name="set" scoped="" ref="0x2b7224b47d80"/>
        <function-ref name="clr" scoped="" ref="0x2b7224b46020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224b44100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224b44100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224b44450"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224b445d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224b44760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224b448e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224b44a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224b44bf8"/>
        <function-ref name="set" scoped="" ref="0x2b7224b44d80"/>
        <function-ref name="clr" scoped="" ref="0x2b7224b43020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224b41100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224b41100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224b41450"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224b415d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224b41760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224b418e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224b41a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224b41bf8"/>
        <function-ref name="set" scoped="" ref="0x2b7224b41d80"/>
        <function-ref name="clr" scoped="" ref="0x2b7224b40020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224b3e100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224b3e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224b3e450"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224b3e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224b3e760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224b3e8e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224b3ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224b3ebf8"/>
        <function-ref name="set" scoped="" ref="0x2b7224b3ed80"/>
        <function-ref name="clr" scoped="" ref="0x2b7224b3d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224b3b100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224b3b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224b3b450"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224b3b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224b3b760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224b3b8e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224b3ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224b3bbf8"/>
        <function-ref name="set" scoped="" ref="0x2b7224b3bd80"/>
        <function-ref name="clr" scoped="" ref="0x2b7224b3a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224b38100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224b38100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224b38450"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224b385d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224b38760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224b388e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224b38a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224b38bf8"/>
        <function-ref name="set" scoped="" ref="0x2b7224b38d80"/>
        <function-ref name="clr" scoped="" ref="0x2b7224b37020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7224b35100" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7224b35100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224b35450"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224b355d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224b35760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224b358e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224b35a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224b35bf8"/>
        <function-ref name="set" scoped="" ref="0x2b7224b35d80"/>
        <function-ref name="clr" scoped="" ref="0x2b7224b34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b72237ed3e0" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b72237ed3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72237ed730"/>
        <function-ref name="isInput" scoped="" ref="0x2b72237ed8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72237eda40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72237edbc8"/>
        <function-ref name="get" scoped="" ref="0x2b72237edd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722380d020"/>
        <function-ref name="set" scoped="" ref="0x2b722380d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b722380d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7223809c38" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7223809c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223808020"/>
        <function-ref name="isInput" scoped="" ref="0x2b72238081a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223808330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72238084b8"/>
        <function-ref name="get" scoped="" ref="0x2b7223808640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72238087c8"/>
        <function-ref name="set" scoped="" ref="0x2b7223808950"/>
        <function-ref name="clr" scoped="" ref="0x2b7223808ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b72238163e0" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b72238163e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223816730"/>
        <function-ref name="isInput" scoped="" ref="0x2b72238168b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223816a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223816bc8"/>
        <function-ref name="get" scoped="" ref="0x2b7223816d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223815020"/>
        <function-ref name="set" scoped="" ref="0x2b72238151a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7223815330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7223811c38" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7223811c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223810020"/>
        <function-ref name="isInput" scoped="" ref="0x2b72238101a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223810330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72238104b8"/>
        <function-ref name="get" scoped="" ref="0x2b7223810640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72238107c8"/>
        <function-ref name="set" scoped="" ref="0x2b7223810950"/>
        <function-ref name="clr" scoped="" ref="0x2b7223810ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b722381d3e0" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b722381d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722381d730"/>
        <function-ref name="isInput" scoped="" ref="0x2b722381d8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b722381da40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722381dbc8"/>
        <function-ref name="get" scoped="" ref="0x2b722381dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722381c020"/>
        <function-ref name="set" scoped="" ref="0x2b722381c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b722381c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7223819c38" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7223819c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223818020"/>
        <function-ref name="isInput" scoped="" ref="0x2b72238181a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223818330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72238184b8"/>
        <function-ref name="get" scoped="" ref="0x2b7223818640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72238187c8"/>
        <function-ref name="set" scoped="" ref="0x2b7223818950"/>
        <function-ref name="clr" scoped="" ref="0x2b7223818ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7223826480" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7223826480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72238267d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7223826958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223826ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223826c68"/>
        <function-ref name="get" scoped="" ref="0x2b7223826df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223825020"/>
        <function-ref name="set" scoped="" ref="0x2b72238251a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7223825330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7223822c38" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7223822c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223820020"/>
        <function-ref name="isInput" scoped="" ref="0x2b72238201a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223820330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72238204b8"/>
        <function-ref name="get" scoped="" ref="0x2b7223820640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72238207c8"/>
        <function-ref name="set" scoped="" ref="0x2b7223820950"/>
        <function-ref name="clr" scoped="" ref="0x2b7223820ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7223830520" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7223830520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223830870"/>
        <function-ref name="isInput" scoped="" ref="0x2b72238309f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223830b80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223830d08"/>
        <function-ref name="get" scoped="" ref="0x2b722382f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722382f1a8"/>
        <function-ref name="set" scoped="" ref="0x2b722382f330"/>
        <function-ref name="clr" scoped="" ref="0x2b722382f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b722382bcd8" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b722382bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722382a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b722382a228"/>
        <function-ref name="toggle" scoped="" ref="0x2b722382a3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722382a538"/>
        <function-ref name="get" scoped="" ref="0x2b722382a6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722382a848"/>
        <function-ref name="set" scoped="" ref="0x2b722382a9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b722382ab58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b722383a3e0" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b722383a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722383a730"/>
        <function-ref name="isInput" scoped="" ref="0x2b722383a8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b722383aa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722383abc8"/>
        <function-ref name="get" scoped="" ref="0x2b722383ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223838020"/>
        <function-ref name="set" scoped="" ref="0x2b72238381a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7223838330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7223835c38" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7223835c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223834020"/>
        <function-ref name="isInput" scoped="" ref="0x2b72238341a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223834330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72238344b8"/>
        <function-ref name="get" scoped="" ref="0x2b7223834640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72238347c8"/>
        <function-ref name="set" scoped="" ref="0x2b7223834950"/>
        <function-ref name="clr" scoped="" ref="0x2b7223834ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b72238433e0" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b72238433e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7223843730"/>
        <function-ref name="isInput" scoped="" ref="0x2b72238438b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7223843a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7223843bc8"/>
        <function-ref name="get" scoped="" ref="0x2b7223843d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7223842020"/>
        <function-ref name="set" scoped="" ref="0x2b72238421a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7223842330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b722383fc38" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b722383fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722383e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b722383e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b722383e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722383e4b8"/>
        <function-ref name="get" scoped="" ref="0x2b722383e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722383e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b722383e950"/>
        <function-ref name="clr" scoped="" ref="0x2b722383ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b722387c4b0" loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b722387c4b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b72235d66f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b72235d66f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b722387c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b722387cae0" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b722387cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b722387ce30"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b722387a020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b722387a1a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b722387a330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b722387a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b7223898418" loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b7223898418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7223898768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b72236f7c50" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b72236f7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b7223899020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b7223899ce0" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b7223899ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72238980a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b7223899308" loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b7223899308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7223899658"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b72238997e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b7223899968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b72235d11c8" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b72235d11c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b72235d1518"/>
        <function-ref name="runTask" scoped="" ref="0x2b72235d16a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b72235f8698" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b72235f8698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72235f89e8"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b72235f8b70"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b72235f8cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b72236a2c58" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b72236a2c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b72236af020"/>
        <function-ref name="runTask" scoped="" ref="0x2b72236af1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b72236ac168" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b72236ac168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b72236ac4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b72236a3d88" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b72236a3d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72236a2170"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b72236a22f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b72236a2480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b72236c6988" loc="88:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b72236c6988"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b72236c6cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b72235f7e38" loc="84:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b72235f7e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b72236cb1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b72236c73c8" loc="85:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b72236c73c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b72236c7718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b72236ed420" loc="5:BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b72236ed420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b72236ed770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b72238b5848" loc="7:BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b72238b5848"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b72238b5b98"/>
        <function-ref name="stopDone" scoped="" ref="0x2b72238b5d20"/>
        <function-ref name="start" scoped="" ref="0x2b72238b4020"/>
        <function-ref name="stop" scoped="" ref="0x2b72238b41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x2b72239521d8" loc="12:BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMPacket" scoped="" ref="0x2b72239521d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b7223952528"/>
        <function-ref name="source" scoped="" ref="0x2b72239526b0"/>
        <function-ref name="address" scoped="" ref="0x2b7223952838"/>
        <function-ref name="destination" scoped="" ref="0x2b72239529c0"/>
        <function-ref name="setSource" scoped="" ref="0x2b7223952b48"/>
        <function-ref name="setDestination" scoped="" ref="0x2b7223952cd0"/>
        <function-ref name="type" scoped="" ref="0x2b7223952e58"/>
        <function-ref name="setType" scoped="" ref="0x2b722393b020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b722393b1a8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b722393b330"/>
        <function-ref name="localGroup" scoped="" ref="0x2b722393b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x2b7223951020" loc="15:BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartReceive" scoped="" ref="0x2b7223951020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223951370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x2b72238b0be0" loc="6:BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2b72238b0be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b72238b5020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b72238b51a8"/>
        <function-ref name="start" scoped="" ref="0x2b72238b5330"/>
        <function-ref name="stop" scoped="" ref="0x2b72238b54b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2b7223933848" loc="11:BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b7223933848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7223933b98"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7223933d20"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7223925020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72239251a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7223925330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b72238ae3c8" loc="10:BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b72238ae3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b72238ae718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendQuestionTask" ref="0x2b7223959738" loc="31:BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioSendQuestionTask" scoped="" ref="0x2b7223959738"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7223959b88"/>
        <function-ref name="runTask" scoped="" ref="0x2b7223959d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b722394e080" loc="19:BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b722394e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b722394e3d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b722394e558"/>
        <function-ref name="led1On" scoped="" ref="0x2b722394e6e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b722394e868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b722394e9f0"/>
        <function-ref name="get" scoped="" ref="0x2b722394eb78"/>
        <function-ref name="led1Off" scoped="" ref="0x2b722394ed00"/>
        <function-ref name="led2Off" scoped="" ref="0x2b722394d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b722394d020"/>
        <function-ref name="led0On" scoped="" ref="0x2b722394d1a8"/>
        <function-ref name="led2On" scoped="" ref="0x2b722394d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b7223928728" loc="9:BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b7223928728"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223928a78"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7223928c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7223928d88"/>
        <function-ref name="cancel" scoped="" ref="0x2b72238af020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b72238af1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x2b72239516a0" loc="16:BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartPacket" scoped="" ref="0x2b72239516a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b72239519f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7223951b78"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7223951d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7223950020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b72239501a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x2b722393bcc8" loc="14:BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartSend" scoped="" ref="0x2b722393bcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b72239340a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7223934228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72239343b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223934538"/>
        <function-ref name="sendDone" scoped="" ref="0x2b72239346c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x2b7223950508" loc="17:BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartAMPacket" scoped="" ref="0x2b7223950508"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b7223950858"/>
        <function-ref name="source" scoped="" ref="0x2b72239509e0"/>
        <function-ref name="address" scoped="" ref="0x2b7223950b68"/>
        <function-ref name="destination" scoped="" ref="0x2b7223950cf0"/>
        <function-ref name="setSource" scoped="" ref="0x2b7223950e78"/>
        <function-ref name="setDestination" scoped="" ref="0x2b722394f030"/>
        <function-ref name="type" scoped="" ref="0x2b722394f1b8"/>
        <function-ref name="setType" scoped="" ref="0x2b722394f340"/>
        <function-ref name="isForMe" scoped="" ref="0x2b722394f4c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b722394f650"/>
        <function-ref name="localGroup" scoped="" ref="0x2b722394f7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="serialSendAnswerTask" ref="0x2b7223958730" loc="32:BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="serialSendAnswerTask" scoped="" ref="0x2b7223958730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7223958a80"/>
        <function-ref name="runTask" scoped="" ref="0x2b7223958c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b722397d340" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b722397d340"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b722397d690"/>
        <function-ref name="stopDone" scoped="" ref="0x2b722397d818"/>
        <function-ref name="start" scoped="" ref="0x2b722397d9a0"/>
        <function-ref name="stop" scoped="" ref="0x2b722397db28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b722398d4f0" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b722398d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b722398d840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b722398dac8" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b722398dac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b722398de18"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b722398a020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b722398a1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b722398a330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b722398a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b72239792c8" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b72239792c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223979618"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72239797a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7223979928"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223979ab0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223979c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b722398e020" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b722398e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b722398e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b7223986080" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b7223986080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b72239863d0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b7223986558"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b72239866e0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b7223986868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b722398f400" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b722398f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b722398f750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b722399a998" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b722399a998"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b722399ace8"/>
        <function-ref name="noAck" scoped="" ref="0x2b722399ae70"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b7223987020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b72239a6e78" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b72239a6e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b72239991f8"/>
        <function-ref name="setRetries" scoped="" ref="0x2b7223999380"/>
        <function-ref name="getRetries" scoped="" ref="0x2b7223999508"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b7223999690"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b7223999818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b722398a758" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b722398a758"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b722398aaa8"/>
        <function-ref name="source" scoped="" ref="0x2b722398ac30"/>
        <function-ref name="address" scoped="" ref="0x2b722398adb8"/>
        <function-ref name="destination" scoped="" ref="0x2b7223989020"/>
        <function-ref name="setSource" scoped="" ref="0x2b72239891a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b7223989330"/>
        <function-ref name="type" scoped="" ref="0x2b72239894b8"/>
        <function-ref name="setType" scoped="" ref="0x2b7223989640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b72239897c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b7223989950"/>
        <function-ref name="localGroup" scoped="" ref="0x2b7223989ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b72239a28f0" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b72239a28f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b72239a2c40"/>
        <function-ref name="setChannel" scoped="" ref="0x2b72239a2dc8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b7223994020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x2b72239b25e8" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2b72239b25e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7223663788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b72239a4a88"/>
        <function-ref name="clear" scoped="" ref="0x2b72239b3190"/>
        <function-ref name="isValid" scoped="" ref="0x2b72239a43a8"/>
        <function-ref name="set" scoped="" ref="0x2b72239b3870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b72239b1478" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b72239b1478"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b72239b0a88"/>
        <function-ref name="clear" scoped="" ref="0x2b72239ae190"/>
        <function-ref name="isValid" scoped="" ref="0x2b72239b03a8"/>
        <function-ref name="set" scoped="" ref="0x2b72239ae870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b72239ada78" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b72239ada78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b72239addc8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b72239aa020"/>
        <function-ref name="start" scoped="" ref="0x2b72239aa1a8"/>
        <function-ref name="stop" scoped="" ref="0x2b72239aa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b72239c80c8" loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b72239c80c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b72239c76a0"/>
        <function-ref name="get" scoped="" ref="0x2b72239c7190"/>
        <function-ref name="isSet" scoped="" ref="0x2b72239c8c48"/>
        <function-ref name="set" scoped="" ref="0x2b72239c7bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b72239d6860" loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b72239d6860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b72239d5cc0"/>
        <function-ref name="clear" scoped="" ref="0x2b72239d3420"/>
        <function-ref name="isValid" scoped="" ref="0x2b72239d55e0"/>
        <function-ref name="set" scoped="" ref="0x2b72239d3b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b72239c0348" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b72239c0348"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b72239c0698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b72239be2a8" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b72239be2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b72239be5f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b72239be780"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72239be908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72239bea90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b72239bec18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b72239aaaa8" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b72239aaaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b72239aadf8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72239a9020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72239a91a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b72239a9330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b72239a94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b72239c1818" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b72239c1818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b72239c1b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b72239ccd80" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b72239ccd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b72239c9388"/>
        <function-ref name="get" scoped="" ref="0x2b72239cbe38"/>
        <function-ref name="isSet" scoped="" ref="0x2b72239cb928"/>
        <function-ref name="set" scoped="" ref="0x2b72239c9898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b72239bb020" loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b72239bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b72239bb370"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b72239bb4f8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b72239bb680"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b72239bb808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b72239a9c38" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b72239a9c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b72239c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b72239c3978" loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b72239c3978"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b72238f6140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b72239dbe10"/>
        <function-ref name="clear" scoped="" ref="0x2b72239d7558"/>
        <function-ref name="isValid" scoped="" ref="0x2b72239db730"/>
        <function-ref name="set" scoped="" ref="0x2b72239d7c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b72239d95a8" loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b72239d95a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b72238f6140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b72239c3150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b72239cd930" loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b72239cd930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b72239cc020"/>
        <function-ref name="get" scoped="" ref="0x2b72239b89f0"/>
        <function-ref name="isSet" scoped="" ref="0x2b72239b84e0"/>
        <function-ref name="set" scoped="" ref="0x2b72239cc530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b72239bc658" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b72239bc658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b72239bc9a8"/>
        <function-ref name="noAck" scoped="" ref="0x2b72239bcb30"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b72239bccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b72239bf020" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b72239bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b72239bf370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b72239bbab8" loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b72239bbab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b72239bbe08"/>
        <function-ref name="setRetries" scoped="" ref="0x2b72239ba020"/>
        <function-ref name="getRetries" scoped="" ref="0x2b72239ba1a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b72239ba330"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b72239ba4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b72239bd020" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b72239bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b72239bd370"/>
        <function-ref name="source" scoped="" ref="0x2b72239bd4f8"/>
        <function-ref name="address" scoped="" ref="0x2b72239bd680"/>
        <function-ref name="destination" scoped="" ref="0x2b72239bd808"/>
        <function-ref name="setSource" scoped="" ref="0x2b72239bd990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b72239bdb18"/>
        <function-ref name="type" scoped="" ref="0x2b72239bdca0"/>
        <function-ref name="setType" scoped="" ref="0x2b72239bde28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b72239bc020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b72239bc1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b72239bc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b72239ba780" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b72239ba780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b72239babd0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b72239bad58"/>
        <function-ref name="getChannel" scoped="" ref="0x2b72239b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b72239c2990" loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b72239c2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b72239c2ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b72239bfbb0" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b72239bfbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b72239be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b72239d2c60" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b72239d2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b72239cf020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b72239cf1a8"/>
        <function-ref name="start" scoped="" ref="0x2b72239cf330"/>
        <function-ref name="stop" scoped="" ref="0x2b72239cf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b7223a0e8b8" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b7223a0e8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7223a0b020"/>
        <function-ref name="get" scoped="" ref="0x2b7223a0d9a0"/>
        <function-ref name="isSet" scoped="" ref="0x2b7223a0d490"/>
        <function-ref name="set" scoped="" ref="0x2b7223a0b530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x2b72239e0710" loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x2b72239e0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b72239e0a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x2b72239df4b8" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x2b72239df4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b72239df908"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b72239dfa90"/>
        <function-ref name="request" scoped="" ref="0x2b72239dfc18"/>
        <function-ref name="granted" scoped="" ref="0x2b72239dfda0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b72239f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b72239e5498" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b72239e5498"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b72239e57e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b72239cfc30" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b72239cfc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b72239e8020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72239e81a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72239e8330"/>
        <function-ref name="cancel" scoped="" ref="0x2b72239e84b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b72239e8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b72239e7968" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b72239e7968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b72239e7cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b72239fd308" loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b72239fd308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b72239fd658"/>
        <function-ref name="address" scoped="" ref="0x2b72239fd7e0"/>
        <function-ref name="destination" scoped="" ref="0x2b72239fd968"/>
        <function-ref name="setSource" scoped="" ref="0x2b72239fdaf0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b72239fdc78"/>
        <function-ref name="pan" scoped="" ref="0x2b72239fde00"/>
        <function-ref name="setPan" scoped="" ref="0x2b72239ed020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b72239ed1a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b72239ed330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x2b72239ed6e0" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2b72239ed6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b72239eda30"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b72239edbb8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72239edd40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72239eb020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b72239eb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b72239f75a0" loc="79:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b72239f75a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7223a0fb70"/>
        <function-ref name="get" scoped="" ref="0x2b7223a0f660"/>
        <function-ref name="isSet" scoped="" ref="0x2b7223a0f150"/>
        <function-ref name="set" scoped="" ref="0x2b7223a0e0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b72239ebe28" loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b72239ebe28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b72239fc1a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b72239fc330"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b72239fc4b8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b72239fc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x2b72239e29e8" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b72239e29e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b72239e2d38"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b72239e1020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72239e11a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72239e1330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b72239e14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b72239e8dc0" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b72239e8dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b72239e7170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b7223a098b0" loc="84:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b7223a098b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b72238f6140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b7223a06020"/>
        <function-ref name="clear" scoped="" ref="0x2b7223a06700"/>
        <function-ref name="isValid" scoped="" ref="0x2b7223a07828"/>
        <function-ref name="set" scoped="" ref="0x2b7223a06de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b7223a0a4e0" loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b7223a0a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b72238f6140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7223a09088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b72239f91f8" loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b72239f91f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b72239f87f8"/>
        <function-ref name="get" scoped="" ref="0x2b72239f82e8"/>
        <function-ref name="isSet" scoped="" ref="0x2b72239f9d78"/>
        <function-ref name="set" scoped="" ref="0x2b72239f8d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b72239eb4d0" loc="68:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b72239eb4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b72239eb820"/>
        <function-ref name="noAck" scoped="" ref="0x2b72239eb9a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b72239ebb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b72239f3250" loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b72239f3250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b72239f35a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72239f3728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72239f38b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b72239f3a38"/>
        <function-ref name="sendDone" scoped="" ref="0x2b72239f3bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b72239e41c8" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b72239e41c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b72239e4518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b72239fc8f0" loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b72239fc8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b72239fcc40"/>
        <function-ref name="setRetries" scoped="" ref="0x2b72239fcdc8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b72239fb020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b72239fb1a8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b72239fb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b72239fb5f8" loc="76:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b72239fb5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b72239fb948"/>
        <function-ref name="setChannel" scoped="" ref="0x2b72239fbad0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b72239fbc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b72239e3378" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b72239e3378"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b72239e36c8"/>
        <function-ref name="source" scoped="" ref="0x2b72239e3850"/>
        <function-ref name="address" scoped="" ref="0x2b72239e39d8"/>
        <function-ref name="destination" scoped="" ref="0x2b72239e3b60"/>
        <function-ref name="setSource" scoped="" ref="0x2b72239e3ce8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b72239e3e70"/>
        <function-ref name="type" scoped="" ref="0x2b72239e2020"/>
        <function-ref name="setType" scoped="" ref="0x2b72239e21a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b72239e2330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b72239e24b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b72239e2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b7223a059d8" loc="85:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b7223a059d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b7223a03e48"/>
        <function-ref name="clear" scoped="" ref="0x2b7223a1c558"/>
        <function-ref name="isValid" scoped="" ref="0x2b7223a03768"/>
        <function-ref name="set" scoped="" ref="0x2b7223a1cc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b72239e0020" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b72239e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b72239e0370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b7223a0bb78" loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b7223a0bb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b7223a0a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b72239e4d58" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b72239e4d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b72239e30d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x2b7223a3f8e0" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x2b7223a3f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b7223a3fc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x2b7223a35558" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x2b7223a35558"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x2b7223a358a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x2b7223a41da8" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2b7223a41da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b7223a30170"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b7223a302f8"/>
        <function-ref name="source" scoped="" ref="0x2b7223a30480"/>
        <function-ref name="destination" scoped="" ref="0x2b7223a30608"/>
        <function-ref name="setSource" scoped="" ref="0x2b7223a30790"/>
        <function-ref name="setDestination" scoped="" ref="0x2b7223a30918"/>
        <function-ref name="setGroup" scoped="" ref="0x2b7223a30aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x2b7223a2dbc8" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x2b7223a2dbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x2b7223a31020"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x2b7223a311a8"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x2b7223a31330"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x2b7223a314b8"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x2b7223a31640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b7223a56678" loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b7223a56678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b7223a569c8"/>
        <function-ref name="wait" scoped="" ref="0x2b7223a56b50"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223a56cd8"/>
        <function-ref name="isFree" scoped="" ref="0x2b7223a56e60"/>
        <function-ref name="getNow" scoped="" ref="0x2b7223a5c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x2b7223a6c860" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x2b7223a6c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7223a6cbb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7223a6cd38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7223a5b020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7223a5b1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7223a5b330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7223a5b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b7223a5ba40" loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b7223a5ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b72238f6140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b7223a6a020"/>
        <function-ref name="clear" scoped="" ref="0x2b7223a6a700"/>
        <function-ref name="isValid" scoped="" ref="0x2b7223a558f8"/>
        <function-ref name="set" scoped="" ref="0x2b7223a6ade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x2b7223a12428" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b7223a12428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7223a12778"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7223a12900"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7223a12a88"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b7223a12c10"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b7223a12d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x2b7223a22020" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x2b7223a22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x2b7223a22370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x2b7223a234c0" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2b7223a234c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2b7223a23810"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2b7223a23998"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b7223a23b20"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2b7223a23ca8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2b7223a23e30"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2b7223a15020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b7223a151a8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b7223a15330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b7223a5e858" loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b7223a5e858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b7223a5eba8"/>
        <function-ref name="getDSN" scoped="" ref="0x2b7223a5ed30"/>
        <function-ref name="setFCF" scoped="" ref="0x2b7223a40020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b7223a401a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b7223a40330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b7223a404b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2b7223a40640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b7223a407c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b7223a40950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b7223a40ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b7223a40c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b7223a40de8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b7223a3e020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b7223a3e2a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b7223a3e430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b7223a3e5b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b7223a3e740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b7223a3e8c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b7223a3ea50"/>
        <function-ref name="isForMe" scoped="" ref="0x2b7223a3ebd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b7223a3ed60"/>
        <function-ref name="getFCF" scoped="" ref="0x2b7223a5d020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b7223a5d1a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b7223a5d330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b7223a5d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x2b7223a1e5f0" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2b7223a1e5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b7223a1e940"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b7223a1eac8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b7223a1ec50"/>
        <function-ref name="getSender" scoped="" ref="0x2b7223a1edd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x2b7223a328d0" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2b7223a328d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b7223a32c20"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b7223a32da8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b7223a1d020"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b7223a1d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b7223abdc50" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b7223abdc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b7223ae5020"/>
        <function-ref name="wait" scoped="" ref="0x2b7223ae51a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223ae5330"/>
        <function-ref name="isFree" scoped="" ref="0x2b7223ae54b8"/>
        <function-ref name="getNow" scoped="" ref="0x2b7223ae5640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b7223ae5c68" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b7223ae5c68"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b72235d66f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b72235d66f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b72238f6140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b72238f6540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7223af5410"/>
        <function-ref name="fired" scoped="" ref="0x2b7223af74a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b7223af7db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7223af7930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7223af5898"/>
        <function-ref name="start" scoped="" ref="0x2b7223af89f0"/>
        <function-ref name="stop" scoped="" ref="0x2b7223af7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b7224c41060" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b7224c41060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b7224c413d0"/>
        <function-ref name="wait" scoped="" ref="0x2b7224c41558"/>
        <function-ref name="cancel" scoped="" ref="0x2b7224c416e0"/>
        <function-ref name="isFree" scoped="" ref="0x2b7224c41868"/>
        <function-ref name="getNow" scoped="" ref="0x2b7224c419f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b7224c40020" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b7224c40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b72238f6140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b72238f6540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7224c3e690"/>
        <function-ref name="fired" scoped="" ref="0x2b7224c3f6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b7224c3e088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7224c3fb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7224c3eb18"/>
        <function-ref name="start" scoped="" ref="0x2b7224c40d70"/>
        <function-ref name="stop" scoped="" ref="0x2b7224c3f270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b7224c3d020" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b7224c3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b7224c3d370"/>
        <function-ref name="suspend" scoped="" ref="0x2b7224c3d4f8"/>
        <function-ref name="resume" scoped="" ref="0x2b7224c3d680"/>
        <function-ref name="run" scoped="" ref="0x2b7224c3d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x2b7223ae75d0" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b7223ae75d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b7223ae7920"/>
        <function-ref name="suspend" scoped="" ref="0x2b7223ae7aa8"/>
        <function-ref name="resume" scoped="" ref="0x2b7223ae7c30"/>
        <function-ref name="run" scoped="" ref="0x2b7223ae7db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b7223ba4430" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b7223ba4430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223ba4780"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223ba4908"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223ba4a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b7223ba4d18" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b7223ba4d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223ba30a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b7223ba71a0" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b7223ba71a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b7223ba7510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b7223baa700" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b7223baa700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7223baaa50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7223baabd8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7223baad60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7223ba9020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7223ba91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b7223ba9510" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b7223ba9510"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223ba9880"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7223ba9a08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7223ba9b90"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223ba9d18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223ba8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b7223ba8aa0" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b7223ba8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223ba8e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b7223ba5678" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b7223ba5678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7223ba59c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7223ba5b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7223ba5cd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7223ba5e60"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7223ba4020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7223ba41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b7223ba3328" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b7223ba3328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b7223ba3678"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b7223ba3800"/>
        <function-ref name="source" scoped="" ref="0x2b7223ba3988"/>
        <function-ref name="destination" scoped="" ref="0x2b7223ba3b10"/>
        <function-ref name="setSource" scoped="" ref="0x2b7223ba3c98"/>
        <function-ref name="setDestination" scoped="" ref="0x2b7223ba3e20"/>
        <function-ref name="setGroup" scoped="" ref="0x2b7223ba2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b7223ba8388" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b7223ba8388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223ba86f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b7223ba78b8" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b7223ba78b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223ba7c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b7223bab1f0" loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b7223bab1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b7223bab540"/>
        <function-ref name="source" scoped="" ref="0x2b7223bab6c8"/>
        <function-ref name="address" scoped="" ref="0x2b7223bab850"/>
        <function-ref name="destination" scoped="" ref="0x2b7223bab9d8"/>
        <function-ref name="setSource" scoped="" ref="0x2b7223babb60"/>
        <function-ref name="setDestination" scoped="" ref="0x2b7223babce8"/>
        <function-ref name="type" scoped="" ref="0x2b7223babe70"/>
        <function-ref name="setType" scoped="" ref="0x2b7223baa020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b7223baa1a8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b7223baa330"/>
        <function-ref name="localGroup" scoped="" ref="0x2b7223baa4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b7223ba5020" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b7223ba5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223ba5390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b7224c1e430" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b7224c1e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7224c1e780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b7224c1fa50" loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b7224c1fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7224c1fda0"/>
        <function-ref name="cancel" scoped="" ref="0x2b7224c1e020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7224c1e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b7224c216f8" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b7224c216f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b7224c21a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b7224c25d20" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b7224c25d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7224c240a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7224c24228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7224c243b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7224c24538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7224c246c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b7224c24a28" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b7224c24a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7224c24d98"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7224c23020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7224c231a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b7224c23330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7224c234b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b7224c21020" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b7224c21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7224c21390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b7224c27958" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b7224c27958"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7224c27ca8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7224c27e30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7224c26020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7224c261a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7224c26330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7224c264b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b7224c1ea08" loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b7224c1ea08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b7224c1ee58"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b7224c1d020"/>
        <function-ref name="source" scoped="" ref="0x2b7224c1d1a8"/>
        <function-ref name="destination" scoped="" ref="0x2b7224c1d330"/>
        <function-ref name="setSource" scoped="" ref="0x2b7224c1d4b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b7224c1d640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b7224c1d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b7224c1da10" loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b7224c1da10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b7224c1dd60"/>
        <function-ref name="changed" scoped="" ref="0x2b7224c1c020"/>
        <function-ref name="amGroup" scoped="" ref="0x2b7224c1c1a8"/>
        <function-ref name="setAddress" scoped="" ref="0x2b7224c1c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b7224c20ba8" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b7224c20ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7224c1f020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7224c1f1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7224c1f330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7224c1f4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7224c1f640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7224c1f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b7224c23820" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b7224c23820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7224c23b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b7224c21e10" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b7224c21e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7224c201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b7224c26700" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b7224c26700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b7224c26a50"/>
        <function-ref name="source" scoped="" ref="0x2b7224c26bd8"/>
        <function-ref name="address" scoped="" ref="0x2b7224c26d60"/>
        <function-ref name="destination" scoped="" ref="0x2b7224c25020"/>
        <function-ref name="setSource" scoped="" ref="0x2b7224c251a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b7224c25330"/>
        <function-ref name="type" scoped="" ref="0x2b7224c254b8"/>
        <function-ref name="setType" scoped="" ref="0x2b7224c25640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b7224c257c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b7224c25950"/>
        <function-ref name="localGroup" scoped="" ref="0x2b7224c25ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b7224c20550" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b7224c20550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7224c208c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b7223b82c78" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b7223b82c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b7223b9f020"/>
        <function-ref name="changed" scoped="" ref="0x2b7223b9f1a8"/>
        <function-ref name="amGroup" scoped="" ref="0x2b7223b9f330"/>
        <function-ref name="setAddress" scoped="" ref="0x2b7223b9f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b7223bbda48" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b7223bbda48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223bbdd98"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223bd0020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223bd01a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b7223bd03f0" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b7223bd03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b7223bd0740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b7223bd08c8"/>
        <function-ref name="request" scoped="" ref="0x2b7223bd0a50"/>
        <function-ref name="granted" scoped="" ref="0x2b7223bd0bd8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b7223bd0d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b7223bbd100" loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b7223bbd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223bbd450"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223bbd5d8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223bbd760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b7223c18020" loc="86:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b7223c18020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b7223c18390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b7223c18518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b7223c39020" loc="89:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b7223c39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b7223c39390"/>
        <function-ref name="configure" scoped="" ref="0x2b7223c39518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b7223c19200" loc="85:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b7223c19200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b7223c19570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b7223c196f8"/>
        <function-ref name="request" scoped="" ref="0x2b7223c19880"/>
        <function-ref name="granted" scoped="" ref="0x2b7223c19a08"/>
        <function-ref name="isOwner" scoped="" ref="0x2b7223c19b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b7223c18760" loc="87:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b7223c18760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b7223c18ab0"/>
        <function-ref name="userId" scoped="" ref="0x2b7223c18c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7224c96438" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7224c96438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7224c96788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b7224c96a10" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b7224c96a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b7224c96d60"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b7224c95020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b7224c951a8"/>
        <function-ref name="dequeue" scoped="" ref="0x2b7224c95330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b7224c92698" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b7224c92698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b7224c92a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b7224c92b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b7224c916c0" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b7224c916c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b7224c91a30"/>
        <function-ref name="configure" scoped="" ref="0x2b7224c91bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b7224c91e40" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b7224c91e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b7224c901c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b7224c90348"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b7224c904d0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b7224c90658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b7224c93918" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b7224c93918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b7224c93c88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b7224c93e10"/>
        <function-ref name="request" scoped="" ref="0x2b7224c92020"/>
        <function-ref name="granted" scoped="" ref="0x2b7224c921a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b7224c92330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b7224c92dd8" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b7224c92dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b7224c91170"/>
        <function-ref name="userId" scoped="" ref="0x2b7224c912f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b7224c90920" loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b7224c90920"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7224c90c70"/>
        <function-ref name="runTask" scoped="" ref="0x2b7224c90df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b7223c4cba0" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b7223c4cba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223c6f020"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223c6f1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223c6f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b7223c6f5b8" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b7223c6f5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223c6f908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b7223c50840" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b7223c50840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b7223c50b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b7223c36980" loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b7223c36980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7223c36cd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7223c36e58"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7223c51020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7223c511a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7223c51330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2b7223c4dd98" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b7223c4dd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7223c4c170"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7223c4c2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7223c4c480"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7223c4c608"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7223c4c790"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7223c4c918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b7223c50e38" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b7223c50e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b7223c4f1c0"/>
        <function-ref name="getDSN" scoped="" ref="0x2b7223c4f348"/>
        <function-ref name="setFCF" scoped="" ref="0x2b7223c4f4d0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b7223c4f658"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b7223c4f7e0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b7223c4f968"/>
        <function-ref name="setDSN" scoped="" ref="0x2b7223c4faf0"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b7223c4fc78"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b7223c4fe00"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b7223c4e020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b7223c4e1a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b7223c4e330"/>
        <function-ref name="localAddr" scoped="" ref="0x2b7223c4e4b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b7223c4e740"/>
        <function-ref name="localPan" scoped="" ref="0x2b7223c4e8c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b7223c4ea50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b7223c4ebd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b7223c4ed60"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b7223c4d020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b7223c4d1a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b7223c4d330"/>
        <function-ref name="getFCF" scoped="" ref="0x2b7223c4d4b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b7223c4d640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b7223c4d7c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b7223c4d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b7223c51578" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b7223c51578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223c518c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7223c51a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7223c51bd8"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223c51d60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223c50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b7223c502a8" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b7223c502a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223c505f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b7223ca0490" loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b7223ca0490"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223ca07e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223ca0968"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223ca0af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b7223ca0d78" loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b7223ca0d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223c9f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b7223ca4880" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b7223ca4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7223ca4bd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7223ca4d58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7223ca2020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7223ca21a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7223ca2330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7223ca24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x2b7223ca1060" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x2b7223ca1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223ca13b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b7223c9f378" loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b7223c9f378"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7223c9f6c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7223c9f850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7223c9f9d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7223c9fb60"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7223c9fce8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7223c9fe70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x2b7223ca2740" loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x2b7223ca2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223ca2a90"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223ca2c18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223ca2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b7223c68838" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b7223c68838"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223c68b88"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223c68d10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223ca4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b7223ca42a8" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b7223ca42a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223ca45f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x2b7223ca1638" loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x2b7223ca1638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7223ca1988"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7223ca1b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7223ca1c98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7223ca1e20"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7223ca0020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7223ca01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b7223d19900" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b7223d19900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b7223d19c50"/>
        <function-ref name="address" scoped="" ref="0x2b7223d19dd8"/>
        <function-ref name="destination" scoped="" ref="0x2b7223d3e020"/>
        <function-ref name="setSource" scoped="" ref="0x2b7223d3e1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b7223d3e330"/>
        <function-ref name="pan" scoped="" ref="0x2b7223d3e4b8"/>
        <function-ref name="setPan" scoped="" ref="0x2b7223d3e640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b7223d3e7c8"/>
        <function-ref name="localPan" scoped="" ref="0x2b7223d3e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b7223d3eb98" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b7223d3eb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7223d3d020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7223d3d1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7223d3d330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7223d3d4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7223d3d640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7223d3d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2b7223d1c980" loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b7223d1c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b7223d1ccd0"/>
        <function-ref name="getDSN" scoped="" ref="0x2b7223d1ce58"/>
        <function-ref name="setFCF" scoped="" ref="0x2b7223d1b020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b7223d1b1a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b7223d1b330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b7223d1b4b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2b7223d1b640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b7223d1b7c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b7223d1b950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b7223d1bad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b7223d1bc60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b7223d1bde8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b7223d1a020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b7223d1a2a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b7223d1a430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b7223d1a5b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b7223d1a740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b7223d1a8c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b7223d1aa50"/>
        <function-ref name="isForMe" scoped="" ref="0x2b7223d1abd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b7223d1ad60"/>
        <function-ref name="getFCF" scoped="" ref="0x2b7223d19020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b7223d191a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b7223d19330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b7223d194b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b7223d3dab0" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b7223d3dab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7223d3de00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7223d3c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7223d3c1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7223d3c330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7223d3c4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7223d3c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b7224cf5d98" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b7224cf5d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b7224cf4170"/>
        <function-ref name="address" scoped="" ref="0x2b7224cf42f8"/>
        <function-ref name="destination" scoped="" ref="0x2b7224cf4480"/>
        <function-ref name="setSource" scoped="" ref="0x2b7224cf4608"/>
        <function-ref name="setDestination" scoped="" ref="0x2b7224cf4790"/>
        <function-ref name="pan" scoped="" ref="0x2b7224cf4918"/>
        <function-ref name="setPan" scoped="" ref="0x2b7224cf4aa0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b7224cf4c28"/>
        <function-ref name="localPan" scoped="" ref="0x2b7224cf4db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b7224cf3020" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b7224cf3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7224cf3370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7224cf34f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7224cf3680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7224cf3808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7224cf3990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7224cf3b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2b7224cfbd50" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b7224cfbd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b7224cf70d8"/>
        <function-ref name="getDSN" scoped="" ref="0x2b7224cf7260"/>
        <function-ref name="setFCF" scoped="" ref="0x2b7224cf73e8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b7224cf7570"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b7224cf76f8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b7224cf7880"/>
        <function-ref name="setDSN" scoped="" ref="0x2b7224cf7a08"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b7224cf7b90"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b7224cf7d18"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b7224cf6020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b7224cf61a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b7224cf6330"/>
        <function-ref name="localAddr" scoped="" ref="0x2b7224cf64b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b7224cf6740"/>
        <function-ref name="localPan" scoped="" ref="0x2b7224cf68c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b7224cf6a50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b7224cf6bd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b7224cf6d60"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b7224cf5020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b7224cf51a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b7224cf5330"/>
        <function-ref name="getFCF" scoped="" ref="0x2b7224cf54b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b7224cf5640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b7224cf57c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b7224cf5950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b7224cf3dc0" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b7224cf3dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b7224cf2170"/>
        <function-ref name="changed" scoped="" ref="0x2b7224cf22f8"/>
        <function-ref name="amGroup" scoped="" ref="0x2b7224cf2480"/>
        <function-ref name="setAddress" scoped="" ref="0x2b7224cf2608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b7224cf2890" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b7224cf2890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7224cf2be0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7224cf2d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7224cf1020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7224cf11a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7224cf1330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7224cf14b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b7223d9d510" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b7223d9d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223d9d860"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223d9d9e8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223d9db70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b7223d9ddf8" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b7223d9ddf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223d9c170"/>
        <function-ref name="header" scoped="" ref="0x2b7223d9c2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b7223d9e470" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b7223d9e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223d9e7c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223d9e948"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223d9ead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b7223d9c580" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b7223d9c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b7223d9c8d0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b7223d9ca58"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b7223d9cbe0"/>
        <function-ref name="getSender" scoped="" ref="0x2b7223d9cd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b7223d9ed18" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b7223d9ed18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223d9d0a0"/>
        <function-ref name="header" scoped="" ref="0x2b7223d9d228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b7224d72458" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b7224d72458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7224d727a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b7224d72930"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7224d72ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b7224d72d40" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b7224d72d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7224d710d8"/>
        <function-ref name="header" scoped="" ref="0x2b7224d71260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x2b7224d70bd8" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b7224d70bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7224d6e020"/>
        <function-ref name="clearAll" scoped="" ref="0x2b7224d6e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b7224d6e330"/>
        <function-ref name="set" scoped="" ref="0x2b7224d6e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b7224d77da0" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b7224d77da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7224d73170"/>
        <function-ref name="cancel" scoped="" ref="0x2b7224d732f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7224d73480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x2b7224d70020" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b7224d70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b7224d70370"/>
        <function-ref name="insertNode" scoped="" ref="0x2b7224d704f8"/>
        <function-ref name="getNode" scoped="" ref="0x2b7224d70680"/>
        <function-ref name="evicted" scoped="" ref="0x2b7224d70808"/>
        <function-ref name="getIndex" scoped="" ref="0x2b7224d70990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b7224d736c8" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b7224d736c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7224d73a18"/>
        <function-ref name="header" scoped="" ref="0x2b7224d73ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7224d73de8" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7224d73de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7224d72170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x2b7224d714a8" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2b7224d714a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b7224d717f8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b7224d71980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b7224d71b08"/>
        <function-ref name="getSender" scoped="" ref="0x2b7224d71c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2b7223d59d70" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b7223d59d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b7223d560f0"/>
        <function-ref name="insertNode" scoped="" ref="0x2b7223d56278"/>
        <function-ref name="getNode" scoped="" ref="0x2b7223d56400"/>
        <function-ref name="evicted" scoped="" ref="0x2b7223d56588"/>
        <function-ref name="getIndex" scoped="" ref="0x2b7223d56710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2b7223d7ab18" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b7223d7ab18"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7223d7ae68"/>
        <function-ref name="clearAll" scoped="" ref="0x2b7223d79020"/>
        <function-ref name="get" scoped="" ref="0x2b7223d791a8"/>
        <function-ref name="set" scoped="" ref="0x2b7223d79330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2b7223d53850" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b7223d53850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b7223d53ba0"/>
        <function-ref name="insertNode" scoped="" ref="0x2b7223d53d28"/>
        <function-ref name="getNode" scoped="" ref="0x2b7223d7a020"/>
        <function-ref name="evicted" scoped="" ref="0x2b7223d7a1a8"/>
        <function-ref name="getIndex" scoped="" ref="0x2b7223d7a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7223d53238" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7223d53238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7223d53588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2b7224d6c140" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b7224d6c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7224d6c490"/>
        <function-ref name="clearAll" scoped="" ref="0x2b7224d6c618"/>
        <function-ref name="get" scoped="" ref="0x2b7224d6c7a0"/>
        <function-ref name="set" scoped="" ref="0x2b7224d6c928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b7223db5c38" loc="85:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b7223db5c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223db4020"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223db41a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223db4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b7223db45b8" loc="86:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b7223db45b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223db4908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x2b7223db0100" loc="93:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2b7223db0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b7223db0450"/>
        <function-ref name="noAck" scoped="" ref="0x2b7223db05d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b7223db0760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b7223db72e8" loc="77:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b7223db72e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223db7638"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223db77c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223db7948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b7223db6e20" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b7223db6e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7223db51a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7223db5330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7223db54b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7223db5640"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7223db57c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7223db5950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b7223db4b90" loc="87:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b7223db4b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7223db2020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7223db21a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7223db2330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7223db24b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7223db2640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7223db27c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x2b7223db1470" loc="92:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2b7223db1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b7223db17c0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b7223db1948"/>
        <function-ref name="getRetries" scoped="" ref="0x2b7223db1ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b7223db1c58"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b7223db1de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b7223db7bd0" loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b7223db7bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223db6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b7223db2a10" loc="88:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b7223db2a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b7223db2d60"/>
        <function-ref name="noAck" scoped="" ref="0x2b7223db1020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b7223db11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b7223db6268" loc="79:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b7223db6268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b7223db65b8"/>
        <function-ref name="setRetries" scoped="" ref="0x2b7223db6740"/>
        <function-ref name="getRetries" scoped="" ref="0x2b7223db68c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b7223db6a50"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b7223db6bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b7223dab988" loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b7223dab988"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b7223dabcd8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b7223dabe60"/>
        <function-ref name="start" scoped="" ref="0x2b7223dc2020"/>
        <function-ref name="stop" scoped="" ref="0x2b7223dc21a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b7223dbe5c8" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b7223dbe5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223dbe918"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223dbeaa0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223dbec28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b7223dbd020" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b7223dbd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223dbd370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b7223dc2430" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b7223dc2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223dc2780"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223dc2908"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223dc2a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b7223dc02e8" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b7223dc02e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7223dc0638"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7223dc07c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7223dc0948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7223dc0ad0"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7223dc0c58"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7223dc0de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b7223dbf060" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b7223dbf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b7223dbf3b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b7223dbf538"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b7223dbf6c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b7223dbf848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b7223dbfb30" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b7223dbfb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b7223dbfe80"/>
        <function-ref name="stopDone" scoped="" ref="0x2b7223dbe030"/>
        <function-ref name="start" scoped="" ref="0x2b7223dbe1b8"/>
        <function-ref name="stop" scoped="" ref="0x2b7223dbe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b7223dc2d18" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b7223dc2d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223dc00a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b7223dbd5f8" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b7223dbd5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7223dbd948"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7223dbdad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7223dbdc58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7223dbdde0"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7223dbc020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7223dbc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b7224d49458" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b7224d49458"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b7224d497a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b7224d49930"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b7224d49ab8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b7224d49c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b7223e24708" loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b7223e24708"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b7223e24a58"/>
        <function-ref name="stopDone" scoped="" ref="0x2b7223e24be0"/>
        <function-ref name="start" scoped="" ref="0x2b7223e24d68"/>
        <function-ref name="stop" scoped="" ref="0x2b7223e23020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2b7223e22b70" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b7223e22b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b7223e21020"/>
        <function-ref name="turnOn" scoped="" ref="0x2b7223e211a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b7223e21330"/>
        <function-ref name="done" scoped="" ref="0x2b7223e214b8"/>
        <function-ref name="standby" scoped="" ref="0x2b7223e21640"/>
        <function-ref name="getChannel" scoped="" ref="0x2b7223e217c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b7223e232a8" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b7223e232a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223e235f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223e23780"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223e23908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b7223e4c3f0" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b7223e4c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223e4c740"/>
        <function-ref name="header" scoped="" ref="0x2b7223e4c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b7223e23b90" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b7223e23b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223e22020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b7223e21a10" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b7223e21a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223e21d60"/>
        <function-ref name="ready" scoped="" ref="0x2b7223e4c020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223e4c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b7223e22268" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b7223e22268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b7223e225b8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b7223e22740"/>
        <function-ref name="getChannel" scoped="" ref="0x2b7223e228c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b7224daa870" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b7224daa870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b7224daabc0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b7224daad48"/>
        <function-ref name="start" scoped="" ref="0x2b7224da9020"/>
        <function-ref name="stop" scoped="" ref="0x2b7224da91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b7224da9430" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b7224da9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7224da9780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2b7224da6450" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b7224da6450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b7224da67a0"/>
        <function-ref name="turnOn" scoped="" ref="0x2b7224da6928"/>
        <function-ref name="setChannel" scoped="" ref="0x2b7224da6ab0"/>
        <function-ref name="done" scoped="" ref="0x2b7224da6c38"/>
        <function-ref name="standby" scoped="" ref="0x2b7224da6dc0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b7224da5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b7224da9a08" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b7224da9a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7224da9d58"/>
        <function-ref name="cancel" scoped="" ref="0x2b7224da7020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7224da71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x2b7224da34f0" loc="189:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x2b7224da34f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7224da3840"/>
        <function-ref name="runTask" scoped="" ref="0x2b7224da39c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b7224da4578" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b7224da4578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7224da48c8"/>
        <function-ref name="header" scoped="" ref="0x2b7224da4a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x2b7224da3c90" loc="144:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x2b7224da3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7224da2020"/>
        <function-ref name="runTask" scoped="" ref="0x2b7224da21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b7224da7430" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b7224da7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7224da7780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x2b7224da4d18" loc="322:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x2b7224da4d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7224da30a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b7224da3228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b7224da5c98" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b7224da5c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7224da4020"/>
        <function-ref name="ready" scoped="" ref="0x2b7224da41a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7224da4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b7224da79c8" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b7224da79c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b7224da7d18"/>
        <function-ref name="setChannel" scoped="" ref="0x2b7224da6020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b7224da61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b7224da5268" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b7224da5268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b7224da55b8"/>
        <function-ref name="suspend" scoped="" ref="0x2b7224da5740"/>
        <function-ref name="resume" scoped="" ref="0x2b7224da58c8"/>
        <function-ref name="run" scoped="" ref="0x2b7224da5a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b7223e7c7e0" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b7223e7c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223e7cb30"/>
        <function-ref name="ready" scoped="" ref="0x2b7223e7ccb8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223e7ce40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b7223e7b120" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b7223e7b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223e7b470"/>
        <function-ref name="header" scoped="" ref="0x2b7223e7b5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b7223e7b840" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b7223e7b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b7223e7bb90"/>
        <function-ref name="wait" scoped="" ref="0x2b7223e7bd18"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223e7a020"/>
        <function-ref name="isFree" scoped="" ref="0x2b7223e7a1a8"/>
        <function-ref name="getNow" scoped="" ref="0x2b7223e7a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b7223e7a5b8" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b7223e7a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b7223e7a908"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b7223e7aa90"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b7223e7ac18"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b7223e7ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b7223e7c020" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b7223e7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223e7c370"/>
        <function-ref name="header" scoped="" ref="0x2b7223e7c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b7223e7d640" loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b7223e7d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223e7d990"/>
        <function-ref name="ready" scoped="" ref="0x2b7223e7db18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223e7dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b7224dd5d38" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b7224dd5d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7224dd30d8"/>
        <function-ref name="ready" scoped="" ref="0x2b7224dd3260"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7224dd33e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b7224dd3670" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b7224dd3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7224dd39c0"/>
        <function-ref name="header" scoped="" ref="0x2b7224dd3b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b7224dd3d90" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b7224dd3d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b7224dd2170"/>
        <function-ref name="wait" scoped="" ref="0x2b7224dd22f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b7224dd2480"/>
        <function-ref name="isFree" scoped="" ref="0x2b7224dd2608"/>
        <function-ref name="getNow" scoped="" ref="0x2b7224dd2790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b7224dd29d8" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b7224dd29d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b7224dd2d28"/>
        <function-ref name="rand32" scoped="" ref="0x2b7224dd1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b7224dd12a8" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b7224dd12a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b7224dd15f8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b7224dd1780"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b7224dd1908"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b7224dd1a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b7224dd5578" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b7224dd5578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7224dd58c8"/>
        <function-ref name="header" scoped="" ref="0x2b7224dd5a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b7224dd7b58" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b7224dd7b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7224dd5020"/>
        <function-ref name="ready" scoped="" ref="0x2b7224dd51a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7224dd5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x2b7224dd1d58" loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x2b7224dd1d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7224dd00d8"/>
        <function-ref name="runTask" scoped="" ref="0x2b7224dd0260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b7223e65b98" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b7223e65b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b7223e64020"/>
        <function-ref name="rand32" scoped="" ref="0x2b7223e641a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b7223e63b48" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b7223e63b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7223e656f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7223e69e28" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7223e69e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7223e661a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b7223e8ba08" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b7223e8ba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b7223e8bd58"/>
        <function-ref name="rand32" scoped="" ref="0x2b7223e89020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b7223e8c9f0" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b7223e8c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7223e8b560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7223e8c198" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7223e8c198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7223e8c4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b7223ed27b8" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b7223ed27b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223ed2b08"/>
        <function-ref name="ready" scoped="" ref="0x2b7223ed2c90"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223ed2e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b7223ed0120" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b7223ed0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223ed0470"/>
        <function-ref name="header" scoped="" ref="0x2b7223ed05f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b7223ed0840" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b7223ed0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b7223ed0b90"/>
        <function-ref name="wait" scoped="" ref="0x2b7223ed0d18"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223ecf020"/>
        <function-ref name="isFree" scoped="" ref="0x2b7223ecf1a8"/>
        <function-ref name="getNow" scoped="" ref="0x2b7223ecf330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x2b7223ece740" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x2b7223ece740"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7223ecea90"/>
        <function-ref name="get" scoped="" ref="0x2b7223ecec18"/>
        <function-ref name="setValue" scoped="" ref="0x2b7223eceda0"/>
        <function-ref name="set" scoped="" ref="0x2b7223ecd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b7223ecf5b8" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b7223ecf5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2b7223ecf908"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2b7223ecfa90"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b7223ecfc18"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2b7223ecfda0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2b7223ece020"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2b7223ece1a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b7223ece330"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b7223ece4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b7223ea0718" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b7223ea0718"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223ea0a68"/>
        <function-ref name="header" scoped="" ref="0x2b7223ea0bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b7223ea1e38" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b7223ea1e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223ea01c0"/>
        <function-ref name="ready" scoped="" ref="0x2b7223ea0348"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223ea04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b7223ea0e38" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b7223ea0e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b7223ed21c0"/>
        <function-ref name="noAck" scoped="" ref="0x2b7223ed2348"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b7223ed24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b7223ee4338" loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b7223ee4338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b7223ee4688"/>
        <function-ref name="stopDone" scoped="" ref="0x2b7223ee4810"/>
        <function-ref name="start" scoped="" ref="0x2b7223ee4998"/>
        <function-ref name="stop" scoped="" ref="0x2b7223ee4b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b7223ee0b10" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b7223ee0b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b7223ee0e60"/>
        <function-ref name="request" scoped="" ref="0x2b7223edf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b7223edb020" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b7223edb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223edb370"/>
        <function-ref name="ready" scoped="" ref="0x2b7223edb4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223edb680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b7223edb908" loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b7223edb908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223edbc58"/>
        <function-ref name="header" scoped="" ref="0x2b7223edbde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b7223ee3be0" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b7223ee3be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b7223ee1020"/>
        <function-ref name="turnOn" scoped="" ref="0x2b7223ee11a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b7223ee1330"/>
        <function-ref name="done" scoped="" ref="0x2b7223ee14b8"/>
        <function-ref name="standby" scoped="" ref="0x2b7223ee1640"/>
        <function-ref name="getChannel" scoped="" ref="0x2b7223ee17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b7223edf268" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b7223edf268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7223edf5b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7223edf740"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7223edf8c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7223edfa50"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7223edfbd8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7223edfd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2b7223edc020" loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2b7223edc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b7223edc470"/>
        <function-ref name="turnOn" scoped="" ref="0x2b7223edc5f8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b7223edc780"/>
        <function-ref name="done" scoped="" ref="0x2b7223edc908"/>
        <function-ref name="standby" scoped="" ref="0x2b7223edca90"/>
        <function-ref name="getChannel" scoped="" ref="0x2b7223edcc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2b7223ede020" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b7223ede020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b7223ede370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b7223ee03f0" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b7223ee03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223ee0740"/>
        <function-ref name="header" scoped="" ref="0x2b7223ee08c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2b7223edda08" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2b7223edda08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223eddd58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b7223ede658" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b7223ede658"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b7223ede9a8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b7223edeb30"/>
        <function-ref name="start" scoped="" ref="0x2b7223edecb8"/>
        <function-ref name="stop" scoped="" ref="0x2b7223edee40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b7223ed9800" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b7223ed9800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7223ed9b50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7223ed9cd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7223ed9e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7223ed8020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7223ed81a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7223ed8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b7223ee3648" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b7223ee3648"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7223ee3998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b7223ed85b8" loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b7223ed85b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b7223ed8908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2b7223edd120" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2b7223edd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223edd470"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223edd5f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223edd780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b7223ee1a10" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b7223ee1a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223ee1d60"/>
        <function-ref name="ready" scoped="" ref="0x2b7223ee0020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223ee01a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2b7223ed90a0" loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2b7223ed90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b7223ed93f0"/>
        <function-ref name="request" scoped="" ref="0x2b7223ed9578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b7223ee4d68" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b7223ee4d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7223ee30f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b7223ee3278"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7223ee3400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2b722410d8c8" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2b722410d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b722410dc18"/>
        <function-ref name="get" scoped="" ref="0x2b722410dda0"/>
        <function-ref name="setValue" scoped="" ref="0x2b722410b020"/>
        <function-ref name="set" scoped="" ref="0x2b722410b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b72241109f8" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b72241109f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7224110d48"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b722410f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b722410f1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b722410f330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b722410f4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b722410f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b722410e9f0" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b722410e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b722410ed40"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b722410d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b722410d1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b722410d330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b722410d4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b722410d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b72240dd020" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b72240dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b72238f6140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b7224111478"/>
        <function-ref name="clear" scoped="" ref="0x2b7224111b58"/>
        <function-ref name="isValid" scoped="" ref="0x2b72240ddd70"/>
        <function-ref name="set" scoped="" ref="0x2b7224110278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b722410fa30" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b722410fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b72238f6140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b722410e5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b72240e0270" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b72240e0270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b72240df700"/>
        <function-ref name="clear" scoped="" ref="0x2b72240dfde0"/>
        <function-ref name="isValid" scoped="" ref="0x2b72240df020"/>
        <function-ref name="set" scoped="" ref="0x2b72240de4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2b7224dece60" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2b7224dece60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7224deb1e8"/>
        <function-ref name="get" scoped="" ref="0x2b7224deb370"/>
        <function-ref name="setValue" scoped="" ref="0x2b7224deb4f8"/>
        <function-ref name="set" scoped="" ref="0x2b7224deb680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b7224dec080" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b7224dec080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7224dec3d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7224dec558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7224dec6e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7224dec868"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7224dec9f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7224decb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b7224de9ac0" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b7224de9ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7224de9e10"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7224de8020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7224de81a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7224de8330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7224de84b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7224de8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b7224df0660" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b7224df0660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b72238f6140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b7224defad0"/>
        <function-ref name="clear" scoped="" ref="0x2b7224dee1f0"/>
        <function-ref name="isValid" scoped="" ref="0x2b7224def3f0"/>
        <function-ref name="set" scoped="" ref="0x2b7224dee8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b7224deba10" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b7224deba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b72238f6140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7224dea5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b7224deaaf8" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b7224deaaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7224de96a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b7224df4958" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b7224df4958"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b7224df3e10"/>
        <function-ref name="clear" scoped="" ref="0x2b7224df1558"/>
        <function-ref name="isValid" scoped="" ref="0x2b7224df3730"/>
        <function-ref name="set" scoped="" ref="0x2b7224df1c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b7223f40a40" loc="20:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b7223f40a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7223f3d658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b7223f5ea98" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b7223f5ea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7223f5cd60"/>
        <function-ref name="fired" scoped="" ref="0x2b7223f5d470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b7223f5c1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7223f5dd10"/>
        <function-ref name="getdt" scoped="" ref="0x2b7223f5b648"/>
        <function-ref name="gett0" scoped="" ref="0x2b7223f5b1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7223f5d8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b7223f39620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b7223f5c790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b7223f39ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b7223f5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b7223f5bc08" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b7223f5bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7223f59820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7223f3c4e0" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7223f3c4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7223f3c830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b7223f4f020" loc="29:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b7223f4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7223f4fd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7223f4e6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7223f4e230"/>
        <function-ref name="overflow" scoped="" ref="0x2b7223f4eb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7223f54310" loc="27:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7223f54310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7223f54660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b7223f54c88" loc="28:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b7223f54c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7223f50410"/>
        <function-ref name="fired" scoped="" ref="0x2b7223f514a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b7223f51db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7223f51930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7223f50898"/>
        <function-ref name="start" scoped="" ref="0x2b7223f53a28"/>
        <function-ref name="stop" scoped="" ref="0x2b7223f51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b72240468f0" loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b72240468f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7224042020"/>
        <function-ref name="fired" scoped="" ref="0x2b7224043020"/>
        <function-ref name="startAt" scoped="" ref="0x2b7224043930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b72240434a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b72240424a8"/>
        <function-ref name="start" scoped="" ref="0x2b7224044698"/>
        <function-ref name="stop" scoped="" ref="0x2b7224044b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7224046148" loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7224046148"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b72235d6388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b72235d6388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7224046498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b7224042a90" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7224042a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7224041828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b722403f190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7224041cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b722403f618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b7224e27e70" loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b7224e27e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b7224e261e8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b7224e26370"/>
        <function-ref name="getControlA" scoped="" ref="0x2b7224e264f8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b7224e26680"/>
        <function-ref name="setControlB" scoped="" ref="0x2b7224e26808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b7224e26990"/>
        <function-ref name="getControlB" scoped="" ref="0x2b7224e26b18"/>
        <function-ref name="setControlA" scoped="" ref="0x2b7224e26ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b7224e32b40" loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b7224e32b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7224e2e238"/>
        <function-ref name="fired" scoped="" ref="0x2b7224e302b0"/>
        <function-ref name="startAt" scoped="" ref="0x2b7224e30bc0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7224e30738"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7224e2e6c0"/>
        <function-ref name="start" scoped="" ref="0x2b7224e318f8"/>
        <function-ref name="stop" scoped="" ref="0x2b7224e31dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7224e32398" loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7224e32398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7224e326e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b7224e2eca8" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7224e2eca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7224e2da28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7224e2c4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7224e2c020"/>
        <function-ref name="overflow" scoped="" ref="0x2b7224e2c930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b7224e21200" loc="68:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b7224e21200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b7224e21550"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b7224e216d8"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b7224e21860"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b7224e219e8"/>
        <function-ref name="countBusy" scoped="" ref="0x2b7224e21b70"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b7224e21cf8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b7224e21e80"/>
        <function-ref name="setAssr" scoped="" ref="0x2b7224e20030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b7224e25060" loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b7224e25060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b7224e22930"/>
        <function-ref name="fired" scoped="" ref="0x2b7224e23598"/>
        <function-ref name="get" scoped="" ref="0x2b7224e25be0"/>
        <function-ref name="reset" scoped="" ref="0x2b7224e23a20"/>
        <function-ref name="isOn" scoped="" ref="0x2b7224e22db8"/>
        <function-ref name="set" scoped="" ref="0x2b7224e230c0"/>
        <function-ref name="start" scoped="" ref="0x2b7224e22020"/>
        <function-ref name="stop" scoped="" ref="0x2b7224e224a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b7224e2b020" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7224e2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b7224e270f8"/>
        <function-ref name="test" scoped="" ref="0x2b7224e287a8"/>
        <function-ref name="get" scoped="" ref="0x2b7224e2bba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b7224e27580"/>
        <function-ref name="getScale" scoped="" ref="0x2b7224e27a58"/>
        <function-ref name="reset" scoped="" ref="0x2b7224e299e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b7224e29560"/>
        <function-ref name="isOn" scoped="" ref="0x2b7224e28c30"/>
        <function-ref name="set" scoped="" ref="0x2b7224e29088"/>
        <function-ref name="start" scoped="" ref="0x2b7224e29e70"/>
        <function-ref name="stop" scoped="" ref="0x2b7224e28320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b7223fe9a98" loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b7223fe9a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b7223fe9de8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b7223fe8020"/>
        <function-ref name="getControlA" scoped="" ref="0x2b7223fe81a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b7223fe8330"/>
        <function-ref name="setControlB" scoped="" ref="0x2b7223fe84b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b7223fe8640"/>
        <function-ref name="getControlB" scoped="" ref="0x2b7223fe87c8"/>
        <function-ref name="setControlA" scoped="" ref="0x2b7223fe8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b7223fe3228" loc="84:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b7223fe3228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b7223fe3578"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b7223fe3700"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b7223fe3888"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b7223fe3a10"/>
        <function-ref name="countBusy" scoped="" ref="0x2b7223fe3b98"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b7223fe3d20"/>
        <function-ref name="getAssr" scoped="" ref="0x2b7223fe2020"/>
        <function-ref name="setAssr" scoped="" ref="0x2b7223fe21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b7223fe8e18" loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b7223fe8e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b7223fe4798"/>
        <function-ref name="fired" scoped="" ref="0x2b7223fe64f8"/>
        <function-ref name="get" scoped="" ref="0x2b7223fe7a18"/>
        <function-ref name="reset" scoped="" ref="0x2b7223fe6980"/>
        <function-ref name="isOn" scoped="" ref="0x2b7223fe4c20"/>
        <function-ref name="set" scoped="" ref="0x2b7223fe6020"/>
        <function-ref name="start" scoped="" ref="0x2b7223fe6e08"/>
        <function-ref name="stop" scoped="" ref="0x2b7223fe4310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b7223ff0a20" loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7223ff0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b7223feab80"/>
        <function-ref name="test" scoped="" ref="0x2b7223fea270"/>
        <function-ref name="get" scoped="" ref="0x2b7223fed5d8"/>
        <function-ref name="setScale" scoped="" ref="0x2b7223fe9088"/>
        <function-ref name="getScale" scoped="" ref="0x2b7223fe9560"/>
        <function-ref name="reset" scoped="" ref="0x2b7223fec4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b7223fec020"/>
        <function-ref name="isOn" scoped="" ref="0x2b7223fea6f8"/>
        <function-ref name="set" scoped="" ref="0x2b7223feda60"/>
        <function-ref name="start" scoped="" ref="0x2b7223fec930"/>
        <function-ref name="stop" scoped="" ref="0x2b7223fecdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b7223fda5c0" loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b7223fda5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b7223fda910"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b7223fdaa98"/>
        <function-ref name="getControlA" scoped="" ref="0x2b7223fdac20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b7223fdada8"/>
        <function-ref name="setControlB" scoped="" ref="0x2b7223fd9020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b7223fd91a8"/>
        <function-ref name="getControlB" scoped="" ref="0x2b7223fd9330"/>
        <function-ref name="setControlA" scoped="" ref="0x2b7223fd94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b7224007b78" loc="85:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b7224007b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b7224006020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b72240063d0" loc="86:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b72240063d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b7224006720"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b72240068a8"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b7224006a30"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b7224006bb8"/>
        <function-ref name="countBusy" scoped="" ref="0x2b7224006d40"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b7224005020"/>
        <function-ref name="getAssr" scoped="" ref="0x2b72240051a8"/>
        <function-ref name="setAssr" scoped="" ref="0x2b7224005330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b7223fd9980" loc="84:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b7223fd9980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b7224007270"/>
        <function-ref name="fired" scoped="" ref="0x2b7224008020"/>
        <function-ref name="get" scoped="" ref="0x2b722400a560"/>
        <function-ref name="reset" scoped="" ref="0x2b72240084a8"/>
        <function-ref name="isOn" scoped="" ref="0x2b72240076f8"/>
        <function-ref name="set" scoped="" ref="0x2b722400a9e8"/>
        <function-ref name="start" scoped="" ref="0x2b7224008930"/>
        <function-ref name="stop" scoped="" ref="0x2b7224008db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b7223fdf608" loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7223fdf608"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b7223fdb6f8"/>
        <function-ref name="test" scoped="" ref="0x2b7223fdddb8"/>
        <function-ref name="get" scoped="" ref="0x2b7223fde1d0"/>
        <function-ref name="setScale" scoped="" ref="0x2b7223fdbb80"/>
        <function-ref name="getScale" scoped="" ref="0x2b7223fda088"/>
        <function-ref name="reset" scoped="" ref="0x2b7223fdd020"/>
        <function-ref name="overflow" scoped="" ref="0x2b7223fdeb30"/>
        <function-ref name="isOn" scoped="" ref="0x2b7223fdb270"/>
        <function-ref name="set" scoped="" ref="0x2b7223fde658"/>
        <function-ref name="start" scoped="" ref="0x2b7223fdd4a8"/>
        <function-ref name="stop" scoped="" ref="0x2b7223fdd930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b7224078cf0" loc="74:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b7224078cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b72240770a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b7224077228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b722407cc70" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b722407cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7224078410"/>
        <function-ref name="fired" scoped="" ref="0x2b72240794a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b7224079db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7224079930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7224078898"/>
        <function-ref name="start" scoped="" ref="0x2b722407a9f0"/>
        <function-ref name="stop" scoped="" ref="0x2b7224079020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b7224081ab0" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7224081ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b722407dd60"/>
        <function-ref name="fired" scoped="" ref="0x2b722407e470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b722407d1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b722407ed10"/>
        <function-ref name="getdt" scoped="" ref="0x2b722407c648"/>
        <function-ref name="gett0" scoped="" ref="0x2b722407c1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b722407e8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b722407f620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b722407d790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b722407fac0"/>
        <function-ref name="stop" scoped="" ref="0x2b722407e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b72240c9930" loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b72240c9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b72240c9c80"/>
        <function-ref name="runTask" scoped="" ref="0x2b72240c9e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b72240ce858" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b72240ce858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b72240cabc0"/>
        <function-ref name="fired" scoped="" ref="0x2b72240cb1c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b72240ca020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b72240cba60"/>
        <function-ref name="getdt" scoped="" ref="0x2b72240c94d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b72240c9088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b72240cb610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b72240cc3d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b72240ca5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b72240cc878"/>
        <function-ref name="stop" scoped="" ref="0x2b72240ccd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b72240d45e0" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b72240d45e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b72240cf988"/>
        <function-ref name="fired" scoped="" ref="0x2b72240d1020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b72240d1d70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b72240d1900"/>
        <function-ref name="getdt" scoped="" ref="0x2b72240ce2d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b72240cfdf8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b72240d1490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b72240d2198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b72240cf398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b72240d2658"/>
        <function-ref name="stop" scoped="" ref="0x2b72240d2b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b72240c4128" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b72240c4128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b72240c4ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b72240f1330" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b72240f1330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b72240f00c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b72240f09d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b72240f0548"/>
        <function-ref name="overflow" scoped="" ref="0x2b72240f0e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b72240e81c8" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b72240e81c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223665020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7223665378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b72240e55f0"/>
        <function-ref name="fired" scoped="" ref="0x2b72240e7af0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b72240e68c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b72240e6470"/>
        <function-ref name="getdt" scoped="" ref="0x2b72240e3020"/>
        <function-ref name="gett0" scoped="" ref="0x2b72240e5a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b72240e6020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b72240e8d10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b72240e5020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b72240e7200"/>
        <function-ref name="stop" scoped="" ref="0x2b72240e76a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b722411d0e0" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b722411d0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b722411d430"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b722411d5b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b722411d740"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b722411d8c8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b722411da50"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b722411dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b722411c020" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b722411c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b722411c370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b722411c4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b722411c680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b722411c808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b722411c990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b722411cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x2b7224105660" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x2b7224105660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b72241059d0"/>
        <function-ref name="get" scoped="" ref="0x2b7224105b58"/>
        <function-ref name="setValue" scoped="" ref="0x2b7224105ce0"/>
        <function-ref name="set" scoped="" ref="0x2b7224105e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b722411ab78" loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b722411ab78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b7224119020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b72241191a8"/>
        <function-ref name="start" scoped="" ref="0x2b7224119330"/>
        <function-ref name="stop" scoped="" ref="0x2b72241194b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b72241153f0" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b72241153f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b7224115740"/>
        <function-ref name="request" scoped="" ref="0x2b72241158c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b72241488c8" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b72241488c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7224148c18"/>
        <function-ref name="ready" scoped="" ref="0x2b7224148da0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7224147020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b72241472a8" loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b72241472a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b72241475f8"/>
        <function-ref name="header" scoped="" ref="0x2b7224147780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b72241185b8" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b72241185b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b7224118908"/>
        <function-ref name="turnOn" scoped="" ref="0x2b7224118a90"/>
        <function-ref name="setChannel" scoped="" ref="0x2b7224118c18"/>
        <function-ref name="done" scoped="" ref="0x2b7224118da0"/>
        <function-ref name="standby" scoped="" ref="0x2b7224117020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b72241171a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b7224115b10" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b7224115b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7224115e60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7224114020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72241141a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7224114330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b72241144b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7224114640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2b7224112a08" loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2b7224112a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b7224112e58"/>
        <function-ref name="turnOn" scoped="" ref="0x2b7224148020"/>
        <function-ref name="setChannel" scoped="" ref="0x2b72241481a8"/>
        <function-ref name="done" scoped="" ref="0x2b7224148330"/>
        <function-ref name="standby" scoped="" ref="0x2b72241484b8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b7224148640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2b72241148c8" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b72241148c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b7224114c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b7224117c98" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b7224117c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7224115020"/>
        <function-ref name="header" scoped="" ref="0x2b72241151a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2b7224112430" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2b7224112430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7224112780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b7224113020" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b7224113020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b7224113370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b72241134f8"/>
        <function-ref name="start" scoped="" ref="0x2b7224113680"/>
        <function-ref name="stop" scoped="" ref="0x2b7224113808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b72241452a8" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b72241452a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b72241455f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7224145780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7224145908"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7224145a90"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7224145c18"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7224145da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b7224118020" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b7224118020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7224118370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b7224144060" loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b7224144060"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b72241443b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2b7224113a90" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2b7224113a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7224113de0"/>
        <function-ref name="cancel" scoped="" ref="0x2b7224112020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b72241121a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b72241173f0" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b72241173f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7224117740"/>
        <function-ref name="ready" scoped="" ref="0x2b72241178c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7224117a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2b7224147a08" loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2b7224147a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b7224147d58"/>
        <function-ref name="request" scoped="" ref="0x2b7224145020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b7224119700" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b7224119700"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7224119a50"/>
        <function-ref name="cancel" scoped="" ref="0x2b7224119bd8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7224119d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b722413c448" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b722413c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b722413c798"/>
        <function-ref name="request" scoped="" ref="0x2b722413c920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b72241370c8" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b72241370c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b72241366a0"/>
        <function-ref name="get" scoped="" ref="0x2b7224136190"/>
        <function-ref name="isSet" scoped="" ref="0x2b7224137c48"/>
        <function-ref name="set" scoped="" ref="0x2b7224136bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2b722415a020" loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2b722415a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b722415a370"/>
        <function-ref name="get" scoped="" ref="0x2b722415a4f8"/>
        <function-ref name="setValue" scoped="" ref="0x2b722415a680"/>
        <function-ref name="set" scoped="" ref="0x2b722415a808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b722415f730" loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b722415f730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b72238f6140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b722415ec58"/>
        <function-ref name="clear" scoped="" ref="0x2b722415c380"/>
        <function-ref name="isValid" scoped="" ref="0x2b722415e578"/>
        <function-ref name="set" scoped="" ref="0x2b722415ca60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b72241403f8" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b72241403f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b7224140748"/>
        <function-ref name="turnOn" scoped="" ref="0x2b72241408d0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b7224140a58"/>
        <function-ref name="done" scoped="" ref="0x2b7224140be0"/>
        <function-ref name="standby" scoped="" ref="0x2b7224140d68"/>
        <function-ref name="getChannel" scoped="" ref="0x2b722413d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b7224159768" loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b7224159768"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b7224159ab8"/>
        <function-ref name="wait" scoped="" ref="0x2b7224159c40"/>
        <function-ref name="cancel" scoped="" ref="0x2b7224159dc8"/>
        <function-ref name="isFree" scoped="" ref="0x2b7224158020"/>
        <function-ref name="getNow" scoped="" ref="0x2b72241581a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b722413bcd0" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b722413bcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7224139388"/>
        <function-ref name="get" scoped="" ref="0x2b722413ae00"/>
        <function-ref name="isSet" scoped="" ref="0x2b722413a8f0"/>
        <function-ref name="set" scoped="" ref="0x2b7224139898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b722413cbd8" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b722413cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b722413b020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b722413b1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b722413b330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b722413b4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b722413b640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b722413b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b72241605c8" loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b72241605c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7224160a18"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7224160ba0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7224160d28"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b722415f020"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b722415f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b722413dbf0" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b722413dbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b722413c020"/>
        <function-ref name="header" scoped="" ref="0x2b722413c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b72241644b8" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b72241644b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b72238f6140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b72238f6540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7224162b18"/>
        <function-ref name="fired" scoped="" ref="0x2b7224163b90"/>
        <function-ref name="startAt" scoped="" ref="0x2b7224162510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7224162088"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7224160020"/>
        <function-ref name="start" scoped="" ref="0x2b7224163230"/>
        <function-ref name="stop" scoped="" ref="0x2b7224163708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b7224134458" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b7224134458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7224133a40"/>
        <function-ref name="get" scoped="" ref="0x2b7224133530"/>
        <function-ref name="isSet" scoped="" ref="0x2b7224133020"/>
        <function-ref name="set" scoped="" ref="0x2b7224132020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b722412d220" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b722412d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b72238f6140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b722412dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b722413d2c8" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b722413d2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b722413d618"/>
        <function-ref name="ready" scoped="" ref="0x2b722413d7a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b722413d928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b7224132860" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b7224132860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7224130e30"/>
        <function-ref name="get" scoped="" ref="0x2b7224130920"/>
        <function-ref name="isSet" scoped="" ref="0x2b7224130410"/>
        <function-ref name="set" scoped="" ref="0x2b722412f388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2b722415ab78" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b722415ab78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7224159020"/>
        <function-ref name="get" scoped="" ref="0x2b72241591a8"/>
        <function-ref name="setValue" scoped="" ref="0x2b7224159330"/>
        <function-ref name="set" scoped="" ref="0x2b72241594b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2b722415b378" loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b722415b378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b722415b6c8"/>
        <function-ref name="get" scoped="" ref="0x2b722415b850"/>
        <function-ref name="setValue" scoped="" ref="0x2b722415b9d8"/>
        <function-ref name="set" scoped="" ref="0x2b722415bb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b722412f9d0" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b722412f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b722412fd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b722414f2c0" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b722414f2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b722414f610"/>
        <function-ref name="request" scoped="" ref="0x2b722414f798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b7224169c60" loc="74:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b7224169c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7223663788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b722416a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b722414a020" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b722414a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7224149608"/>
        <function-ref name="get" scoped="" ref="0x2b72241490f8"/>
        <function-ref name="isSet" scoped="" ref="0x2b722414aba0"/>
        <function-ref name="set" scoped="" ref="0x2b7224149b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2b7224166988" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2b7224166988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7224166cd8"/>
        <function-ref name="get" scoped="" ref="0x2b7224166e60"/>
        <function-ref name="setValue" scoped="" ref="0x2b7224165020"/>
        <function-ref name="set" scoped="" ref="0x2b72241651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b7224152c70" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b7224152c70"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b72235d66f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b72235d66f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7224151020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b722419c2b0" loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b722419c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b72238f6140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b722419b910"/>
        <function-ref name="clear" scoped="" ref="0x2b7224199020"/>
        <function-ref name="isValid" scoped="" ref="0x2b722419b230"/>
        <function-ref name="set" scoped="" ref="0x2b7224199700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2b7224174e70" loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b7224174e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72241701e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224170370"/>
        <function-ref name="toggle" scoped="" ref="0x2b72241704f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224170680"/>
        <function-ref name="get" scoped="" ref="0x2b7224170808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224170990"/>
        <function-ref name="set" scoped="" ref="0x2b7224170b18"/>
        <function-ref name="clr" scoped="" ref="0x2b7224170ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b7224198ab8" loc="86:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b7224198ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b7224198e08"/>
        <function-ref name="wait" scoped="" ref="0x2b7224197020"/>
        <function-ref name="cancel" scoped="" ref="0x2b72241971a8"/>
        <function-ref name="isFree" scoped="" ref="0x2b7224197330"/>
        <function-ref name="getNow" scoped="" ref="0x2b72241974b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b72241512d0" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b72241512d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b7224151620"/>
        <function-ref name="turnOn" scoped="" ref="0x2b72241517a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b7224151930"/>
        <function-ref name="done" scoped="" ref="0x2b7224151ab8"/>
        <function-ref name="standby" scoped="" ref="0x2b7224151c40"/>
        <function-ref name="getChannel" scoped="" ref="0x2b7224151dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b7224168020" loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b7224168020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b72238f6140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7224168ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b722414eb48" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b722414eb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b722414b190"/>
        <function-ref name="get" scoped="" ref="0x2b722414dc38"/>
        <function-ref name="isSet" scoped="" ref="0x2b722414d728"/>
        <function-ref name="set" scoped="" ref="0x2b722414b6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b722414fa50" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b722414fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b722414fda0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b722414e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b722414e1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b722414e330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b722414e4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b722414e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x2b7224171d00" loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x2b7224171d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72241740a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224174228"/>
        <function-ref name="toggle" scoped="" ref="0x2b72241743b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224174538"/>
        <function-ref name="get" scoped="" ref="0x2b72241746c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224174848"/>
        <function-ref name="set" scoped="" ref="0x2b72241749d0"/>
        <function-ref name="clr" scoped="" ref="0x2b7224174b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b7224167100" loc="77:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b7224167100"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7224167450"/>
        <function-ref name="headerLength" scoped="" ref="0x2b72241675d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7224167760"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b72241678e8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b7224167a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b72241509e8" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b72241509e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7224150d38"/>
        <function-ref name="header" scoped="" ref="0x2b722414f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x2b722422bd98" loc="847:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x2b722422bd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b722422a170"/>
        <function-ref name="runTask" scoped="" ref="0x2b722422a2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b722417f3b0" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b722417f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b722417ea40"/>
        <function-ref name="get" scoped="" ref="0x2b722417e530"/>
        <function-ref name="isSet" scoped="" ref="0x2b722417e020"/>
        <function-ref name="set" scoped="" ref="0x2b722417c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b72241521b8" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b72241521b8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b72235d66f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b72235d66f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7224152508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b72241774f8" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b72241774f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b7224177848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b72241779d0"/>
        <function-ref name="request" scoped="" ref="0x2b7224177b58"/>
        <function-ref name="granted" scoped="" ref="0x2b7224177ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b7224177e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x2b7224178130" loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x2b7224178130"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224178580"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224178708"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224178890"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224178a18"/>
        <function-ref name="get" scoped="" ref="0x2b7224178ba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224178d28"/>
        <function-ref name="set" scoped="" ref="0x2b7224177020"/>
        <function-ref name="clr" scoped="" ref="0x2b72241771a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b722417c860" loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b722417c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b722417be30"/>
        <function-ref name="get" scoped="" ref="0x2b722417b920"/>
        <function-ref name="isSet" scoped="" ref="0x2b722417b410"/>
        <function-ref name="set" scoped="" ref="0x2b722417a388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b72241500c0" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b72241500c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7224150410"/>
        <function-ref name="ready" scoped="" ref="0x2b7224150598"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7224150720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x2b722416b5e8" loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b722416b5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b722416b938"/>
        <function-ref name="disable" scoped="" ref="0x2b722416bac0"/>
        <function-ref name="captured" scoped="" ref="0x2b722416bc48"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b722416bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x2b72241711f0" loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b72241711f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b7224171540"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b72241716c8"/>
        <function-ref name="splitRead" scoped="" ref="0x2b7224171850"/>
        <function-ref name="write" scoped="" ref="0x2b72241719d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2b7224165518" loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b7224165518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7224165868"/>
        <function-ref name="get" scoped="" ref="0x2b72241659f0"/>
        <function-ref name="setValue" scoped="" ref="0x2b7224165b78"/>
        <function-ref name="set" scoped="" ref="0x2b7224165d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2b7224167e10" loc="79:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b7224167e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b72241661a8"/>
        <function-ref name="get" scoped="" ref="0x2b7224166330"/>
        <function-ref name="setValue" scoped="" ref="0x2b72241664b8"/>
        <function-ref name="set" scoped="" ref="0x2b7224166640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b722417a9d0" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b722417a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b722417ad20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b7224198020" loc="85:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b7224198020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b7224198370"/>
        <function-ref name="suspend" scoped="" ref="0x2b72241984f8"/>
        <function-ref name="resume" scoped="" ref="0x2b7224198680"/>
        <function-ref name="run" scoped="" ref="0x2b7224198808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b722425e338" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b722425e338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722425e688"/>
        <function-ref name="isInput" scoped="" ref="0x2b722425e810"/>
        <function-ref name="toggle" scoped="" ref="0x2b722425e998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722425eb20"/>
        <function-ref name="get" scoped="" ref="0x2b722425eca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722425ee30"/>
        <function-ref name="set" scoped="" ref="0x2b722425d020"/>
        <function-ref name="clr" scoped="" ref="0x2b722425d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x2b722425f140" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x2b722425f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722425f490"/>
        <function-ref name="isInput" scoped="" ref="0x2b722425f618"/>
        <function-ref name="toggle" scoped="" ref="0x2b722425f7a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722425f928"/>
        <function-ref name="get" scoped="" ref="0x2b722425fab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722425fc38"/>
        <function-ref name="set" scoped="" ref="0x2b722425fdc0"/>
        <function-ref name="clr" scoped="" ref="0x2b722425e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b722425c2e0" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b722425c2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b72238f6140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b722425a928"/>
        <function-ref name="fired" scoped="" ref="0x2b722425b9e8"/>
        <function-ref name="startAt" scoped="" ref="0x2b722425a320"/>
        <function-ref name="isRunning" scoped="" ref="0x2b722425be70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b722425adb0"/>
        <function-ref name="start" scoped="" ref="0x2b722425b088"/>
        <function-ref name="stop" scoped="" ref="0x2b722425b560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x2b7224261990" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b7224261990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b7224261ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b7224261e68"/>
        <function-ref name="request" scoped="" ref="0x2b7224260020"/>
        <function-ref name="granted" scoped="" ref="0x2b72242601a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b7224260330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x2b7224264728" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x2b7224264728"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224264a78"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224264c00"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224264d88"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224261020"/>
        <function-ref name="get" scoped="" ref="0x2b72242611a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224261330"/>
        <function-ref name="set" scoped="" ref="0x2b72242614b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7224261640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x2b722425d4c0" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b722425d4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b722425d810"/>
        <function-ref name="disable" scoped="" ref="0x2b722425d998"/>
        <function-ref name="captured" scoped="" ref="0x2b722425db20"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b722425dca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b72242605e8" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b72242605e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b7224260938"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b7224260ac0"/>
        <function-ref name="splitRead" scoped="" ref="0x2b7224260c48"/>
        <function-ref name="write" scoped="" ref="0x2b7224260dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b7224258438" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b7224258438"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b72238f6140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7224257020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x2b7224284c18" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x2b7224284c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7224283020"/>
        <function-ref name="isInput" scoped="" ref="0x2b72242831a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7224283330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72242834b8"/>
        <function-ref name="get" scoped="" ref="0x2b7224283640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72242837c8"/>
        <function-ref name="set" scoped="" ref="0x2b7224283950"/>
        <function-ref name="clr" scoped="" ref="0x2b7224283ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x2b7224286540" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b7224286540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b72242846f8"/>
        <function-ref name="test" scoped="" ref="0x2b7224251db8"/>
        <function-ref name="get" scoped="" ref="0x2b72242520f8"/>
        <function-ref name="captured" scoped="" ref="0x2b7224252a58"/>
        <function-ref name="reset" scoped="" ref="0x2b7224251020"/>
        <function-ref name="isOn" scoped="" ref="0x2b7224284270"/>
        <function-ref name="set" scoped="" ref="0x2b7224252580"/>
        <function-ref name="start" scoped="" ref="0x2b72242514a8"/>
        <function-ref name="stop" scoped="" ref="0x2b7224251930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x2b7224283e08" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x2b7224283e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72242821a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7224282330"/>
        <function-ref name="toggle" scoped="" ref="0x2b72242824b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7224282640"/>
        <function-ref name="get" scoped="" ref="0x2b72242827c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7224282950"/>
        <function-ref name="set" scoped="" ref="0x2b7224282ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b7224282c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b7224254870" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b7224254870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7224254bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x2b7224257cf0" loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b7224257cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b72242540a0"/>
        <function-ref name="disable" scoped="" ref="0x2b7224254228"/>
        <function-ref name="captured" scoped="" ref="0x2b72242543b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b7224254538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b72242a31d8" loc="84:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b72242a31d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b72242a3528"/>
        <function-ref name="sendDone" scoped="" ref="0x2b72242a36b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b7224270388" loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b7224270388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b72242706d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7224255ce8" loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7224255ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72242740a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b72242709d0" loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b72242709d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b7224270d20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b7224273020"/>
        <function-ref name="splitRead" scoped="" ref="0x2b72242731a8"/>
        <function-ref name="write" scoped="" ref="0x2b7224273330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b72242a3e80" loc="85:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b72242a3e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b72242721f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b7224272380"/>
        <function-ref name="request" scoped="" ref="0x2b7224272508"/>
        <function-ref name="granted" scoped="" ref="0x2b7224272690"/>
        <function-ref name="isOwner" scoped="" ref="0x2b7224272818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2b72242dcb58" loc="296:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2b72242dcb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b72242db020"/>
        <function-ref name="runTask" scoped="" ref="0x2b72242db1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b722429f140" loc="94:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b722429f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b722429f490"/>
        <function-ref name="sendDone" scoped="" ref="0x2b722429f618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x2b72242bf3c8" loc="99:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x2b72242bf3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b72242bf718"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b72242bf8a0"/>
        <function-ref name="request" scoped="" ref="0x2b72242bfa28"/>
        <function-ref name="granted" scoped="" ref="0x2b72242bfbb0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b72242bfd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b72242a1080" loc="92:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b72242a1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b72242a13d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b722426ea30" loc="91:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b722426ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b722426ed80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2b72242c0150" loc="98:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2b72242c0150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b72242c04a0"/>
        <function-ref name="sleep" scoped="" ref="0x2b722429c950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b72242c07b0"/>
        <function-ref name="dataReady" scoped="" ref="0x2b722429cad8"/>
        <function-ref name="initMaster" scoped="" ref="0x2b72242c0ac0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b72242c0c48"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b72242c0dd0"/>
        <function-ref name="read" scoped="" ref="0x2b722429d020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b722429d1a8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b722429d330"/>
        <function-ref name="setClock" scoped="" ref="0x2b722429d4b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b722429d640"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b722429d7c8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b722429da50"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b722429dbd8"/>
        <function-ref name="write" scoped="" ref="0x2b722429dd60"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b722429c020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b722429c1a8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b722429c330"/>
        <function-ref name="getClock" scoped="" ref="0x2b722429c4b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b722429c640"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b72242c0628"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b72242c0938"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b722429c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b72242a1688" loc="93:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b72242a1688"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b72242a19d8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b72242a1b60"/>
        <function-ref name="splitRead" scoped="" ref="0x2b72242a1ce8"/>
        <function-ref name="write" scoped="" ref="0x2b72242a1e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b722429fda8" loc="95:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b722429fda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b722429e170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b722429e2f8"/>
        <function-ref name="request" scoped="" ref="0x2b722429e480"/>
        <function-ref name="granted" scoped="" ref="0x2b722429e608"/>
        <function-ref name="isOwner" scoped="" ref="0x2b722429e790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b72242be020" loc="100:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b72242be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b72242be370"/>
        <function-ref name="userId" scoped="" ref="0x2b72242be4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b72242be7c8" loc="101:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b72242be7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b72242beb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2b72242ef020" loc="76:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2b72242ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b72242ef370"/>
        <function-ref name="sleep" scoped="" ref="0x2b72242ed7c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b72242ef680"/>
        <function-ref name="dataReady" scoped="" ref="0x2b72242ed950"/>
        <function-ref name="initMaster" scoped="" ref="0x2b72242ef990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b72242efb18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b72242efca0"/>
        <function-ref name="read" scoped="" ref="0x2b72242efe28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b72242ee020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b72242ee1a8"/>
        <function-ref name="setClock" scoped="" ref="0x2b72242ee330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b72242ee4b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b72242ee640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b72242ee8c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b72242eea50"/>
        <function-ref name="write" scoped="" ref="0x2b72242eebd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b72242eed60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b72242ed020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b72242ed1a8"/>
        <function-ref name="getClock" scoped="" ref="0x2b72242ed330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b72242ed4b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b72242ef4f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b72242ef808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b72242ed640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2b722431e190" loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2b722431e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722431e4e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b722431e668"/>
        <function-ref name="toggle" scoped="" ref="0x2b722431e7f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722431e978"/>
        <function-ref name="get" scoped="" ref="0x2b722431eb00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722431ec88"/>
        <function-ref name="set" scoped="" ref="0x2b722431ee10"/>
        <function-ref name="clr" scoped="" ref="0x2b722431d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2b72242e6de0" loc="79:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b72242e6de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72242e5170"/>
        <function-ref name="isInput" scoped="" ref="0x2b72242e52f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72242e5480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72242e5608"/>
        <function-ref name="get" scoped="" ref="0x2b72242e5790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72242e5918"/>
        <function-ref name="set" scoped="" ref="0x2b72242e5aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b72242e5c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2b7224320c70" loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2b7224320c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72242e6020"/>
        <function-ref name="isInput" scoped="" ref="0x2b72242e61a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72242e6330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72242e64b8"/>
        <function-ref name="get" scoped="" ref="0x2b72242e6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72242e67c8"/>
        <function-ref name="set" scoped="" ref="0x2b72242e6950"/>
        <function-ref name="clr" scoped="" ref="0x2b72242e6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b7224320438" loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b7224320438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7224320788"/>
        <function-ref name="stop" scoped="" ref="0x2b7224320910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2b722431d350" loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2b722431d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b722431d6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2b72242ecdd8" loc="74:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2b72242ecdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b72242e9170"/>
        <function-ref name="sleep" scoped="" ref="0x2b72242e7640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b72242e9480"/>
        <function-ref name="dataReady" scoped="" ref="0x2b72242e77c8"/>
        <function-ref name="initMaster" scoped="" ref="0x2b72242e9790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b72242e9918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b72242e9aa0"/>
        <function-ref name="read" scoped="" ref="0x2b72242e9c28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b72242e9db0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b72242e8020"/>
        <function-ref name="setClock" scoped="" ref="0x2b72242e81a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b72242e8330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b72242e84b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b72242e8740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b72242e88c8"/>
        <function-ref name="write" scoped="" ref="0x2b72242e8a50"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b72242e8bd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b72242e8d60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b72242e7020"/>
        <function-ref name="getClock" scoped="" ref="0x2b72242e71a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b72242e7330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b72242e92f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b72242e9608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b72242e74b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2b722431f020" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2b722431f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b722431f370"/>
        <function-ref name="isInput" scoped="" ref="0x2b722431f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b722431f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b722431f808"/>
        <function-ref name="get" scoped="" ref="0x2b722431f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b722431fb18"/>
        <function-ref name="set" scoped="" ref="0x2b722431fca0"/>
        <function-ref name="clr" scoped="" ref="0x2b722431fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b7224354510" loc="86:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b7224354510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b7224354880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b7224354a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b7224353550" loc="89:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b7224353550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b72243538c0"/>
        <function-ref name="configure" scoped="" ref="0x2b7224353a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b7224355748" loc="85:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b7224355748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b7224355ab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b7224355c40"/>
        <function-ref name="request" scoped="" ref="0x2b7224355dc8"/>
        <function-ref name="granted" scoped="" ref="0x2b7224354020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b72243541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b7224354c50" loc="87:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b7224354c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b7224353020"/>
        <function-ref name="userId" scoped="" ref="0x2b72243531a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7224edd5e8" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7224edd5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7224edd938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b7224eddbc0" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b7224eddbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b7224edc020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b7224edc1a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b7224edc330"/>
        <function-ref name="dequeue" scoped="" ref="0x2b7224edc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b7224ed9820" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b7224ed9820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b7224ed9b90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b7224ed9d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b7224ed88c0" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b7224ed88c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b7224ed8c30"/>
        <function-ref name="configure" scoped="" ref="0x2b7224ed8db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b7224ed70a0" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b7224ed70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b7224ed73f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b7224ed7578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b7224ed7700"/>
        <function-ref name="dequeue" scoped="" ref="0x2b7224ed7888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b7224edba28" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b7224edba28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b7224edbd98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b7224ed9020"/>
        <function-ref name="request" scoped="" ref="0x2b7224ed91a8"/>
        <function-ref name="granted" scoped="" ref="0x2b7224ed9330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b7224ed94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b7224ed8020" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b7224ed8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b7224ed8370"/>
        <function-ref name="userId" scoped="" ref="0x2b7224ed84f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b7224ed7b50" loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b7224ed7b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7224ed6020"/>
        <function-ref name="runTask" scoped="" ref="0x2b7224ed61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b722437a5e8" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b722437a5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b722437a938"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b722437aac0"/>
        <function-ref name="getControlA" scoped="" ref="0x2b722437ac48"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b722437add0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b7224343020"/>
        <function-ref name="setControlB" scoped="" ref="0x2b72243431a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b7224343330"/>
        <function-ref name="getControlB" scoped="" ref="0x2b72243434b8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b7224343640"/>
        <function-ref name="setControlA" scoped="" ref="0x2b72243437c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b7224343ca0" loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b7224343ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b7224378e20"/>
        <function-ref name="test" scoped="" ref="0x2b7224378510"/>
        <function-ref name="get" scoped="" ref="0x2b7224342858"/>
        <function-ref name="captured" scoped="" ref="0x2b7224379238"/>
        <function-ref name="reset" scoped="" ref="0x2b7224379710"/>
        <function-ref name="isOn" scoped="" ref="0x2b7224378998"/>
        <function-ref name="set" scoped="" ref="0x2b7224342ce0"/>
        <function-ref name="start" scoped="" ref="0x2b7224379b98"/>
        <function-ref name="stop" scoped="" ref="0x2b7224378088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b7224376a20" loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b7224376a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b7224372270"/>
        <function-ref name="fired" scoped="" ref="0x2b7224374020"/>
        <function-ref name="get" scoped="" ref="0x2b72243755d8"/>
        <function-ref name="reset" scoped="" ref="0x2b72243744a8"/>
        <function-ref name="isOn" scoped="" ref="0x2b72243726f8"/>
        <function-ref name="set" scoped="" ref="0x2b7224375a60"/>
        <function-ref name="start" scoped="" ref="0x2b7224374930"/>
        <function-ref name="stop" scoped="" ref="0x2b7224374db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b722434b6f8" loc="79:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b722434b6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b7224345930"/>
        <function-ref name="test" scoped="" ref="0x2b7224345020"/>
        <function-ref name="get" scoped="" ref="0x2b72243483a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b7224345db8"/>
        <function-ref name="getScale" scoped="" ref="0x2b72243442f0"/>
        <function-ref name="reset" scoped="" ref="0x2b72243471f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b7224348d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b72243454a8"/>
        <function-ref name="set" scoped="" ref="0x2b7224348830"/>
        <function-ref name="start" scoped="" ref="0x2b7224347680"/>
        <function-ref name="stop" scoped="" ref="0x2b7224347b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b722436ac90" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b722436ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b7224369020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b72243691a8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b7224369330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b72243694b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b7224369640"/>
        <function-ref name="setControlB" scoped="" ref="0x2b72243697c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b7224369950"/>
        <function-ref name="getControlB" scoped="" ref="0x2b7224369ad8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b7224369c60"/>
        <function-ref name="setControlA" scoped="" ref="0x2b7224369de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b7224364c48" loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b7224364c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b72243a04a8"/>
        <function-ref name="fired" scoped="" ref="0x2b72243611d0"/>
        <function-ref name="get" scoped="" ref="0x2b7224363820"/>
        <function-ref name="reset" scoped="" ref="0x2b7224361658"/>
        <function-ref name="isOn" scoped="" ref="0x2b72243a0930"/>
        <function-ref name="set" scoped="" ref="0x2b7224363ca8"/>
        <function-ref name="start" scoped="" ref="0x2b7224361ae0"/>
        <function-ref name="stop" scoped="" ref="0x2b72243a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b7224368350" loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b7224368350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b7224364580"/>
        <function-ref name="test" scoped="" ref="0x2b7224365c20"/>
        <function-ref name="get" scoped="" ref="0x2b7224367020"/>
        <function-ref name="captured" scoped="" ref="0x2b7224367980"/>
        <function-ref name="reset" scoped="" ref="0x2b7224367e58"/>
        <function-ref name="isOn" scoped="" ref="0x2b72243640f8"/>
        <function-ref name="set" scoped="" ref="0x2b72243674a8"/>
        <function-ref name="start" scoped="" ref="0x2b7224365310"/>
        <function-ref name="stop" scoped="" ref="0x2b7224365798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b722439f020" loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b722439f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b722439c7a8"/>
        <function-ref name="fired" scoped="" ref="0x2b722439d560"/>
        <function-ref name="get" scoped="" ref="0x2b722439fba0"/>
        <function-ref name="reset" scoped="" ref="0x2b722439d9e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b722439cc30"/>
        <function-ref name="set" scoped="" ref="0x2b722439d088"/>
        <function-ref name="start" scoped="" ref="0x2b722439de70"/>
        <function-ref name="stop" scoped="" ref="0x2b722439c320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b722439b360" loc="84:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b722439b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b7224398c20"/>
        <function-ref name="fired" scoped="" ref="0x2b722439a980"/>
        <function-ref name="get" scoped="" ref="0x2b722439a020"/>
        <function-ref name="reset" scoped="" ref="0x2b722439ae08"/>
        <function-ref name="isOn" scoped="" ref="0x2b72243970f8"/>
        <function-ref name="set" scoped="" ref="0x2b722439a4a8"/>
        <function-ref name="start" scoped="" ref="0x2b7224398310"/>
        <function-ref name="stop" scoped="" ref="0x2b7224398798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b7224371bf8" loc="79:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7224371bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b722436bdb8"/>
        <function-ref name="test" scoped="" ref="0x2b722436b4a8"/>
        <function-ref name="get" scoped="" ref="0x2b722436e7a0"/>
        <function-ref name="setScale" scoped="" ref="0x2b722436a270"/>
        <function-ref name="getScale" scoped="" ref="0x2b722436a748"/>
        <function-ref name="reset" scoped="" ref="0x2b722436d5b8"/>
        <function-ref name="overflow" scoped="" ref="0x2b722436d130"/>
        <function-ref name="isOn" scoped="" ref="0x2b722436b930"/>
        <function-ref name="set" scoped="" ref="0x2b722436ec28"/>
        <function-ref name="start" scoped="" ref="0x2b722436da40"/>
        <function-ref name="stop" scoped="" ref="0x2b722436b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b7224461b68" loc="30:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b7224461b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TOne" ref="0x2b72236a89f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b722445e238"/>
        <function-ref name="fired" scoped="" ref="0x2b722445f2b0"/>
        <function-ref name="startAt" scoped="" ref="0x2b722445fbc0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b722445f738"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b722445e6c0"/>
        <function-ref name="start" scoped="" ref="0x2b72244608f8"/>
        <function-ref name="stop" scoped="" ref="0x2b7224460dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7224421dc0" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7224421dc0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b72235d6388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b72235d6388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7224420170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b7224420540" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7224420540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b72244116f8"/>
        <function-ref name="test" scoped="" ref="0x2b7224412db8"/>
        <function-ref name="get" scoped="" ref="0x2b72244130f8"/>
        <function-ref name="setScale" scoped="" ref="0x2b7224411b80"/>
        <function-ref name="getScale" scoped="" ref="0x2b7224410088"/>
        <function-ref name="reset" scoped="" ref="0x2b7224412020"/>
        <function-ref name="overflow" scoped="" ref="0x2b7224413a58"/>
        <function-ref name="isOn" scoped="" ref="0x2b7224411270"/>
        <function-ref name="set" scoped="" ref="0x2b7224413580"/>
        <function-ref name="start" scoped="" ref="0x2b72244124a8"/>
        <function-ref name="stop" scoped="" ref="0x2b7224412930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b7224f2d9d8" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b7224f2d9d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b72235d6020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b72235d6020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TOne" ref="0x2b72236a89f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7224f29088"/>
        <function-ref name="fired" scoped="" ref="0x2b7224f2b0f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b7224f2ba08"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7224f2b580"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7224f29510"/>
        <function-ref name="start" scoped="" ref="0x2b7224f2c768"/>
        <function-ref name="stop" scoped="" ref="0x2b7224f2cc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x2b7224f24a80" loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b7224f24a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b7224f20270"/>
        <function-ref name="fired" scoped="" ref="0x2b7224f22020"/>
        <function-ref name="get" scoped="" ref="0x2b7224f23658"/>
        <function-ref name="reset" scoped="" ref="0x2b7224f224a8"/>
        <function-ref name="isOn" scoped="" ref="0x2b7224f206f8"/>
        <function-ref name="set" scoped="" ref="0x2b7224f23ae0"/>
        <function-ref name="start" scoped="" ref="0x2b7224f22930"/>
        <function-ref name="stop" scoped="" ref="0x2b7224f22db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x2b7224f29a30" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b7224f29a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b7224f26b80"/>
        <function-ref name="test" scoped="" ref="0x2b7224f26270"/>
        <function-ref name="get" scoped="" ref="0x2b7224f285d8"/>
        <function-ref name="setScale" scoped="" ref="0x2b7224f24088"/>
        <function-ref name="getScale" scoped="" ref="0x2b7224f24560"/>
        <function-ref name="reset" scoped="" ref="0x2b7224f274a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b7224f27020"/>
        <function-ref name="isOn" scoped="" ref="0x2b7224f266f8"/>
        <function-ref name="set" scoped="" ref="0x2b7224f28a60"/>
        <function-ref name="start" scoped="" ref="0x2b7224f27930"/>
        <function-ref name="stop" scoped="" ref="0x2b7224f27db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b722445a420" loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b722445a420"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7223663788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7224459020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b7224455150" loc="24:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7224455150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TOne" ref="0x2b72236a89f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7224454020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7224454930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b72244544a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b7224454db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b7224451e08" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7224451e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TOne" ref="0x2b72236a89f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b722444fbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7224482548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b72244820c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b72244829d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b7224480020" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7224480020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b722447c0f8"/>
        <function-ref name="test" scoped="" ref="0x2b722447e7a8"/>
        <function-ref name="get" scoped="" ref="0x2b7224480ba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b722447c580"/>
        <function-ref name="getScale" scoped="" ref="0x2b722447ca58"/>
        <function-ref name="reset" scoped="" ref="0x2b722447f9e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b722447f560"/>
        <function-ref name="isOn" scoped="" ref="0x2b722447ec30"/>
        <function-ref name="set" scoped="" ref="0x2b722447f088"/>
        <function-ref name="start" scoped="" ref="0x2b722447fe70"/>
        <function-ref name="stop" scoped="" ref="0x2b722447e320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b72244a0450" loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b72244a0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7223663788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b722449f1d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b722449fae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b722449f658"/>
        <function-ref name="overflow" scoped="" ref="0x2b722449d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b7224478270" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7224478270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7223663788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b72244a1020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b72244a1930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b72244a14a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b72244a1db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b722449cc38" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b722449cc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7223663788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b722449b820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b722449be48" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b722449be48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7223663788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b722449abe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7224499548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b72244990c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b72244999d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b72244903c0" loc="36:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b72244903c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7223663788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b722448f150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b722451ba38" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b722451ba38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b722451bd88"/>
        <function-ref name="stopDone" scoped="" ref="0x2b7224518020"/>
        <function-ref name="start" scoped="" ref="0x2b72245181a8"/>
        <function-ref name="stop" scoped="" ref="0x2b7224518330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b7224518aa8" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b7224518aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7224518df8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7224517020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72245171a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b7224517330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b72245174b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b72245162a8" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b72245162a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b72245165f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7224516780"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7224516908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7224516a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7224516c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b7224517c38" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b7224517c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7224516020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b7224512020" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b7224512020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b7224512370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b72245124f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b7224512680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b7224512808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b7224512990"/>
        <function-ref name="get" scoped="" ref="0x2b7224512b18"/>
        <function-ref name="led1Off" scoped="" ref="0x2b7224512ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b7224511330"/>
        <function-ref name="set" scoped="" ref="0x2b7224512e28"/>
        <function-ref name="led0On" scoped="" ref="0x2b7224511020"/>
        <function-ref name="led2On" scoped="" ref="0x2b72245111a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b7224513658" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b7224513658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b72245139a8"/>
        <function-ref name="noAck" scoped="" ref="0x2b7224513b30"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b7224513cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b7224514020" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b7224514020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b7224514370"/>
        <function-ref name="source" scoped="" ref="0x2b72245144f8"/>
        <function-ref name="address" scoped="" ref="0x2b7224514680"/>
        <function-ref name="destination" scoped="" ref="0x2b7224514808"/>
        <function-ref name="setSource" scoped="" ref="0x2b7224514990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b7224514b18"/>
        <function-ref name="type" scoped="" ref="0x2b7224514ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b7224514e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b7224513020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b72245131a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b7224513330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b7224587bb0" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b7224587bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7224586020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72245861a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7224586330"/>
        <function-ref name="cancel" scoped="" ref="0x2b72245864b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7224586640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b72245868c8" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b72245868c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7224586c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b722450fb60" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b722450fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7224542020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72245421a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7224542330"/>
        <function-ref name="cancel" scoped="" ref="0x2b72245424b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7224542640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b7224540578" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b7224540578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b72245408c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7224540a50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7224540bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7224540d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7224587020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b72245429a8" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b72245429a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7224542d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b7224587268" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b7224587268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b72245875b8"/>
        <function-ref name="noAck" scoped="" ref="0x2b7224587740"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b72245878c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b7224541020" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b7224541020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b7224541370"/>
        <function-ref name="source" scoped="" ref="0x2b72245414f8"/>
        <function-ref name="address" scoped="" ref="0x2b7224541680"/>
        <function-ref name="destination" scoped="" ref="0x2b7224541808"/>
        <function-ref name="setSource" scoped="" ref="0x2b7224541990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b7224541b18"/>
        <function-ref name="type" scoped="" ref="0x2b7224541ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b7224541e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b7224540020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b72245401a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b7224540330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b72245812e8" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b72245812e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b7224581638"/>
        <function-ref name="stopDone" scoped="" ref="0x2b72245817c0"/>
        <function-ref name="start" scoped="" ref="0x2b7224581948"/>
        <function-ref name="stop" scoped="" ref="0x2b7224581ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b7224580ce8" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b7224580ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b72239134b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b722457e0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b722457e228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b722457e3b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b722457e538"/>
        <function-ref name="sendDone" scoped="" ref="0x2b722457e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7224584bb0" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7224584bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7224581020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b7224580270" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b7224580270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b72239134b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b72245805c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b722457d5a8" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b722457d5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b722457d8f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b722457da80"/>
        <function-ref name="led1On" scoped="" ref="0x2b722457dc08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b722457dd90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b722457c020"/>
        <function-ref name="get" scoped="" ref="0x2b722457c1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b722457c330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b722457c950"/>
        <function-ref name="set" scoped="" ref="0x2b722457c4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b722457c640"/>
        <function-ref name="led2On" scoped="" ref="0x2b722457c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b7224579ba8" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b7224579ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b72239134b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b722457d020"/>
        <function-ref name="offset" scoped="" ref="0x2b722457d1a8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b722457d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b72245a1b90" loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b72245a1b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b72245a0020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b72245a01a8"/>
        <function-ref name="start" scoped="" ref="0x2b72245a0330"/>
        <function-ref name="stop" scoped="" ref="0x2b72245a04b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2b722461add0" loc="332:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x2b722461add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7224619170"/>
        <function-ref name="runTask" scoped="" ref="0x2b72246192f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b722458db00" loc="74:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b722458db00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b722458de50"/>
        <function-ref name="stop" scoped="" ref="0x2b722458f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2b72245bb8e0" loc="191:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x2b72245bb8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b72245bbc30"/>
        <function-ref name="runTask" scoped="" ref="0x2b72245bbdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b72245a1578" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b72245a1578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72245a18c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2b722458b608" loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x2b722458b608"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2b722458b958"/>
        <function-ref name="flush" scoped="" ref="0x2b722458bae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2b72245d2590" loc="322:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x2b72245d2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b72245d28e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b72245d2a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2b7224591da8" loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b7224591da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b722459a170"/>
        <function-ref name="resetSend" scoped="" ref="0x2b722459a2f8"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b722459a480"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b722459a608"/>
        <function-ref name="putData" scoped="" ref="0x2b722459a790"/>
        <function-ref name="putDone" scoped="" ref="0x2b722459a918"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b722459aaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b722459ad18" loc="73:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b722459ad18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b72245960a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b7224596228"/>
        <function-ref name="led1On" scoped="" ref="0x2b72245963b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b7224596538"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b72245966c0"/>
        <function-ref name="get" scoped="" ref="0x2b7224596848"/>
        <function-ref name="led1Off" scoped="" ref="0x2b72245969d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b7224590020"/>
        <function-ref name="set" scoped="" ref="0x2b7224596b58"/>
        <function-ref name="led0On" scoped="" ref="0x2b7224596ce0"/>
        <function-ref name="led2On" scoped="" ref="0x2b7224596e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2b7224615020" loc="341:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b7224615020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7224615370"/>
        <function-ref name="runTask" scoped="" ref="0x2b72246154f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2b722459b898" loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b722459b898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b722459bbe8"/>
        <function-ref name="nextByte" scoped="" ref="0x2b722459bd70"/>
        <function-ref name="startSend" scoped="" ref="0x2b722459f020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b722459f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2b7224597ba8" loc="68:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b7224597ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b722459e020"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b722459e1a8"/>
        <function-ref name="endPacket" scoped="" ref="0x2b722459e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2b72246cc908" loc="275:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x2b72246cc908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b72246ccc58"/>
        <function-ref name="runTask" scoped="" ref="0x2b72246ccde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b72246d16f8" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b72246d16f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b72239134b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b72246d1a68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b72246d1bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b72246d1d78"/>
        <function-ref name="cancel" scoped="" ref="0x2b72246d0020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b72246d01a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2b72246cb100" loc="158:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x2b72246cb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b72246cb450"/>
        <function-ref name="runTask" scoped="" ref="0x2b72246cb5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b72246d1020" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b72246d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b72239134b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b72246d1390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2b72246d05b0" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x2b72246d05b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b72239134b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b72246d0920"/>
        <function-ref name="offset" scoped="" ref="0x2b72246d0aa8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b72246d0c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b72246cd268" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b72246cd268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b72246cd5b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b72246cd740"/>
        <function-ref name="led1On" scoped="" ref="0x2b72246cd8c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b72246cda50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b72246cdbd8"/>
        <function-ref name="get" scoped="" ref="0x2b72246cdd60"/>
        <function-ref name="led1Off" scoped="" ref="0x2b72246cc020"/>
        <function-ref name="led2On" scoped="" ref="0x2b72246cc640"/>
        <function-ref name="set" scoped="" ref="0x2b72246cc330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b72246cc1a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b72246cc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2b72246cf750" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b72246cf750"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b72246cfaa0"/>
        <function-ref name="nextByte" scoped="" ref="0x2b72246cfc28"/>
        <function-ref name="startSend" scoped="" ref="0x2b72246cfdb0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b72246cd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2b72246d0e78" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b72246d0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b72246cf1f8"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b72246cf380"/>
        <function-ref name="endPacket" scoped="" ref="0x2b72246cf508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b72246bcc98" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b72246bcc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b72246c5020"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b72246c51a8"/>
        <function-ref name="receive" scoped="" ref="0x2b72246c5330"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b72246c54b8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b72246c5640"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b72246c57c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b72246c5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2b72246c7328" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b72246c7328"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b72246c7678"/>
        <function-ref name="resetSend" scoped="" ref="0x2b72246c7800"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b72246c7988"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b72246c7b10"/>
        <function-ref name="putData" scoped="" ref="0x2b72246c7c98"/>
        <function-ref name="putDone" scoped="" ref="0x2b72246c7e20"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b72246c6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b72246c5bc8" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b72246c5bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b72246c3020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b72246c31a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b72246c3330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b72246c34b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b72246c3640"/>
        <function-ref name="get" scoped="" ref="0x2b72246c37c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b72246c3950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b72246b9020"/>
        <function-ref name="set" scoped="" ref="0x2b72246c3ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b72246c3c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b72246c3de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b72246e9cc8" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b72246e9cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b72246ec0a0"/>
        <function-ref name="receive" scoped="" ref="0x2b72246ec228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b72246eea80" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b72246eea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b72246eedd0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b72246ed020"/>
        <function-ref name="receive" scoped="" ref="0x2b72246ed1a8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b72246ed330"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b72246ed4b8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b72246ed640"/>
        <function-ref name="sendDone" scoped="" ref="0x2b72246ed7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b72246ee2b8" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b72246ee2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b72246ee608"/>
        <function-ref name="stop" scoped="" ref="0x2b72246ee790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b72246e65d8" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b72246e65d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b72246e6928"/>
        <function-ref name="receive" scoped="" ref="0x2b72246e6ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b72246e6da0" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b72246e6da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b72246e5170"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b72246e52f8"/>
        <function-ref name="receive" scoped="" ref="0x2b72246e5480"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b72246e5608"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b72246e5790"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b72246e5918"/>
        <function-ref name="sendDone" scoped="" ref="0x2b72246e5aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b72246e4080" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b72246e4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7223663788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b72246e4dd0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b72246e3738"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b72246e32b0"/>
        <function-ref name="overflow" scoped="" ref="0x2b72246e3bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b72246ecdc8" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b72246ecdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b72246e6170"/>
        <function-ref name="stop" scoped="" ref="0x2b72246e62f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b722473c430" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b722473c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b722473c780"/>
        <function-ref name="receive" scoped="" ref="0x2b722473c908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2b722473bc18" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2b722473bc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b722473a020"/>
        <function-ref name="stop" scoped="" ref="0x2b722473a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b72246df610" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b72246df610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72246df960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b722473cb90" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b722473cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b722473b020"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b722473b1a8"/>
        <function-ref name="receive" scoped="" ref="0x2b722473b330"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b722473b4b8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b722473b640"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b722473b7c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b722473b950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b72247382d0" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b72247382d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7223663788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7224737088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7224737998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7224737510"/>
        <function-ref name="overflow" scoped="" ref="0x2b7224737e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2b722473ac10" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2b722473ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b7224739020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b72247391a8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b7224739330"/>
        <function-ref name="txDone" scoped="" ref="0x2b72247394b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b7224739640"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b72247397c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b7224739950"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b7224739ad8"/>
        <function-ref name="tx" scoped="" ref="0x2b7224739c60"/>
        <function-ref name="rx" scoped="" ref="0x2b7224739de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b72246dfbe8" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b72246dfbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b722473c020"/>
        <function-ref name="stop" scoped="" ref="0x2b722473c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2b722473a470" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2b722473a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b722473a7c0"/>
        <function-ref name="stop" scoped="" ref="0x2b722473a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b7224769158" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b7224769158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b72247694a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b7224769630"/>
        <function-ref name="rxDone" scoped="" ref="0x2b72247697b8"/>
        <function-ref name="txDone" scoped="" ref="0x2b7224769940"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b7224769ac8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b7224769c50"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b7224769dd8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b7224768020"/>
        <function-ref name="tx" scoped="" ref="0x2b72247681a8"/>
        <function-ref name="rx" scoped="" ref="0x2b7224768330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b7224767860" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b7224767860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b7224767bb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b7224767d38"/>
        <function-ref name="rxDone" scoped="" ref="0x2b7224766020"/>
        <function-ref name="txDone" scoped="" ref="0x2b72247661a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b7224766330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b72247664b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b7224766640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b72247667c8"/>
        <function-ref name="tx" scoped="" ref="0x2b7224766950"/>
        <function-ref name="rx" scoped="" ref="0x2b7224766ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b722476a8b8" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b722476a8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b722476ac08"/>
        <function-ref name="stop" scoped="" ref="0x2b722476ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b72247686b0" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b72247686b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7224768a00"/>
        <function-ref name="stop" scoped="" ref="0x2b7224768b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b7224767020" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b7224767020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7224767370"/>
        <function-ref name="stop" scoped="" ref="0x2b72247674f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b722476a060" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b722476a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b722476a3b0"/>
        <function-ref name="stop" scoped="" ref="0x2b722476a538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2b72247657f8" loc="114:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2b72247657f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7224765b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b7224761158" loc="117:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b7224761158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b72247614a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b7224761630"/>
        <function-ref name="rxDone" scoped="" ref="0x2b72247617b8"/>
        <function-ref name="txDone" scoped="" ref="0x2b7224761940"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b7224761ac8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b7224761c50"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b7224761dd8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b7224760020"/>
        <function-ref name="tx" scoped="" ref="0x2b72247601a8"/>
        <function-ref name="rx" scoped="" ref="0x2b7224760330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2b7224760688" loc="119:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2b7224760688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72247609d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b722475e020" loc="122:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b722475e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b722475e370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b722475e4f8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b722475e680"/>
        <function-ref name="txDone" scoped="" ref="0x2b722475e808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b722475e990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b722475eb18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b722475eca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b722475ee28"/>
        <function-ref name="tx" scoped="" ref="0x2b722475d020"/>
        <function-ref name="rx" scoped="" ref="0x2b722475d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b72247628b8" loc="116:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b72247628b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7224762c08"/>
        <function-ref name="stop" scoped="" ref="0x2b7224762d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b7224760d98" loc="120:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b7224760d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b722475f170"/>
        <function-ref name="stop" scoped="" ref="0x2b722475f2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b722475f6b8" loc="121:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b722475f6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b722475fa08"/>
        <function-ref name="stop" scoped="" ref="0x2b722475fb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b722475d4c8" loc="124:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b722475d4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b722475d818"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b722475d9a0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b722475db28"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b722475dcb0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b722475de38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b722475c1a8" loc="125:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b722475c1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b722475c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b7224762020" loc="115:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b7224762020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7224762370"/>
        <function-ref name="stop" scoped="" ref="0x2b72247624f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b72247a6aa0" loc="24:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b72247a6aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7223663788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b72247f5828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b72247f4190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b72247f5cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b72247f4618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b72247f3810" loc="24:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b72247f3810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TThree" ref="0x2b72236a8d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b72247f0598"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b72247ee020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b72247f0a20"/>
        <function-ref name="overflow" scoped="" ref="0x2b72247ee4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b72247e65d0" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b72247e65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b72247e6920"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b72247e6aa8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b72247e6c30"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b72247e6db8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b72247e5020"/>
        <function-ref name="setControlB" scoped="" ref="0x2b72247e51a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b72247e5330"/>
        <function-ref name="getControlB" scoped="" ref="0x2b72247e54b8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b72247e5640"/>
        <function-ref name="setControlA" scoped="" ref="0x2b72247e57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b72247e5ca0" loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b72247e5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b72247e1e20"/>
        <function-ref name="test" scoped="" ref="0x2b72247e1510"/>
        <function-ref name="get" scoped="" ref="0x2b72247e4858"/>
        <function-ref name="captured" scoped="" ref="0x2b72247e3238"/>
        <function-ref name="reset" scoped="" ref="0x2b72247e3710"/>
        <function-ref name="isOn" scoped="" ref="0x2b72247e1998"/>
        <function-ref name="set" scoped="" ref="0x2b72247e4ce0"/>
        <function-ref name="start" scoped="" ref="0x2b72247e3b98"/>
        <function-ref name="stop" scoped="" ref="0x2b72247e1088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b72247e0a20" loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b72247e0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b72247dc270"/>
        <function-ref name="fired" scoped="" ref="0x2b72247de020"/>
        <function-ref name="get" scoped="" ref="0x2b72247df5d8"/>
        <function-ref name="reset" scoped="" ref="0x2b72247de4a8"/>
        <function-ref name="isOn" scoped="" ref="0x2b72247dc6f8"/>
        <function-ref name="set" scoped="" ref="0x2b72247dfa60"/>
        <function-ref name="start" scoped="" ref="0x2b72247de930"/>
        <function-ref name="stop" scoped="" ref="0x2b72247dedb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b72247eb570" loc="79:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b72247eb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b72247e76f8"/>
        <function-ref name="test" scoped="" ref="0x2b72247e9db8"/>
        <function-ref name="get" scoped="" ref="0x2b72247ea130"/>
        <function-ref name="setScale" scoped="" ref="0x2b72247e7b80"/>
        <function-ref name="getScale" scoped="" ref="0x2b72247e6088"/>
        <function-ref name="reset" scoped="" ref="0x2b72247e9020"/>
        <function-ref name="overflow" scoped="" ref="0x2b72247eaa90"/>
        <function-ref name="isOn" scoped="" ref="0x2b72247e7270"/>
        <function-ref name="set" scoped="" ref="0x2b72247ea5b8"/>
        <function-ref name="start" scoped="" ref="0x2b72247e94a8"/>
        <function-ref name="stop" scoped="" ref="0x2b72247e9930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b72247d4c90" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b72247d4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b72247d2020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b72247d21a8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b72247d2330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b72247d24b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b72247d2640"/>
        <function-ref name="setControlB" scoped="" ref="0x2b72247d27c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b72247d2950"/>
        <function-ref name="getControlB" scoped="" ref="0x2b72247d2ad8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b72247d2c60"/>
        <function-ref name="setControlA" scoped="" ref="0x2b72247d2de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b72247cec48" loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b72247cec48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b722481c4a8"/>
        <function-ref name="fired" scoped="" ref="0x2b722481d1d0"/>
        <function-ref name="get" scoped="" ref="0x2b722481e820"/>
        <function-ref name="reset" scoped="" ref="0x2b722481d658"/>
        <function-ref name="isOn" scoped="" ref="0x2b722481c930"/>
        <function-ref name="set" scoped="" ref="0x2b722481eca8"/>
        <function-ref name="start" scoped="" ref="0x2b722481dae0"/>
        <function-ref name="stop" scoped="" ref="0x2b722481c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b72247d1350" loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b72247d1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b72247ce580"/>
        <function-ref name="test" scoped="" ref="0x2b72247cfc20"/>
        <function-ref name="get" scoped="" ref="0x2b72247d0020"/>
        <function-ref name="captured" scoped="" ref="0x2b72247d0980"/>
        <function-ref name="reset" scoped="" ref="0x2b72247d0e58"/>
        <function-ref name="isOn" scoped="" ref="0x2b72247ce0f8"/>
        <function-ref name="set" scoped="" ref="0x2b72247d04a8"/>
        <function-ref name="start" scoped="" ref="0x2b72247cf310"/>
        <function-ref name="stop" scoped="" ref="0x2b72247cf798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b722481a020" loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b722481a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b72248187a8"/>
        <function-ref name="fired" scoped="" ref="0x2b7224819560"/>
        <function-ref name="get" scoped="" ref="0x2b722481aba0"/>
        <function-ref name="reset" scoped="" ref="0x2b72248199e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b7224818c30"/>
        <function-ref name="set" scoped="" ref="0x2b7224819088"/>
        <function-ref name="start" scoped="" ref="0x2b7224819e70"/>
        <function-ref name="stop" scoped="" ref="0x2b7224818320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b7224817360" loc="84:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b7224817360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b7224814c20"/>
        <function-ref name="fired" scoped="" ref="0x2b7224815980"/>
        <function-ref name="get" scoped="" ref="0x2b7224815020"/>
        <function-ref name="reset" scoped="" ref="0x2b7224815e08"/>
        <function-ref name="isOn" scoped="" ref="0x2b72248130f8"/>
        <function-ref name="set" scoped="" ref="0x2b72248154a8"/>
        <function-ref name="start" scoped="" ref="0x2b7224814310"/>
        <function-ref name="stop" scoped="" ref="0x2b7224814798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b72247dbbf8" loc="79:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b72247dbbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b72247d5db8"/>
        <function-ref name="test" scoped="" ref="0x2b72247d54a8"/>
        <function-ref name="get" scoped="" ref="0x2b72247d87a0"/>
        <function-ref name="setScale" scoped="" ref="0x2b72247d4270"/>
        <function-ref name="getScale" scoped="" ref="0x2b72247d4748"/>
        <function-ref name="reset" scoped="" ref="0x2b72247d65b8"/>
        <function-ref name="overflow" scoped="" ref="0x2b72247d6130"/>
        <function-ref name="isOn" scoped="" ref="0x2b72247d5930"/>
        <function-ref name="set" scoped="" ref="0x2b72247d8c28"/>
        <function-ref name="start" scoped="" ref="0x2b72247d6a40"/>
        <function-ref name="stop" scoped="" ref="0x2b72247d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7224899bc8" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7224899bc8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b72235d6388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b72235d6388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7224898020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b72248983f0" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b72248983f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b7224894580"/>
        <function-ref name="test" scoped="" ref="0x2b7224895c20"/>
        <function-ref name="get" scoped="" ref="0x2b7224897020"/>
        <function-ref name="setScale" scoped="" ref="0x2b7224894a08"/>
        <function-ref name="getScale" scoped="" ref="0x2b7224893020"/>
        <function-ref name="reset" scoped="" ref="0x2b7224897e08"/>
        <function-ref name="overflow" scoped="" ref="0x2b7224897980"/>
        <function-ref name="isOn" scoped="" ref="0x2b72248940f8"/>
        <function-ref name="set" scoped="" ref="0x2b72248974a8"/>
        <function-ref name="start" scoped="" ref="0x2b7224895310"/>
        <function-ref name="stop" scoped="" ref="0x2b7224895798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b722489bce0" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b722489bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TThree" ref="0x2b72236a8d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7224890ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b722488f4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b722488f020"/>
        <function-ref name="overflow" scoped="" ref="0x2b722488f930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b722488d020" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b722488d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b72248890f8"/>
        <function-ref name="test" scoped="" ref="0x2b722488b7a8"/>
        <function-ref name="get" scoped="" ref="0x2b722488dba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b7224889580"/>
        <function-ref name="getScale" scoped="" ref="0x2b7224889a58"/>
        <function-ref name="reset" scoped="" ref="0x2b722488c9e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b722488c560"/>
        <function-ref name="isOn" scoped="" ref="0x2b722488bc30"/>
        <function-ref name="set" scoped="" ref="0x2b722488c088"/>
        <function-ref name="start" scoped="" ref="0x2b722488ce70"/>
        <function-ref name="stop" scoped="" ref="0x2b722488b320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b7224883c80" loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b7224883c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TThree" ref="0x2b72236a8d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7224882a28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b72248804a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7224880020"/>
        <function-ref name="overflow" scoped="" ref="0x2b7224880930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b7224886a60" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7224886a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7223663430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7223663788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7224884828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7224883190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7224884cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b7224883618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2b72248786f8" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x2b72248786f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b7224878a48"/>
        <function-ref name="offset" scoped="" ref="0x2b7224878bd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b7224878d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b72248bd880" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b72248bd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b72248bdbd0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b72248bdd58"/>
        <function-ref name="led1On" scoped="" ref="0x2b72248ba020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b72248ba1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b72248ba330"/>
        <function-ref name="get" scoped="" ref="0x2b72248ba4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b72248ba640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b72248bac60"/>
        <function-ref name="set" scoped="" ref="0x2b72248ba7c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b72248ba950"/>
        <function-ref name="led2On" scoped="" ref="0x2b72248baad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b72248b4850" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b72248b4850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72248b4ba0"/>
        <function-ref name="isInput" scoped="" ref="0x2b72248b4d28"/>
        <function-ref name="toggle" scoped="" ref="0x2b72248b3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72248b31a8"/>
        <function-ref name="get" scoped="" ref="0x2b72248b3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72248b34b8"/>
        <function-ref name="set" scoped="" ref="0x2b72248b3640"/>
        <function-ref name="clr" scoped="" ref="0x2b72248b37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b72248b9b20" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b72248b9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72248b9e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b72248b3ae0" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b72248b3ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72248b3e30"/>
        <function-ref name="isInput" scoped="" ref="0x2b72248b2020"/>
        <function-ref name="toggle" scoped="" ref="0x2b72248b21a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72248b2330"/>
        <function-ref name="get" scoped="" ref="0x2b72248b24b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72248b2640"/>
        <function-ref name="set" scoped="" ref="0x2b72248b27c8"/>
        <function-ref name="clr" scoped="" ref="0x2b72248b2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b72248b5110" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b72248b5110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b72248b5460"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b72248b55e8"/>
        <function-ref name="led1On" scoped="" ref="0x2b72248b5770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b72248b58f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b72248b5a80"/>
        <function-ref name="get" scoped="" ref="0x2b72248b5c08"/>
        <function-ref name="led1Off" scoped="" ref="0x2b72248b5d90"/>
        <function-ref name="led2Off" scoped="" ref="0x2b72248b44b8"/>
        <function-ref name="set" scoped="" ref="0x2b72248b4020"/>
        <function-ref name="led0On" scoped="" ref="0x2b72248b41a8"/>
        <function-ref name="led2On" scoped="" ref="0x2b72248b4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b72248b2c68" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b72248b2c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72248b1020"/>
        <function-ref name="isInput" scoped="" ref="0x2b72248b11a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72248b1330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72248b14b8"/>
        <function-ref name="get" scoped="" ref="0x2b72248b1640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72248b17c8"/>
        <function-ref name="set" scoped="" ref="0x2b72248b1950"/>
        <function-ref name="clr" scoped="" ref="0x2b72248b1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b72248eb060" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b72248eb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72248eb3b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b72248eb538"/>
        <function-ref name="toggle" scoped="" ref="0x2b72248eb6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72248eb848"/>
        <function-ref name="get" scoped="" ref="0x2b72248eb9d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72248ebb58"/>
        <function-ref name="set" scoped="" ref="0x2b72248ebce0"/>
        <function-ref name="clr" scoped="" ref="0x2b72248ebe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b72248ea1f0" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b72248ea1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72248ea540"/>
        <function-ref name="isInput" scoped="" ref="0x2b72248ea6c8"/>
        <function-ref name="toggle" scoped="" ref="0x2b72248ea850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72248ea9d8"/>
        <function-ref name="get" scoped="" ref="0x2b72248eab60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72248eace8"/>
        <function-ref name="set" scoped="" ref="0x2b72248eae70"/>
        <function-ref name="clr" scoped="" ref="0x2b72248e9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b72248e8460" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b72248e8460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b72248e87b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b72248e9378" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b72248e9378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b72248e96c8"/>
        <function-ref name="isInput" scoped="" ref="0x2b72248e9850"/>
        <function-ref name="toggle" scoped="" ref="0x2b72248e99d8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b72248e9b60"/>
        <function-ref name="get" scoped="" ref="0x2b72248e9ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b72248e9e70"/>
        <function-ref name="set" scoped="" ref="0x2b72248e8020"/>
        <function-ref name="clr" scoped="" ref="0x2b72248e81a8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Init.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b72236e9640" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Init.nc">
        <documentation loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b72236ea328" loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b72236f15e8" loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b72236f1378" loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b72236f6d78" loc="31:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b72236f37b0" loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b72236f3540" loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b72236f2290" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b72236f2020" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b72236f2ad8" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b722370aae8" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b72237091d8" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b722370cd70" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b7223708020" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b722370a438" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b7223709890" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b722370c070" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b722370c6e0" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b72235ed3e0" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b72235f8328" loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b72235edaf8" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b72235fa070" loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b72235fa860" loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b72236afe40" loc="76:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b72236c64f8" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b7223634940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b72236c7020" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b72238b1378" loc="113:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b72238b1108" loc="113:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b72238b0780" loc="138:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b72238b0510" loc="138:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b72238b3748" loc="104:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b72238b1b60" loc="130:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b722393eb08" loc="177:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b7223908bf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b722393e898" loc="177:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b7223947b80" loc="88:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b7223947910" loc="88:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b7223931110" loc="68:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b7223931b68" loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b72239318f8" loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b7223944450" loc="121:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b7223945e60" loc="121:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b72239441d0" loc="121:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b7223945020" loc="103:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b7223946900" loc="103:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b7223946c38" loc="103:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b7223941768" loc="147:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b72239414f8" loc="147:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b72239409d8" loc="162:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b7223940458" loc="162:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b7223940758" loc="162:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b7223908848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b7223943600" loc="136:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b7223943390" loc="136:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b722393f020" loc="187:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b7223908bf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b722393c920" loc="187:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b722393cc50" loc="187:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b7223908bf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b722393fd88" loc="195:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b7223908bf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b7223926718" loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
              <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72238afdd0" loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b7223926140" loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b7223926450" loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b722393a5b8" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b722393a348" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b72239395b8" loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223939348" loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b72239366c8" loc="126:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223936100" loc="126:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b7223936410" loc="126:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b7223935828" loc="106:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b7223938950" loc="94:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72239383c0" loc="94:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b72239386d0" loc="94:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b7223949550" loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b7223949c88" loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b7223948420" loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b722395e2a8" loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b722395d8b0" loc="100:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b722395c070" loc="117:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b7223948b38" loc="77:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b722395cb70" loc="134:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b722395c900" loc="134:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b722394adf8" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b722395ea18" loc="89:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b722395d178" loc="94:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x2b722391ab50" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b722391a250" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b722391a5b0" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b722391a8c0" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b722392a2d8" loc="135:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b722392cbe8" loc="135:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b722392a020" loc="135:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b722392c3e0" loc="123:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b722392f108" loc="96:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223919e50" loc="96:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b722392d5c8" loc="110:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b722392d020" loc="110:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b722392d348" loc="110:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b722398b6e8" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b722398b108" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b722398b468" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b7223997728" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223997140" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b72239974a8" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b72239967e8" loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223996578" loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b7223998978" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b7223998020" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b7223987cd0" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b7223988b98" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223988928" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b7223984cb0" loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223984a40" loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b722399a020" loc="85:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223985c38" loc="85:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b72239a7730" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72239a74c0" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b72239939e8" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223993400" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b7223993768" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b72239927e0" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223992570" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b7223991d68" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223991780" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b7223991ae8" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b72239a6670" loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72239a6400" loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x2b72239a3e00" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b72239a3648" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b72239a33d8" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b72239a25f8" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b7223994760" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7223994760"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b7223994990" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7223994990"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b722399e670" loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7223994990"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b722399e400" loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b722399d750" loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b722399d4e0" loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b722399f4e8" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b722399f278" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b72239b4980" loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7223994990"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72239b43c0" loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b72239b4700" loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7223994990"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x2b72239b96f0" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b72239b96f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x2b72239ce6a8" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72239ce438" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b72239b5c88" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b72239b96f0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72239b5a18" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b72239b5290" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72239b5020" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b72239cd388" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b72239b96f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72239ced98" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b72239cd108" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b72239b96f0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b72239c4738" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b72239c4738"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b72239d9020" loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b72239c2020" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72239c5c68" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b72239ee0d8" loc="120:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b72239ef178" loc="97:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b72239f1848" loc="88:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b72239ef900" loc="102:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b72239eeac0" loc="128:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x2b7223a02020" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b72238f48b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72239eacc8" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b72239f2be0" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b72238f48b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b72239ea5b8" loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b72238f48b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72239ea348" loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b7223a01988" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b72238f48b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a01398" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b7223a01708" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b72238f48b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b7223a02cd8" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b72238f48b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a026e8" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b7223a02a58" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b72238f48b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x2b7223a00c30" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b72238f44c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a009c0" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x2b72239fe928" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2b72238f44c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72239fe348" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b72239fe6a8" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2b72238f44c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b7223a002d0" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a00060" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2b72239fd070" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b72238f44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b72239dea70" loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b72238f48b8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b72239de170" loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b72238f48b8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b72239de4d0" loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b72239de7e0" loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b72239f4df0" loc="122:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72239f4828" loc="122:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b72239f4b38" loc="122:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b72239f4020" loc="110:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b72239dd7e8" loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72239dd578" loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b72239f56e8" loc="97:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b72239f5140" loc="97:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b72239f5468" loc="97:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x2b7223a3f600" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x2b7223a35290" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a35020" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x2b7223a432d0" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b7223908bf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a43060" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x2b7223a419b8" loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a41748" loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b7223a45c30" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a459c0" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b7223a2b5b8" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a2b348" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b7223a44900" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a44348" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b7223a44680" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b7223a452a0" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a2bcc0" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b7223a45020" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b7223a41020" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b7223908bf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a439a0" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b7223a43cd0" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b7223908bf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x2b7223a1de70" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x2b7223a2f790" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x2b7223a2d8e8" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a2d678" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x2b7223a2e290" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a2e020" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x2b7223a2ed18" loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a2eaa8" loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x2b7223a58b60" loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x2b7223a59ce0" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2b72238f6540"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x2b7223a59a70" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2b72238f6540"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b7223a58458" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x2b7223a59290" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x2b7223a56360" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b72238f6540"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x2b7223a6c468" loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a6c1f8" loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b7223a54968" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a546f8" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b7223a6d020" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b7223a6f710" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a6f160" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b7223a6f490" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2b7223a5ce60" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a5cbf0" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2b7223a6da38" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a6d7c8" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b7223a14258" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2b7223a17a50" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a177e0" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2b7223a14d10" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a14aa0" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x2b7223a13590" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x2b7223a12108" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a13e28" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x2b7223a11c68" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a119f8" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x2b7223a23178" loc="86:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x2b7223a249b0" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b7223a243d0" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b7223a24730" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2b7223a28670" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a28400" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x2b7223a27290" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a27020" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x2b7223a26118" loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b7223a27b10" loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b7223a27e70" loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x2b7223a16e38" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2b7223a29c18" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a296a0" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b7223a29998" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2b7223a26c08" loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a26998" loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x2b7223a4b520" loc="131:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a4b2b0" loc="131:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x2b7223a4ed30" loc="120:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a4eac0" loc="120:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x2b7223a3cbb0" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a3c610" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x2b7223a3c930" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x2b7223a3ab78" loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a3a908" loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x2b7223a462a0" loc="156:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a47ba0" loc="156:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b7223a46020" loc="156:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x2b7223a3a108" loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a3be38" loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x2b7223a4daf8" loc="125:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a4d568" loc="125:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x2b7223a4d878" loc="125:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x2b7223a53478" loc="88:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b7223a39e30" loc="88:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b7223a531f8" loc="88:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x2b7223a47468" loc="151:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a471f8" loc="151:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x2b7223a3b630" loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a3b3c0" loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x2b7223a52d68" loc="99:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a52af8" loc="99:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x2b7223a522e0" loc="94:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b7223a53cc8" loc="94:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b7223a52060" loc="94:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x2b7223a5f7c0" loc="178:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b72238f48b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2b7223a46ca0" loc="162:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a46a30" loc="162:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2b7223a5f030" loc="173:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b72238f44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x2b7223a49a20" loc="146:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a49470" loc="146:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b7223a497a0" loc="146:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x2b7223a39630" loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a393c0" loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x2b7223a4e348" loc="115:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a4fd60" loc="115:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x2b7223a4e0c8" loc="115:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x2b7223a4a2a0" loc="136:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a4bc78" loc="136:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x2b7223a4a020" loc="136:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b7223a5e290" loc="185:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a5e020" loc="185:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2b7223a50ab0" loc="105:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a50538" loc="105:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b7223a50830" loc="105:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x2b7223a2ce60" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a2cbf0" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2b7223a617b8" loc="168:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a61548" loc="168:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x2b7223a4aca8" loc="141:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a4aa38" loc="141:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x2b7223a4f5b8" loc="110:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a4f348" loc="110:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x2b7223a1fa60" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a1f4b0" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x2b7223a1f7e0" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x2b7223a1e258" loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2b7223a21290" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a21020" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x2b7223a21cb0" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a21a40" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x2b7223a33338" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a330c8" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x2b7223a34840" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a345d0" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x2b7223a33b20" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x2b7223a325b8" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223a32348" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b7223abbb30" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7223abbb30"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b7223abbd60" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7223abbd60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b7223ad27a0" loc="109:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7223abbd60"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b7223ad47c0" loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b7223ad3d70" loc="103:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7223abbd60"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7223abbd60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b7223ad37d0" loc="103:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7223abbd60"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b7223ad3af0" loc="103:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7223abbd60"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b7223ad3020" loc="88:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b7223ad1020" loc="116:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7223abbd60"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b7223ab8848" loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7223abbd60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b7223ab85d8" loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7223abbd60"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b7223ad4070" loc="73:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x2b7223ae1b28" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x2b7223ae0428" loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x2b7223ae0d40" loc="79:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x2b7223ae1438" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x2b7223b06da8" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223b06b38" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b7223b027a8" loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223b02538" loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b7223b03cd0" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223b03728" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b7223b03a50" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2b7223b1d2c8" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
              <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223b1d020" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b7223b2a110" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b7223b28020" loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b7223b2a870" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b7223908bf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b7223b2b8e8" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b7223908bf8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b7223b2b330" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b7223908bf8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b7223b2b668" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b7223bc8ca8" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b7223bc55c0" loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b7223be2c28" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b7223be2478" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b7223bc3360" loc="90:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b7223bc3b50" loc="98:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b7223bd9ac8" loc="79:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b7223be3c58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b7223bd9858" loc="79:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b7223be3c58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b7223bdeb00" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b7223bdb5e8" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b7223be3c58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b7223bdb378" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b7223be3c58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b7223bd9020" loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b7223be3c58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2b7223d34e70" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
              <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223d34bc8" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x2b7223d34290" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223d34020" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b7223d49020" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b7223d4ace0" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x2b7223d49790" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b7223d2bd10" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b7223d2baa0" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b7223d4a640" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b7223d4a3d0" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x2b7223d4f030" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b7223d50d98" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x2b7223d4e4e0" loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b7223d4e270" loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x2b7223d4fac0" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b7223d4f850" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x2b7223d4c020" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b7223d4ece8" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x2b7223d505c8" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b7223d50358" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b7223906020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x2b7223dde760" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x2b7223dda808" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b7223dd9290" loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b7223dd9020" loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x2b7223dd99f0" loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x2b7223dda020" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b7223dd8258" loc="74:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x2b7223dd6020" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223dddd28" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x2b7223dd43a0" loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b7223dd6b58" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b7223dd68e8" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Random.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b7223e38560" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Random.nc">
        <documentation loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b7223e3bd90" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Random.nc">
        <documentation loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b7223e66a08" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b7223e66a08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b7223e63500" loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b7223e66a08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b7223e63290" loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b7223e66a08"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x2b7223e95988" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223e95718" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b7223e988b0" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223e98640" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x2b7223e975f0" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223e97060" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b7223e97370" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b7223e95020" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7223e97d18" loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x2b7223ebf020" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b7223ec1ca0" loc="52:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b7223ec1518" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b7223f37338" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7223f37338"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b7223f2f020" loc="136:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b7223f34710" loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b7223f325b8" loc="114:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b7223f32020" loc="114:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b7223f32338" loc="114:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b7223f337b8" loc="98:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b7223f5e020" loc="151:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b7223f2f740" loc="144:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b7223f33020" loc="92:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b7223f37e08" loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b7223f37b98" loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b7223f305b8" loc="129:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b7223f30020" loc="129:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b7223f30338" loc="129:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b7223f358a0" loc="73:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b7223f35630" loc="73:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7222cff608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b7223f34070" loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b7223f4d550" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7223f4d550"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b7223f4d780" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7223f4d780"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b7223f4c070" loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7223f4d780"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b7223f4a0d8" loc="76:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b7223f4c888" loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b7223f4a7c8" loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b7223f7fd28" loc="89:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b7223f81c20" loc="85:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2b7223f85a58" loc="79:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b7223f7f5c8" loc="86:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b7223f7f358" loc="86:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2b7223f814c0" loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b7223f81250" loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b7223f7e6e0" loc="90:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b7223f7e470" loc="90:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2b7223f821d8" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2b7223f82b00" loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b7223f82890" loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x2b7223f9e328" loc="92:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x2b7223fa03a0" loc="68:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x2b7223fa0ab8" loc="74:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x2b7223f9f328" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b7223f9ead8" loc="98:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x2b7223f9faf8" loc="86:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b7223fa21d8" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b722367a978"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b722367ad80"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b7223fa2b90" loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b722367a978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b722367ad80"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b7223fa2920" loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b722367a978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b722367ad80"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b7223f7c1c8" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7223f7c1c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b7223f787f0" loc="74:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b7223f7bb60" loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b7223f7ca80" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7223f7c1c8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b7223f79290" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b7223f77020" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b7223f7b420" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7223f7c1c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b7223f7b1b0" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7223f7c1c8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b7223f79988" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b7223f780d8" loc="68:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b7223f60418" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b7223f60418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b7223f8b900" loc="98:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b7223f8ca40" loc="87:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b7223f60cb8" loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b7223f60418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b7223f89290" loc="104:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b7223f89020" loc="104:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b7223f89a10" loc="110:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b7223f8d4c0" loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b7223f5fd50" loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b7223f8b1d8" loc="93:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b7223f5f630" loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b7223f60418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b7223f5f3c0" loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b7223f60418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b7223f8dbb8" loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b7223f8c328" loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b722416e920" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b722416e920"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b722416eb50" loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b722416eb50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b7224169630" loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b722416eb50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b72241693c0" loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b722416eb50"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2b722416c1d8" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b722416b290" loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b722416cb00" loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b722416c890" loc="61:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2b722416f9b8" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2b7224173020" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b7224176cf8" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2b7224172338" loc="74:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b72241720c8" loc="74:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2b7224173820" loc="68:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b7224172d40" loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b7224172ad0" loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b72242534e8" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b72242534e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2b7224286020" loc="88:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2b722424cc98" loc="88:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b722424de18" loc="76:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b7224253da0" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b72242534e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b722424e108" loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b72242534e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b722424fe48" loc="60:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b72242534e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b722424e848" loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b722424c5c0" loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b722424f710" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b72242534e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b722424f4a0" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b72242534e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b722424d020" loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b722424d708" loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b722426db88" loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b722426d278" loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b722426d5d8" loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b722426d8f8" loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b7224269020" loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b722426c2b0" loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b722426c610" loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b722426c930" loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b722426cc78" loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b7224270020" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b7224274c30" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2b7224293328" loc="86:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2b722428ac40" loc="126:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2b722428d7a8" loc="117:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2b7224288610" loc="128:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2b72242883a0" loc="128:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2b7224294ba8" loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2b722428b338" loc="122:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2b722428b0c8" loc="122:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2b722428f020" loc="113:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2b7224290c88" loc="113:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b72242911d8" loc="97:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2b72242c1de0" loc="141:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b72242c1b70" loc="141:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2b722428f758" loc="114:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2b7224287690" loc="131:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2b7224287420" loc="131:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b72242c3538" loc="136:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2b722428a518" loc="125:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2b722428a2a8" loc="125:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2b72242c14a0" loc="140:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2b722428c290" loc="119:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2b722428c020" loc="119:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b7224291b30" loc="103:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b72242918c0" loc="103:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b722428d0a8" loc="116:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2b722428fdf8" loc="116:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2b722428bb48" loc="123:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2b7224288d18" loc="129:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2b7224287d80" loc="132:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2b72242c3c80" loc="138:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2b722428c9a8" loc="120:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2b7224293a40" loc="89:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b72242904e0" loc="109:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b7224290270" loc="109:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b72242e4748" loc="95:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b7224320020" loc="105:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x2b72243801d8" loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b722437d578" loc="87:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2b7224341328" loc="79:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b722437c780" loc="91:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b722437c020" loc="88:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b722437dc78" loc="88:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2b722437e4c0" loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b722437e250" loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b722437a290" loc="92:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b722437a020" loc="92:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2b7224341a58" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x2b722437ede8" loc="84:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b722437eb78" loc="84:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2b7224380b00" loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b7224380890" loc="82:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b7224507bb0" loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7224507620" loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b7224507930" loc="75:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b72245002d8" loc="125:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="115:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7224502c90" loc="125:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b7224500020" loc="125:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b7224502488" loc="112:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="102:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b72245040a8" loc="89:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="77:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7224505e08" loc="89:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b72245035c8" loc="100:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="91:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7224503020" loc="100:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b7224503348" loc="100:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2b72245792a0" loc="31:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b722457abb0" loc="31:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2b7224579020" loc="31:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2b722457b4a0" loc="15:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2b722457a2e0" loc="23:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b722457bcb8" loc="23:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b722391d510"/>
                <typename><typedef-ref name="message_t" ref="0x2b722391baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2b722457a060" loc="23:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b7224590e38" loc="95:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b722458d600" loc="105:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2b722458b328" loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b722458fbc8" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2b7224595258" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2b7224594660" loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2b7224591290" loc="94:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b7224591020" loc="94:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2b7224594e78" loc="79:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2b7224595d48" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b7224595ad8" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2b7224591a88" loc="100:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2b72245926f8" loc="85:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2b722459c020" loc="71:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2b722459c8d8" loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2b722459d668" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2b722459d3f8" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2b722459b430" loc="91:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b722459b1c0" loc="91:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2b7224599030" loc="62:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2b7224599bd8" loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b7224599968" loc="69:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2b72245976a0" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b7224597430" loc="80:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b72246c22a0" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b72246c6c40" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b72246c2020" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b72246bfc28" loc="79:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b72246bf9b8" loc="79:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b72246bd988" loc="90:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b72246bd3e8" loc="90:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b72246bd708" loc="90:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b72246be948" loc="65:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b72246bc2b0" loc="99:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b72246ba898" loc="99:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b72246babb8" loc="99:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b72246bc020" loc="99:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b72246bf258" loc="72:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b72246c1a18" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b72246c1140" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b72246c1460" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b7222cfeb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b72246c1788" loc="57:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b72246ea630" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b72246ea3c0" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b72246e9408" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b72246eae20" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b72246e9188" loc="56:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b7224725e70" loc="44:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b7224725070" loc="42:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b72247214a8" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b7224721238" loc="49:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b72247224e8" loc="47:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b72247261d8" loc="40:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b72247268f8" loc="41:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b7224725790" loc="43:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b72235f4ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2b7224723578" loc="45:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b72235cf9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b7224723e30" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b7224723bc0" loc="46:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b7224722b98" loc="48:/home/ubuntu/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7222cfe160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
